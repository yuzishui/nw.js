<Transmate Version="1.0.0.0"><head utxVersion="1.0u" Tag="0" CreationTime="2016/3/9 20:42:15" FileIndex="0" SourceLanguage="英语" TargetLanguage="中文简体" SourceDocumentPath="D:\workspace_github\nw.js\nw.js\Package and Distribute\Package and Distribute.txt" RowIndex="0" HideOrNot="False" TermFileType="" TermFileId="" TheOriginalWord="853" TheNumberWords="0" ToTranslate="0" FileType="0" MemFileOutType="" MemFileOutId="" MemFileInType="" MemFileInId="" LitePath="D:\workspace_github\nw.js\nw.js\FileInformation.ueprj" CustomTermPath="" PreviewPath="D:\workspace_github\nw.js\nw.js\Package and Distribute\Package and DistributePreview.html"><links /></head><body><tu PI="1" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl># Package and Distribute {: </sl><tl /><tsl /><prv /><sfl># Package and Distribute {: .doctitle}</sfl></tu><tu PI="1" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>.doctitle}</sl><tl /><tsl /><prv /><sfl># Package and Distribute {: .doctitle}</sfl></tu><tu PI="2" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>---</sl><tl /><tsl /><prv /><sfl>---</sfl></tu><tu PI="3" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>[TOC]</sl><tl /><tsl /><prv /><sfl>[TOC]</sfl></tu><tu PI="4" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>This document guides you how to package and distribute NW.js based app.</sl><tl /><tsl /><prv /><sfl>This document guides you how to package and distribute NW.js based app.</sfl></tu><tu PI="5" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Quick Start</sl><tl /><tsl /><prv /><sfl>## Quick Start</sfl></tu><tu PI="6" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can use [`nw-builder`](https://github.com/nwjs/nw-builder) to quickly generate a package for you.</sl><tl /><tsl /><prv /><sfl>You can use [`nw-builder`](https://github.com/nwjs/nw-builder) to quickly generate a package for you.</sfl></tu><tu PI="7" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>1. [Prepare your app](#prepare-your-app) as below.</sl><tl /><tsl /><prv /><sfl>1. [Prepare your app](#prepare-your-app) as below.</sfl></tu><tu PI="8" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>2. Install `nw-builder` with `npm install -g nw-builder`</sl><tl /><tsl /><prv /><sfl>2. Install `nw-builder` with `npm install -g nw-builder`</sfl></tu><tu PI="9" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>3. Package your app with `nwbuild -p linux64 /path/to/your/app`</sl><tl /><tsl /><prv /><sfl>3. Package your app with `nwbuild -p linux64 /path/to/your/app`</sfl></tu><tu PI="10" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Your app can be found in `./build` folder.</sl><tl /><tsl /><prv /><sfl>Your app can be found in `./build` folder.</sfl></tu><tu PI="11" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Prepare Your App</sl><tl /><tsl /><prv /><sfl>## Prepare Your App</sfl></tu><tu PI="12" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Before packaging, you should prepare all necessary files on hands. </sl><tl /><tsl /><prv /><sfl>Before packaging, you should prepare all necessary files on hands. Check out following checklist to make sure you didn't miss anything:</sfl></tu><tu PI="12" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Check out following checklist to make sure you didn't miss anything:</sl><tl /><tsl /><prv /><sfl>Before packaging, you should prepare all necessary files on hands. Check out following checklist to make sure you didn't miss anything:</sfl></tu><tu PI="13" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* [ ] Source code and resources</sl><tl /><tsl /><prv /><sfl>* [ ] Source code and resources</sfl></tu><tu PI="14" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* [ ] Install NPM modules with `npm install`</sl><tl /><tsl /><prv /><sfl>* [ ] Install NPM modules with `npm install`</sfl></tu><tu PI="15" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* [ ] [Rebuild native Node modules](Advanced/Use Native Node Modules.md)</sl><tl /><tsl /><prv /><sfl>* [ ] [Rebuild native Node modules](Advanced/Use Native Node Modules.md)</sfl></tu><tu PI="16" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* [ ] [Build NaCl binaries](Advanced/Use NaCl in NW.js.md)</sl><tl /><tsl /><prv /><sfl>* [ ] [Build NaCl binaries](Advanced/Use NaCl in NW.js.md)</sfl></tu><tu PI="17" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* [ ] [Compile source code](Advanced/Protect JavaScript Source Code.md) and remove the original files</sl><tl /><tsl /><prv /><sfl>* [ ] [Compile source code](Advanced/Protect JavaScript Source Code.md) and remove the original files</sfl></tu><tu PI="18" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* [ ] Icon used in [manifest file](../References/Manifest Format.md#icon)</sl><tl /><tsl /><prv /><sfl>* [ ] Icon used in [manifest file](../References/Manifest Format.md#icon)</sfl></tu><tu PI="19" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! warning</sfl></tu><tu PI="19" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>warning</sl><tl /><tsl /><prv /><sfl>!!! warning</sfl></tu><tu PI="20" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    Do not assume your `node_modules` that target one platform work _as is_ in all platforms. </sl><tl /><tsl /><prv /><sfl>    Do not assume your `node_modules` that target one platform work _as is_ in all platforms. For instance `node-email-templates` has specific Windows &amp; Mac OS X`npm install` commands. Besides, it requires python to install properly, which is not installed by default on Windows.</sfl></tu><tu PI="20" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>For instance `node-email-templates` has specific Windows &amp; Mac OS X`npm install` commands. </sl><tl /><tsl /><prv /><sfl>    Do not assume your `node_modules` that target one platform work _as is_ in all platforms. For instance `node-email-templates` has specific Windows &amp; Mac OS X`npm install` commands. Besides, it requires python to install properly, which is not installed by default on Windows.</sfl></tu><tu PI="20" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Besides, it requires python to install properly, which is not installed by default on Windows.</sl><tl /><tsl /><prv /><sfl>    Do not assume your `node_modules` that target one platform work _as is_ in all platforms. For instance `node-email-templates` has specific Windows &amp; Mac OS X`npm install` commands. Besides, it requires python to install properly, which is not installed by default on Windows.</sfl></tu><tu PI="21" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    As a rule of thumb **`npm install` your `package.json` on each platform you target** to ensure everything works as expected.</sl><tl /><tsl /><prv /><sfl>    As a rule of thumb **`npm install` your `package.json` on each platform you target** to ensure everything works as expected.</sfl></tu><tu PI="22" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! note "Filename and Path"</sfl></tu><tu PI="22" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>note "Filename and Path"</sl><tl /><tsl /><prv /><sfl>!!! note "Filename and Path"</sfl></tu><tu PI="23" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    On most Linux and some Mac OS X, the file system is **case sensitive**. </sl><tl /><tsl /><prv /><sfl>    On most Linux and some Mac OS X, the file system is **case sensitive**. That means `test.js` and `Test.js` are different files. Make sure the paths and filenames used in your app have the right case. Otherwise your app may look bad or crash on those file systems.</sfl></tu><tu PI="23" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>That means `test.js` and `Test.js` are different files. </sl><tl /><tsl /><prv /><sfl>    On most Linux and some Mac OS X, the file system is **case sensitive**. That means `test.js` and `Test.js` are different files. Make sure the paths and filenames used in your app have the right case. Otherwise your app may look bad or crash on those file systems.</sfl></tu><tu PI="23" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Make sure the paths and filenames used in your app have the right case. </sl><tl /><tsl /><prv /><sfl>    On most Linux and some Mac OS X, the file system is **case sensitive**. That means `test.js` and `Test.js` are different files. Make sure the paths and filenames used in your app have the right case. Otherwise your app may look bad or crash on those file systems.</sfl></tu><tu PI="23" MatchPercent="" Bindex="4" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Otherwise your app may look bad or crash on those file systems.</sl><tl /><tsl /><prv /><sfl>    On most Linux and some Mac OS X, the file system is **case sensitive**. That means `test.js` and `Test.js` are different files. Make sure the paths and filenames used in your app have the right case. Otherwise your app may look bad or crash on those file systems.</sfl></tu><tu PI="24" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! note "Long Path on Windows"</sfl></tu><tu PI="24" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>note "Long Path on Windows"</sl><tl /><tsl /><prv /><sfl>!!! note "Long Path on Windows"</sfl></tu><tu PI="25" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    The length of path used in your app may exceed the maximum length (260 characters) on Windows. </sl><tl /><tsl /><prv /><sfl>    The length of path used in your app may exceed the maximum length (260 characters) on Windows. That will cause various build failures. This usually happens during installing dependencies with `npm install` using older version of NPM (&lt;3.0). Please build your app in the root directory, like `C:\build\`, to avoid this issue as much as possible.</sfl></tu><tu PI="25" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>That will cause various build failures. </sl><tl /><tsl /><prv /><sfl>    The length of path used in your app may exceed the maximum length (260 characters) on Windows. That will cause various build failures. This usually happens during installing dependencies with `npm install` using older version of NPM (&lt;3.0). Please build your app in the root directory, like `C:\build\`, to avoid this issue as much as possible.</sfl></tu><tu PI="25" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>This usually happens during installing dependencies with `npm install` using older version of NPM (&lt;3.0). </sl><tl /><tsl /><prv /><sfl>    The length of path used in your app may exceed the maximum length (260 characters) on Windows. That will cause various build failures. This usually happens during installing dependencies with `npm install` using older version of NPM (&lt;3.0). Please build your app in the root directory, like `C:\build\`, to avoid this issue as much as possible.</sfl></tu><tu PI="25" MatchPercent="" Bindex="4" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Please build your app in the root directory, like `C:\build\`, to avoid this issue as much as possible.</sl><tl /><tsl /><prv /><sfl>    The length of path used in your app may exceed the maximum length (260 characters) on Windows. That will cause various build failures. This usually happens during installing dependencies with `npm install` using older version of NPM (&lt;3.0). Please build your app in the root directory, like `C:\build\`, to avoid this issue as much as possible.</sfl></tu><tu PI="26" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Prepare NW.js</sl><tl /><tsl /><prv /><sfl>## Prepare NW.js</sfl></tu><tu PI="27" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You have to redistribute NW.js with your app to get your app running. </sl><tl /><tsl /><prv /><sfl>You have to redistribute NW.js with your app to get your app running. NW.js provided multiple [build flavors](Advanced/Build Flavors.md) for different requirements and package size. Choose the proper build flavor for your product or [build it from source code](../For Developers/Building NW.js.md).</sfl></tu><tu PI="27" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>NW.js provided multiple [build flavors](Advanced/Build Flavors.md) for different requirements and package size. </sl><tl /><tsl /><prv /><sfl>You have to redistribute NW.js with your app to get your app running. NW.js provided multiple [build flavors](Advanced/Build Flavors.md) for different requirements and package size. Choose the proper build flavor for your product or [build it from source code](../For Developers/Building NW.js.md).</sfl></tu><tu PI="27" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Choose the proper build flavor for your product or [build it from source code](../For Developers/Building NW.js.md).</sl><tl /><tsl /><prv /><sfl>You have to redistribute NW.js with your app to get your app running. NW.js provided multiple [build flavors](Advanced/Build Flavors.md) for different requirements and package size. Choose the proper build flavor for your product or [build it from source code](../For Developers/Building NW.js.md).</sfl></tu><tu PI="28" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>All files in the downloaded package should be redistributed with your product, except `nwjc` or `nwjc.exe` in SDK flavor.</sl><tl /><tsl /><prv /><sfl>All files in the downloaded package should be redistributed with your product, except `nwjc` or `nwjc.exe` in SDK flavor.</sfl></tu><tu PI="29" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Package Your App</sl><tl /><tsl /><prv /><sfl>## Package Your App</sfl></tu><tu PI="30" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>There two options to pack your app: </sl><tl /><tsl /><prv /><sfl>There two options to pack your app: plain files or zip file.</sfl></tu><tu PI="30" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>plain files or zip file.</sl><tl /><tsl /><prv /><sfl>There two options to pack your app: plain files or zip file.</sfl></tu><tu PI="31" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Package Option 1. </sl><tl /><tsl /><prv /><sfl>### Package Option 1. Plain Files (Recommended)</sfl></tu><tu PI="31" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Plain Files (Recommended)</sl><tl /><tsl /><prv /><sfl>### Package Option 1. Plain Files (Recommended)</sfl></tu><tu PI="32" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>On Windows and Linux, you can put the files of your app in the same folder of NW.js binaries and then ship them to your users. </sl><tl /><tsl /><prv /><sfl>On Windows and Linux, you can put the files of your app in the same folder of NW.js binaries and then ship them to your users. Make sure `nw` (or `nw.exe`) is in the same folder as `package.json`. Or you can put the files of your app in a folder named `package.nw` in the same folder as `nw` (or `nw.exe`).</sfl></tu><tu PI="32" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Make sure `nw` (or `nw.exe`) is in the same folder as `package.json`. </sl><tl /><tsl /><prv /><sfl>On Windows and Linux, you can put the files of your app in the same folder of NW.js binaries and then ship them to your users. Make sure `nw` (or `nw.exe`) is in the same folder as `package.json`. Or you can put the files of your app in a folder named `package.nw` in the same folder as `nw` (or `nw.exe`).</sfl></tu><tu PI="32" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Or you can put the files of your app in a folder named `package.nw` in the same folder as `nw` (or `nw.exe`).</sl><tl /><tsl /><prv /><sfl>On Windows and Linux, you can put the files of your app in the same folder of NW.js binaries and then ship them to your users. Make sure `nw` (or `nw.exe`) is in the same folder as `package.json`. Or you can put the files of your app in a folder named `package.nw` in the same folder as `nw` (or `nw.exe`).</sfl></tu><tu PI="33" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>On Mac, put the files of your app into a folder named `app.nw` in `nwjs.app/Contents/Resources/` and done.</sl><tl /><tsl /><prv /><sfl>On Mac, put the files of your app into a folder named `app.nw` in `nwjs.app/Contents/Resources/` and done.</sfl></tu><tu PI="34" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>It's the recommended way to pack your app.</sl><tl /><tsl /><prv /><sfl>It's the recommended way to pack your app.</sfl></tu><tu PI="35" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Package Option 2. </sl><tl /><tsl /><prv /><sfl>### Package Option 2. Zip File</sfl></tu><tu PI="35" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Zip File</sl><tl /><tsl /><prv /><sfl>### Package Option 2. Zip File</sfl></tu><tu PI="36" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can package all the files into a zip file and rename it as `package.nw`. </sl><tl /><tsl /><prv /><sfl>You can package all the files into a zip file and rename it as `package.nw`. And put it along with NW.js binaries for Windows and Linux. For Mac, put `package.nw` in `nwjs.app/Contents/Resources/`.</sfl></tu><tu PI="36" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>And put it along with NW.js binaries for Windows and Linux. </sl><tl /><tsl /><prv /><sfl>You can package all the files into a zip file and rename it as `package.nw`. And put it along with NW.js binaries for Windows and Linux. For Mac, put `package.nw` in `nwjs.app/Contents/Resources/`.</sfl></tu><tu PI="36" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>For Mac, put `package.nw` in `nwjs.app/Contents/Resources/`.</sl><tl /><tsl /><prv /><sfl>You can package all the files into a zip file and rename it as `package.nw`. And put it along with NW.js binaries for Windows and Linux. For Mac, put `package.nw` in `nwjs.app/Contents/Resources/`.</sfl></tu><tu PI="37" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! warning "Start Slow with Big Package or Too Many Files"</sfl></tu><tu PI="37" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>warning "Start Slow with Big Package or Too Many Files"</sl><tl /><tsl /><prv /><sfl>!!! warning "Start Slow with Big Package or Too Many Files"</sfl></tu><tu PI="38" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    At starting time, NW.js will unzip the package into temp folder and load it from there. </sl><tl /><tsl /><prv /><sfl>    At starting time, NW.js will unzip the package into temp folder and load it from there. So it will start slower if your package is big or contains too many files.</sfl></tu><tu PI="38" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>So it will start slower if your package is big or contains too many files.</sl><tl /><tsl /><prv /><sfl>    At starting time, NW.js will unzip the package into temp folder and load it from there. So it will start slower if your package is big or contains too many files.</sfl></tu><tu PI="39" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>On Windows and Linux, you can even hide the zip file by appending the zip file to the end of `nw` or `nw.exe`.</sl><tl /><tsl /><prv /><sfl>On Windows and Linux, you can even hide the zip file by appending the zip file to the end of `nw` or `nw.exe`.</sfl></tu><tu PI="40" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can run following command on Windows to achieve this:</sl><tl /><tsl /><prv /><sfl>You can run following command on Windows to achieve this:</sfl></tu><tu PI="41" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```batch</sl><tl /><tsl /><prv /><sfl>```batch</sfl></tu><tu PI="42" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>copy /b nw.exe+package.nw app.exe</sl><tl /><tsl /><prv /><sfl>copy /b nw.exe+package.nw app.exe</sfl></tu><tu PI="43" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="44" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>or following command on Linux:</sl><tl /><tsl /><prv /><sfl>or following command on Linux:</sfl></tu><tu PI="45" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```bash</sl><tl /><tsl /><prv /><sfl>```bash</sfl></tu><tu PI="46" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>cat nw app.nw &gt; app &amp;&amp; chmod +x app </sl><tl /><tsl /><prv /><sfl>cat nw app.nw &gt; app &amp;&amp; chmod +x app </sfl></tu><tu PI="47" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="48" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Platform Specific Steps</sl><tl /><tsl /><prv /><sfl>## Platform Specific Steps</sfl></tu><tu PI="49" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Windows</sl><tl /><tsl /><prv /><sfl>### Windows</sfl></tu><tu PI="50" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Icon for `nw.exe` can be replaced with tools like [Resource Hacker](http://www.angusj.com/resourcehacker/), [nw-builder](https://github.com/mllrsohn/node-webkit-builder) and [node-winresourcer](https://github.com/felicienfrancois/node-winresourcer).</sl><tl /><tsl /><prv /><sfl>Icon for `nw.exe` can be replaced with tools like [Resource Hacker](http://www.angusj.com/resourcehacker/), [nw-builder](https://github.com/mllrsohn/node-webkit-builder) and [node-winresourcer](https://github.com/felicienfrancois/node-winresourcer).</sfl></tu><tu PI="51" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can create a installer to deploy all necessary files onto end user's system. </sl><tl /><tsl /><prv /><sfl>You can create a installer to deploy all necessary files onto end user's system. You can use [Windows Installer](https://msdn.microsoft.com/en-us/library/cc185688(VS.85).aspx), [NSIS](http://nsis.sourceforge.net/Main_Page) or [Inno Setup](http://www.jrsoftware.org/isinfo.php).</sfl></tu><tu PI="51" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can use [Windows Installer](https://msdn.microsoft.com/en-us/library/cc185688(VS.85).aspx), [NSIS](http://nsis.sourceforge.net/Main_Page) or [Inno Setup](http://www.jrsoftware.org/isinfo.php).</sl><tl /><tsl /><prv /><sfl>You can create a installer to deploy all necessary files onto end user's system. You can use [Windows Installer](https://msdn.microsoft.com/en-us/library/cc185688(VS.85).aspx), [NSIS](http://nsis.sourceforge.net/Main_Page) or [Inno Setup](http://www.jrsoftware.org/isinfo.php).</sfl></tu><tu PI="52" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Linux</sl><tl /><tsl /><prv /><sfl>### Linux</sfl></tu><tu PI="53" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>On Linux, you need to create proper [`.desktop` file](https://wiki.archlinux.org/index.php/Desktop_Entries).</sl><tl /><tsl /><prv /><sfl>On Linux, you need to create proper [`.desktop` file](https://wiki.archlinux.org/index.php/Desktop_Entries).</sfl></tu><tu PI="54" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>To create a self-extractable installer script, you can use scripts like [`shar`](https://en.wikipedia.org/wiki/Shar) or [`makeself`](http://stephanepeter.com/makeself/).</sl><tl /><tsl /><prv /><sfl>To create a self-extractable installer script, you can use scripts like [`shar`](https://en.wikipedia.org/wiki/Shar) or [`makeself`](http://stephanepeter.com/makeself/).</sfl></tu><tu PI="55" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>To distribute your app through the package management sysmtem, like `apt`, `yum`, `pacman` etc, please follow their official documents to create the packages.</sl><tl /><tsl /><prv /><sfl>To distribute your app through the package management sysmtem, like `apt`, `yum`, `pacman` etc, please follow their official documents to create the packages.</sfl></tu><tu PI="56" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Mac OS X</sl><tl /><tsl /><prv /><sfl>### Mac OS X</sfl></tu><tu PI="57" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>On Mac OS X, you need to modify following files to have your own icon and boundle id:</sl><tl /><tsl /><prv /><sfl>On Mac OS X, you need to modify following files to have your own icon and boundle id:</sfl></tu><tu PI="58" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `Contents/Resources/nw.icns`: </sl><tl /><tsl /><prv /><sfl>* `Contents/Resources/nw.icns`: icon of your app. `nw.icns` is in [Apple Icon Image Format](https://en.wikipedia.org/wiki/Apple_Icon_Image_format). You can convert your icon in PNG/JPEG format into ICNS by using tools like [Image2Icon](http://www.img2icnsapp.com/).</sfl></tu><tu PI="58" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>icon of your app. </sl><tl /><tsl /><prv /><sfl>* `Contents/Resources/nw.icns`: icon of your app. `nw.icns` is in [Apple Icon Image Format](https://en.wikipedia.org/wiki/Apple_Icon_Image_format). You can convert your icon in PNG/JPEG format into ICNS by using tools like [Image2Icon](http://www.img2icnsapp.com/).</sfl></tu><tu PI="58" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`nw.icns` is in [Apple Icon Image Format](https://en.wikipedia.org/wiki/Apple_Icon_Image_format). </sl><tl /><tsl /><prv /><sfl>* `Contents/Resources/nw.icns`: icon of your app. `nw.icns` is in [Apple Icon Image Format](https://en.wikipedia.org/wiki/Apple_Icon_Image_format). You can convert your icon in PNG/JPEG format into ICNS by using tools like [Image2Icon](http://www.img2icnsapp.com/).</sfl></tu><tu PI="58" MatchPercent="" Bindex="4" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can convert your icon in PNG/JPEG format into ICNS by using tools like [Image2Icon](http://www.img2icnsapp.com/).</sl><tl /><tsl /><prv /><sfl>* `Contents/Resources/nw.icns`: icon of your app. `nw.icns` is in [Apple Icon Image Format](https://en.wikipedia.org/wiki/Apple_Icon_Image_format). You can convert your icon in PNG/JPEG format into ICNS by using tools like [Image2Icon](http://www.img2icnsapp.com/).</sfl></tu><tu PI="59" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `Contents/Info.plist`: </sl><tl /><tsl /><prv /><sfl>* `Contents/Info.plist`: the apple package description file. You can view [Implementing Cocoa's Standard About Panel](http://cocoadevcentral.com/articles/000071.php) on how this file will influence your app and what fields you should modify.</sfl></tu><tu PI="59" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>the apple package description file. </sl><tl /><tsl /><prv /><sfl>* `Contents/Info.plist`: the apple package description file. You can view [Implementing Cocoa's Standard About Panel](http://cocoadevcentral.com/articles/000071.php) on how this file will influence your app and what fields you should modify.</sfl></tu><tu PI="59" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can view [Implementing Cocoa's Standard About Panel](http://cocoadevcentral.com/articles/000071.php) on how this file will influence your app and what fields you should modify.</sl><tl /><tsl /><prv /><sfl>* `Contents/Info.plist`: the apple package description file. You can view [Implementing Cocoa's Standard About Panel](http://cocoadevcentral.com/articles/000071.php) on how this file will influence your app and what fields you should modify.</sfl></tu><tu PI="60" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>And you should sign you Mac app. </sl><tl /><tsl /><prv /><sfl>And you should sign you Mac app. Or the user won't launch the app if Gatekeeper is turned on. See [Signed Apps or Installer Packages](https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/AppDistributionGuide/DistributingApplicationsOutside/DistributingApplicationsOutside.html) for details.</sfl></tu><tu PI="60" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Or the user won't launch the app if Gatekeeper is turned on. </sl><tl /><tsl /><prv /><sfl>And you should sign you Mac app. Or the user won't launch the app if Gatekeeper is turned on. See [Signed Apps or Installer Packages](https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/AppDistributionGuide/DistributingApplicationsOutside/DistributingApplicationsOutside.html) for details.</sfl></tu><tu PI="60" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Signed Apps or Installer Packages](https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/AppDistributionGuide/DistributingApplicationsOutside/DistributingApplicationsOutside.html) for details.</sl><tl /><tsl /><prv /><sfl>And you should sign you Mac app. Or the user won't launch the app if Gatekeeper is turned on. See [Signed Apps or Installer Packages](https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/AppDistributionGuide/DistributingApplicationsOutside/DistributingApplicationsOutside.html) for details.</sfl></tu><tu PI="61" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## References</sl><tl /><tsl /><prv /><sfl>## References</sfl></tu><tu PI="62" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [wiki of NW.js](https://github.com/nwjs/nw.js/wiki/How-to-package-and-distribute-your-apps) for more tools of packaging your app.</sl><tl /><tsl /><prv /><sfl>See [wiki of NW.js](https://github.com/nwjs/nw.js/wiki/How-to-package-and-distribute-your-apps) for more tools of packaging your app.</sfl></tu></body></Transmate>
<Transmate Version="1.0.0.0"><head utxVersion="1.0u" Tag="0" CreationTime="2016/3/9 20:41:27" FileIndex="0" SourceLanguage="英语" TargetLanguage="中文简体" SourceDocumentPath="D:\workspace_github\nw.js\nw.js\Screen\Screen.txt" RowIndex="0" HideOrNot="False" TermFileType="" TermFileId="" TheOriginalWord="930" TheNumberWords="0" ToTranslate="0" FileType="0" MemFileOutType="" MemFileOutId="" MemFileInType="" MemFileInId="" LitePath="D:\workspace_github\nw.js\nw.js\FileInformation.ueprj" CustomTermPath="" PreviewPath="D:\workspace_github\nw.js\nw.js\Screen\ScreenPreview.html"><links /></head><body><tu PI="1" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl># Screen {: </sl><tl /><tsl /><prv /><sfl># Screen {: .doctitle}</sfl></tu><tu PI="1" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>.doctitle}</sl><tl /><tsl /><prv /><sfl># Screen {: .doctitle}</sfl></tu><tu PI="2" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>---</sl><tl /><tsl /><prv /><sfl>---</sfl></tu><tu PI="3" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>[TOC]</sl><tl /><tsl /><prv /><sfl>[TOC]</sfl></tu><tu PI="4" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`Screen` is an instance of EventEmitter object, and you're able to use `Screen.on(...)` to respond to native screen's events.</sl><tl /><tsl /><prv /><sfl>`Screen` is an instance of EventEmitter object, and you're able to use `Screen.on(...)` to respond to native screen's events.</sfl></tu><tu PI="5" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`Screen` is a singleton object, need to be initiated once by calling `nw.Screen.Init()`</sl><tl /><tsl /><prv /><sfl>`Screen` is a singleton object, need to be initiated once by calling `nw.Screen.Init()`</sfl></tu><tu PI="6" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Synopsis</sl><tl /><tsl /><prv /><sfl>## Synopsis</sfl></tu><tu PI="7" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```javascript</sl><tl /><tsl /><prv /><sfl>```javascript</sfl></tu><tu PI="8" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>//init must be called once during startup, before any function to nw.Screen can be called</sl><tl /><tsl /><prv /><sfl>//init must be called once during startup, before any function to nw.Screen can be called</sfl></tu><tu PI="9" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>nw.Screen.Init();</sl><tl /><tsl /><prv /><sfl>nw.Screen.Init();</sfl></tu><tu PI="10" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>var screenCB = {</sl><tl /><tsl /><prv /><sfl>var screenCB = {</sfl></tu><tu PI="11" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  onDisplayBoundsChanged: </sl><tl /><tsl /><prv /><sfl>  onDisplayBoundsChanged: function(screen) {</sfl></tu><tu PI="11" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>function(screen) {</sl><tl /><tsl /><prv /><sfl>  onDisplayBoundsChanged: function(screen) {</sfl></tu><tu PI="12" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    console.log('displayBoundsChanged', screen);</sl><tl /><tsl /><prv /><sfl>    console.log('displayBoundsChanged', screen);</sfl></tu><tu PI="13" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  },</sl><tl /><tsl /><prv /><sfl>  },</sfl></tu><tu PI="14" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  onDisplayAdded: </sl><tl /><tsl /><prv /><sfl>  onDisplayAdded: function(screen) {</sfl></tu><tu PI="14" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>function(screen) {</sl><tl /><tsl /><prv /><sfl>  onDisplayAdded: function(screen) {</sfl></tu><tu PI="15" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    console.log('displayAdded', screen);</sl><tl /><tsl /><prv /><sfl>    console.log('displayAdded', screen);</sfl></tu><tu PI="16" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  },</sl><tl /><tsl /><prv /><sfl>  },</sfl></tu><tu PI="17" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  onDisplayRemoved: </sl><tl /><tsl /><prv /><sfl>  onDisplayRemoved: function(screen) {</sfl></tu><tu PI="17" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>function(screen) {</sl><tl /><tsl /><prv /><sfl>  onDisplayRemoved: function(screen) {</sfl></tu><tu PI="18" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    console.log('displayRemoved', screen)</sl><tl /><tsl /><prv /><sfl>    console.log('displayRemoved', screen)</sfl></tu><tu PI="19" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  }</sl><tl /><tsl /><prv /><sfl>  }</sfl></tu><tu PI="20" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>};</sl><tl /><tsl /><prv /><sfl>};</sfl></tu><tu PI="21" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// listen to screen events</sl><tl /><tsl /><prv /><sfl>// listen to screen events</sfl></tu><tu PI="22" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>nw.Screen.on('displayBoundsChanged', screenCB.onDisplayBoundsChanged);</sl><tl /><tsl /><prv /><sfl>nw.Screen.on('displayBoundsChanged', screenCB.onDisplayBoundsChanged);</sfl></tu><tu PI="23" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>nw.Screen.on('displayAdded', screenCB.onDisplayAdded);</sl><tl /><tsl /><prv /><sfl>nw.Screen.on('displayAdded', screenCB.onDisplayAdded);</sfl></tu><tu PI="24" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>nw.Screen.on('displayRemoved', screenCB.onDisplayRemoved);</sl><tl /><tsl /><prv /><sfl>nw.Screen.on('displayRemoved', screenCB.onDisplayRemoved);</sfl></tu><tu PI="25" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="26" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Screen.Init()</sl><tl /><tsl /><prv /><sfl>## Screen.Init()</sfl></tu><tu PI="27" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Init the Screen singleton object, you only need to call this once</sl><tl /><tsl /><prv /><sfl>Init the Screen singleton object, you only need to call this once</sfl></tu><tu PI="28" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Screen.screens</sl><tl /><tsl /><prv /><sfl>## Screen.screens</sfl></tu><tu PI="29" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Get the array of screen (number of screen connected to the computer)</sl><tl /><tsl /><prv /><sfl>Get the array of screen (number of screen connected to the computer)</sfl></tu><tu PI="30" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>screen has following structure:</sl><tl /><tsl /><prv /><sfl>screen has following structure:</sfl></tu><tu PI="31" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```javascript</sl><tl /><tsl /><prv /><sfl>```javascript</sfl></tu><tu PI="32" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>screen {</sl><tl /><tsl /><prv /><sfl>screen {</sfl></tu><tu PI="33" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// unique id for a screen</sl><tl /><tsl /><prv /><sfl>// unique id for a screen</sfl></tu><tu PI="34" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  id: </sl><tl /><tsl /><prv /><sfl>  id: int,</sfl></tu><tu PI="34" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>int,</sl><tl /><tsl /><prv /><sfl>  id: int,</sfl></tu><tu PI="35" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// physical screen resolution, can be negative, not necessarily start from 0,depending on screen arrangement</sl><tl /><tsl /><prv /><sfl>// physical screen resolution, can be negative, not necessarily start from 0,depending on screen arrangement</sfl></tu><tu PI="36" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  bounds: </sl><tl /><tsl /><prv /><sfl>  bounds: {</sfl></tu><tu PI="36" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>{</sl><tl /><tsl /><prv /><sfl>  bounds: {</sfl></tu><tu PI="37" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    x: </sl><tl /><tsl /><prv /><sfl>    x: int,</sfl></tu><tu PI="37" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>int,</sl><tl /><tsl /><prv /><sfl>    x: int,</sfl></tu><tu PI="38" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    y: </sl><tl /><tsl /><prv /><sfl>    y: int,</sfl></tu><tu PI="38" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>int,</sl><tl /><tsl /><prv /><sfl>    y: int,</sfl></tu><tu PI="39" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    width: </sl><tl /><tsl /><prv /><sfl>    width: int,</sfl></tu><tu PI="39" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>int,</sl><tl /><tsl /><prv /><sfl>    width: int,</sfl></tu><tu PI="40" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    height: </sl><tl /><tsl /><prv /><sfl>    height: int</sfl></tu><tu PI="40" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>int</sl><tl /><tsl /><prv /><sfl>    height: int</sfl></tu><tu PI="41" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  },</sl><tl /><tsl /><prv /><sfl>  },</sfl></tu><tu PI="42" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// useable area within the screen bound</sl><tl /><tsl /><prv /><sfl>// useable area within the screen bound</sfl></tu><tu PI="43" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  work_area: </sl><tl /><tsl /><prv /><sfl>  work_area: {</sfl></tu><tu PI="43" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>{</sl><tl /><tsl /><prv /><sfl>  work_area: {</sfl></tu><tu PI="44" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    x: </sl><tl /><tsl /><prv /><sfl>    x: int,</sfl></tu><tu PI="44" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>int,</sl><tl /><tsl /><prv /><sfl>    x: int,</sfl></tu><tu PI="45" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    y: </sl><tl /><tsl /><prv /><sfl>    y: int,</sfl></tu><tu PI="45" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>int,</sl><tl /><tsl /><prv /><sfl>    y: int,</sfl></tu><tu PI="46" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    width: </sl><tl /><tsl /><prv /><sfl>    width: int,</sfl></tu><tu PI="46" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>int,</sl><tl /><tsl /><prv /><sfl>    width: int,</sfl></tu><tu PI="47" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    height: </sl><tl /><tsl /><prv /><sfl>    height: int</sfl></tu><tu PI="47" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>int</sl><tl /><tsl /><prv /><sfl>    height: int</sfl></tu><tu PI="48" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  },</sl><tl /><tsl /><prv /><sfl>  },</sfl></tu><tu PI="49" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  scaleFactor: </sl><tl /><tsl /><prv /><sfl>  scaleFactor: float,</sfl></tu><tu PI="49" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>float,</sl><tl /><tsl /><prv /><sfl>  scaleFactor: float,</sfl></tu><tu PI="50" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  isBuiltIn: </sl><tl /><tsl /><prv /><sfl>  isBuiltIn: bool,</sfl></tu><tu PI="50" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>bool,</sl><tl /><tsl /><prv /><sfl>  isBuiltIn: bool,</sfl></tu><tu PI="51" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  rotation: </sl><tl /><tsl /><prv /><sfl>  rotation: int,</sfl></tu><tu PI="51" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>int,</sl><tl /><tsl /><prv /><sfl>  rotation: int,</sfl></tu><tu PI="52" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  touchSupport: </sl><tl /><tsl /><prv /><sfl>  touchSupport: int</sfl></tu><tu PI="52" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>int</sl><tl /><tsl /><prv /><sfl>  touchSupport: int</sfl></tu><tu PI="53" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>}</sl><tl /><tsl /><prv /><sfl>}</sfl></tu><tu PI="54" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="55" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Screen.chooseDesktopMedia (sources, callback)</sl><tl /><tsl /><prv /><sfl>## Screen.chooseDesktopMedia (sources, callback)</sfl></tu><tu PI="56" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `sources` `{String[]}` array of source types. </sl><tl /><tsl /><prv /><sfl>* `sources` `{String[]}` array of source types. Two types are supported by this API: `"screen"` and `"window"`.</sfl></tu><tu PI="56" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Two types are supported by this API: </sl><tl /><tsl /><prv /><sfl>* `sources` `{String[]}` array of source types. Two types are supported by this API: `"screen"` and `"window"`.</sfl></tu><tu PI="56" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`"screen"` and `"window"`.</sl><tl /><tsl /><prv /><sfl>* `sources` `{String[]}` array of source types. Two types are supported by this API: `"screen"` and `"window"`.</sfl></tu><tu PI="57" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `callback` `{Function}` callback function with chosed streamId. </sl><tl /><tsl /><prv /><sfl>* `callback` `{Function}` callback function with chosed streamId. streamId will be `false` if failed to execute or existing session is alive.</sfl></tu><tu PI="57" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>streamId will be `false` if failed to execute or existing session is alive.</sl><tl /><tsl /><prv /><sfl>* `callback` `{Function}` callback function with chosed streamId. streamId will be `false` if failed to execute or existing session is alive.</sfl></tu><tu PI="58" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! note</sfl></tu><tu PI="58" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>note</sl><tl /><tsl /><prv /><sfl>!!! note</sfl></tu><tu PI="59" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    Screen sharing by selection; </sl><tl /><tsl /><prv /><sfl>    Screen sharing by selection; Currently only working in Windows and OSX and some linux distribution.</sfl></tu><tu PI="59" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Currently only working in Windows and OSX and some linux distribution.</sl><tl /><tsl /><prv /><sfl>    Screen sharing by selection; Currently only working in Windows and OSX and some linux distribution.</sfl></tu><tu PI="60" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Example:</sl><tl /><tsl /><prv /><sfl>Example:</sfl></tu><tu PI="61" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```javascript</sl><tl /><tsl /><prv /><sfl>```javascript</sfl></tu><tu PI="62" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>nw.Screen.Init(); </sl><tl /><tsl /><prv /><sfl>nw.Screen.Init(); // you only need to call this once</sfl></tu><tu PI="62" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// you only need to call this once</sl><tl /><tsl /><prv /><sfl>nw.Screen.Init(); // you only need to call this once</sfl></tu><tu PI="63" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>nw.Screen.chooseDesktopMedia(["window","screen"], </sl><tl /><tsl /><prv /><sfl>nw.Screen.chooseDesktopMedia(["window","screen"], </sfl></tu><tu PI="64" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  function(streamId) {</sl><tl /><tsl /><prv /><sfl>  function(streamId) {</sfl></tu><tu PI="65" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    var vid_constraint = {</sl><tl /><tsl /><prv /><sfl>    var vid_constraint = {</sfl></tu><tu PI="66" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>      mandatory: </sl><tl /><tsl /><prv /><sfl>      mandatory: {</sfl></tu><tu PI="66" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>{</sl><tl /><tsl /><prv /><sfl>      mandatory: {</sfl></tu><tu PI="67" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>        chromeMediaSource: </sl><tl /><tsl /><prv /><sfl>        chromeMediaSource: 'desktop', </sfl></tu><tu PI="67" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'desktop', </sl><tl /><tsl /><prv /><sfl>        chromeMediaSource: 'desktop', </sfl></tu><tu PI="68" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>        chromeMediaSourceId: </sl><tl /><tsl /><prv /><sfl>        chromeMediaSourceId: streamId, </sfl></tu><tu PI="68" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>streamId, </sl><tl /><tsl /><prv /><sfl>        chromeMediaSourceId: streamId, </sfl></tu><tu PI="69" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>        maxWidth: </sl><tl /><tsl /><prv /><sfl>        maxWidth: 1920, </sfl></tu><tu PI="69" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>1920, </sl><tl /><tsl /><prv /><sfl>        maxWidth: 1920, </sfl></tu><tu PI="70" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>        maxHeight: </sl><tl /><tsl /><prv /><sfl>        maxHeight: 1080</sfl></tu><tu PI="70" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>1080</sl><tl /><tsl /><prv /><sfl>        maxHeight: 1080</sfl></tu><tu PI="71" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>      }, </sl><tl /><tsl /><prv /><sfl>      }, </sfl></tu><tu PI="72" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>      optional: </sl><tl /><tsl /><prv /><sfl>      optional: []</sfl></tu><tu PI="72" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>[]</sl><tl /><tsl /><prv /><sfl>      optional: []</sfl></tu><tu PI="73" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    };</sl><tl /><tsl /><prv /><sfl>    };</sfl></tu><tu PI="74" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    navigator.webkitGetUserMedia({audio: </sl><tl /><tsl /><prv /><sfl>    navigator.webkitGetUserMedia({audio: false, video: constraint}, success_func, fallback_func);</sfl></tu><tu PI="74" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>false, video: </sl><tl /><tsl /><prv /><sfl>    navigator.webkitGetUserMedia({audio: false, video: constraint}, success_func, fallback_func);</sfl></tu><tu PI="74" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>constraint}, success_func, fallback_func);</sl><tl /><tsl /><prv /><sfl>    navigator.webkitGetUserMedia({audio: false, video: constraint}, success_func, fallback_func);</sfl></tu><tu PI="75" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  }</sl><tl /><tsl /><prv /><sfl>  }</sfl></tu><tu PI="76" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>);</sl><tl /><tsl /><prv /><sfl>);</sfl></tu><tu PI="77" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="78" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Event: </sl><tl /><tsl /><prv /><sfl>## Event: displayBoundsChanged(screen)</sfl></tu><tu PI="78" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>displayBoundsChanged(screen)</sl><tl /><tsl /><prv /><sfl>## Event: displayBoundsChanged(screen)</sfl></tu><tu PI="79" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Emitted when the screen resolution, arrangement is changed, the callback is called with 1 argument `screen`. </sl><tl /><tsl /><prv /><sfl>Emitted when the screen resolution, arrangement is changed, the callback is called with 1 argument `screen`. See [Screen.screens](#screenscreens) for the format.</sfl></tu><tu PI="79" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Screen.screens](#screenscreens) for the format.</sl><tl /><tsl /><prv /><sfl>Emitted when the screen resolution, arrangement is changed, the callback is called with 1 argument `screen`. See [Screen.screens](#screenscreens) for the format.</sfl></tu><tu PI="80" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Event: </sl><tl /><tsl /><prv /><sfl>## Event: displayAdded (screen)</sfl></tu><tu PI="80" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>displayAdded (screen)</sl><tl /><tsl /><prv /><sfl>## Event: displayAdded (screen)</sfl></tu><tu PI="81" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Emitted when a new screen added, the callback is called with 1 argument `screen`. </sl><tl /><tsl /><prv /><sfl>Emitted when a new screen added, the callback is called with 1 argument `screen`. See [Screen.screens](#screenscreens) for the format.</sfl></tu><tu PI="81" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Screen.screens](#screenscreens) for the format.</sl><tl /><tsl /><prv /><sfl>Emitted when a new screen added, the callback is called with 1 argument `screen`. See [Screen.screens](#screenscreens) for the format.</sfl></tu><tu PI="82" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Event: </sl><tl /><tsl /><prv /><sfl>## Event: displayRemoved (screen)</sfl></tu><tu PI="82" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>displayRemoved (screen)</sl><tl /><tsl /><prv /><sfl>## Event: displayRemoved (screen)</sfl></tu><tu PI="83" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Emitted when existing screen removed, the callback is called with 1 argument `screen`. </sl><tl /><tsl /><prv /><sfl>Emitted when existing screen removed, the callback is called with 1 argument `screen`. See [Screen.screens](#screenscreens) for the format.</sfl></tu><tu PI="83" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Screen.screens](#screenscreens) for the format.</sl><tl /><tsl /><prv /><sfl>Emitted when existing screen removed, the callback is called with 1 argument `screen`. See [Screen.screens](#screenscreens) for the format.</sfl></tu><tu PI="84" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Screen.DesktopCaptureMonitor</sl><tl /><tsl /><prv /><sfl>## Screen.DesktopCaptureMonitor</sfl></tu><tu PI="85" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>This API behaves similar functions as `Screen.chooseDesktopMedia`. </sl><tl /><tsl /><prv /><sfl>This API behaves similar functions as `Screen.chooseDesktopMedia`. But it doesn't have GUI. You can use this API to monitor the changes of screens and windows on desktop and implement your own UI.</sfl></tu><tu PI="85" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>But it doesn't have GUI. </sl><tl /><tsl /><prv /><sfl>This API behaves similar functions as `Screen.chooseDesktopMedia`. But it doesn't have GUI. You can use this API to monitor the changes of screens and windows on desktop and implement your own UI.</sfl></tu><tu PI="85" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can use this API to monitor the changes of screens and windows on desktop and implement your own UI.</sl><tl /><tsl /><prv /><sfl>This API behaves similar functions as `Screen.chooseDesktopMedia`. But it doesn't have GUI. You can use this API to monitor the changes of screens and windows on desktop and implement your own UI.</sfl></tu><tu PI="86" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`Screen.DesktopCaptureMonitor` is an instance of `EventEmitter`. </sl><tl /><tsl /><prv /><sfl>`Screen.DesktopCaptureMonitor` is an instance of `EventEmitter`. You can use `Screen.DesktopCaptureMonitor.on()` to listen to the events.</sfl></tu><tu PI="86" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can use `Screen.DesktopCaptureMonitor.on()` to listen to the events.</sl><tl /><tsl /><prv /><sfl>`Screen.DesktopCaptureMonitor` is an instance of `EventEmitter`. You can use `Screen.DesktopCaptureMonitor.on()` to listen to the events.</sfl></tu><tu PI="87" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Synopsis</sl><tl /><tsl /><prv /><sfl>### Synopsis</sfl></tu><tu PI="88" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```javascript</sl><tl /><tsl /><prv /><sfl>```javascript</sfl></tu><tu PI="89" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>var dcm = nw.Screen.DesktopCaptureMonitor;</sl><tl /><tsl /><prv /><sfl>var dcm = nw.Screen.DesktopCaptureMonitor;</sfl></tu><tu PI="90" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>nw.Screen.Init();</sl><tl /><tsl /><prv /><sfl>nw.Screen.Init();</sfl></tu><tu PI="91" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>dcm.on("added", function (id, name, order, type) {</sl><tl /><tsl /><prv /><sfl>dcm.on("added", function (id, name, order, type) {</sfl></tu><tu PI="92" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>   //select first stream and shutdown</sl><tl /><tsl /><prv /><sfl>   //select first stream and shutdown</sfl></tu><tu PI="93" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>   var constraints = {</sl><tl /><tsl /><prv /><sfl>   var constraints = {</sfl></tu><tu PI="94" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>      audio: </sl><tl /><tsl /><prv /><sfl>      audio: {</sfl></tu><tu PI="94" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>{</sl><tl /><tsl /><prv /><sfl>      audio: {</sfl></tu><tu PI="95" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>         mandatory: </sl><tl /><tsl /><prv /><sfl>         mandatory: {</sfl></tu><tu PI="95" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>{</sl><tl /><tsl /><prv /><sfl>         mandatory: {</sfl></tu><tu PI="96" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>             chromeMediaSource: </sl><tl /><tsl /><prv /><sfl>             chromeMediaSource: "system",</sfl></tu><tu PI="96" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>"system",</sl><tl /><tsl /><prv /><sfl>             chromeMediaSource: "system",</sfl></tu><tu PI="97" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>             chromeMediaSourceId: </sl><tl /><tsl /><prv /><sfl>             chromeMediaSourceId: dcm.registerStream(id)</sfl></tu><tu PI="97" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>dcm.registerStream(id)</sl><tl /><tsl /><prv /><sfl>             chromeMediaSourceId: dcm.registerStream(id)</sfl></tu><tu PI="98" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>          }</sl><tl /><tsl /><prv /><sfl>          }</sfl></tu><tu PI="99" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>      },</sl><tl /><tsl /><prv /><sfl>      },</sfl></tu><tu PI="100" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>      video: </sl><tl /><tsl /><prv /><sfl>      video: {</sfl></tu><tu PI="100" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>{</sl><tl /><tsl /><prv /><sfl>      video: {</sfl></tu><tu PI="101" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>         mandatory: </sl><tl /><tsl /><prv /><sfl>         mandatory: {</sfl></tu><tu PI="101" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>{</sl><tl /><tsl /><prv /><sfl>         mandatory: {</sfl></tu><tu PI="102" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>             chromeMediaSource: </sl><tl /><tsl /><prv /><sfl>             chromeMediaSource: 'desktop',</sfl></tu><tu PI="102" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'desktop',</sl><tl /><tsl /><prv /><sfl>             chromeMediaSource: 'desktop',</sfl></tu><tu PI="103" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>             chromeMediaSourceId: </sl><tl /><tsl /><prv /><sfl>             chromeMediaSourceId: dcm.registerStream(id)</sfl></tu><tu PI="103" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>dcm.registerStream(id)</sl><tl /><tsl /><prv /><sfl>             chromeMediaSourceId: dcm.registerStream(id)</sfl></tu><tu PI="104" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>         }</sl><tl /><tsl /><prv /><sfl>         }</sfl></tu><tu PI="105" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>      }</sl><tl /><tsl /><prv /><sfl>      }</sfl></tu><tu PI="106" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  };</sl><tl /><tsl /><prv /><sfl>  };</sfl></tu><tu PI="107" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  // TODO: </sl><tl /><tsl /><prv /><sfl>  // TODO: call getUserMedia with contraints</sfl></tu><tu PI="107" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>call getUserMedia with contraints</sl><tl /><tsl /><prv /><sfl>  // TODO: call getUserMedia with contraints</sfl></tu><tu PI="108" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  dcm.stop();</sl><tl /><tsl /><prv /><sfl>  dcm.stop();</sfl></tu><tu PI="109" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>});</sl><tl /><tsl /><prv /><sfl>});</sfl></tu><tu PI="110" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>dcm.on("removed", function (id) { });</sl><tl /><tsl /><prv /><sfl>dcm.on("removed", function (id) { });</sfl></tu><tu PI="111" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>dcm.on("orderchanged", function (id, new_order, old_order) { });</sl><tl /><tsl /><prv /><sfl>dcm.on("orderchanged", function (id, new_order, old_order) { });</sfl></tu><tu PI="112" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>dcm.on("namechanged", function (id, name) { });</sl><tl /><tsl /><prv /><sfl>dcm.on("namechanged", function (id, name) { });</sfl></tu><tu PI="113" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>dcm.on("thumbnailchanged", function (id, thumbnail) { });</sl><tl /><tsl /><prv /><sfl>dcm.on("thumbnailchanged", function (id, thumbnail) { });</sfl></tu><tu PI="114" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>dcm.start(true, true);</sl><tl /><tsl /><prv /><sfl>dcm.start(true, true);</sfl></tu><tu PI="115" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="116" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Screen.DesktopCaptureMonitor.started</sl><tl /><tsl /><prv /><sfl>### Screen.DesktopCaptureMonitor.started</sfl></tu><tu PI="117" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Boolean of whether the DesktopCaptureMonitor is started.</sl><tl /><tsl /><prv /><sfl>Boolean of whether the DesktopCaptureMonitor is started.</sfl></tu><tu PI="118" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Screen.DesktopCaptureMonitor.start(should_include_screens, should_include_windows)</sl><tl /><tsl /><prv /><sfl>### Screen.DesktopCaptureMonitor.start(should_include_screens, should_include_windows)</sfl></tu><tu PI="119" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `should_include_screens` `{Boolean}` whether should include screens</sl><tl /><tsl /><prv /><sfl>* `should_include_screens` `{Boolean}` whether should include screens</sfl></tu><tu PI="120" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `should_include_windows` `{Boolean}` whether should include windows</sl><tl /><tsl /><prv /><sfl>* `should_include_windows` `{Boolean}` whether should include windows</sfl></tu><tu PI="121" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The `DesktopCaptureMonitor` will start monitoring the system and trigger the the events. </sl><tl /><tsl /><prv /><sfl>The `DesktopCaptureMonitor` will start monitoring the system and trigger the the events. The screen may flicker if while `DesktopCaptureMonitor` is running.</sfl></tu><tu PI="121" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The screen may flicker if while `DesktopCaptureMonitor` is running.</sl><tl /><tsl /><prv /><sfl>The `DesktopCaptureMonitor` will start monitoring the system and trigger the the events. The screen may flicker if while `DesktopCaptureMonitor` is running.</sfl></tu><tu PI="122" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Screen.DesktopCaptureMonitor.stop()</sl><tl /><tsl /><prv /><sfl>### Screen.DesktopCaptureMonitor.stop()</sfl></tu><tu PI="123" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The `DesktopCaptureMonitor` will stop monitoring the system. </sl><tl /><tsl /><prv /><sfl>The `DesktopCaptureMonitor` will stop monitoring the system. `DesktopCaptureMonitor` should be stopped after a stream is selected.</sfl></tu><tu PI="123" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`DesktopCaptureMonitor` should be stopped after a stream is selected.</sl><tl /><tsl /><prv /><sfl>The `DesktopCaptureMonitor` will stop monitoring the system. `DesktopCaptureMonitor` should be stopped after a stream is selected.</sfl></tu><tu PI="124" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Screen.DesktopCaptureMonitor.registerStream(id)</sl><tl /><tsl /><prv /><sfl>### Screen.DesktopCaptureMonitor.registerStream(id)</sfl></tu><tu PI="125" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Register and return a valid stream id passed into `chromeMediaSourceId` in `getUserMedia` constraints. </sl><tl /><tsl /><prv /><sfl>Register and return a valid stream id passed into `chromeMediaSourceId` in `getUserMedia` constraints. See [Synopsis](#synopsis_1) for the usage.</sfl></tu><tu PI="125" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Synopsis](#synopsis_1) for the usage.</sl><tl /><tsl /><prv /><sfl>Register and return a valid stream id passed into `chromeMediaSourceId` in `getUserMedia` constraints. See [Synopsis](#synopsis_1) for the usage.</sfl></tu><tu PI="126" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Event: </sl><tl /><tsl /><prv /><sfl>### Event: added (id, name, order, type, primary)</sfl></tu><tu PI="126" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>added (id, name, order, type, primary)</sl><tl /><tsl /><prv /><sfl>### Event: added (id, name, order, type, primary)</sfl></tu><tu PI="127" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! warning "Behavior Changed"</sfl></tu><tu PI="127" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>warning "Behavior Changed"</sl><tl /><tsl /><prv /><sfl>!!! warning "Behavior Changed"</sfl></tu><tu PI="128" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    This feature is changed in 0.13.0. </sl><tl /><tsl /><prv /><sfl>    This feature is changed in 0.13.0. See [Migration Notes from 0.12 to 0.13](../For Users/Migration/From 0.12 to 0.13.md).</sfl></tu><tu PI="128" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Migration Notes from 0.12 to 0.13](../For Users/Migration/From 0.12 to 0.13.md).</sl><tl /><tsl /><prv /><sfl>    This feature is changed in 0.13.0. See [Migration Notes from 0.12 to 0.13](../For Users/Migration/From 0.12 to 0.13.md).</sfl></tu><tu PI="129" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `id` `{String}` is the media id. </sl><tl /><tsl /><prv /><sfl>* `id` `{String}` is the media id. Use `registerStream(id)` to obtain a valid stream id used with `getUserMedia()`. See [registerStream](#screendesktopcapturemonitorregisterstreamid)</sfl></tu><tu PI="129" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Use `registerStream(id)` to obtain a valid stream id used with `getUserMedia()`. </sl><tl /><tsl /><prv /><sfl>* `id` `{String}` is the media id. Use `registerStream(id)` to obtain a valid stream id used with `getUserMedia()`. See [registerStream](#screendesktopcapturemonitorregisterstreamid)</sfl></tu><tu PI="129" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [registerStream](#screendesktopcapturemonitorregisterstreamid)</sl><tl /><tsl /><prv /><sfl>* `id` `{String}` is the media id. Use `registerStream(id)` to obtain a valid stream id used with `getUserMedia()`. See [registerStream](#screendesktopcapturemonitorregisterstreamid)</sfl></tu><tu PI="130" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `name` `{String}` is the title of the window or screen</sl><tl /><tsl /><prv /><sfl>* `name` `{String}` is the title of the window or screen</sfl></tu><tu PI="131" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `order` `{Integer}` is the z-order of the windows, if screens are selected they will appear first</sl><tl /><tsl /><prv /><sfl>* `order` `{Integer}` is the z-order of the windows, if screens are selected they will appear first</sfl></tu><tu PI="132" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `type` `{String}` type of the stream: </sl><tl /><tsl /><prv /><sfl>* `type` `{String}` type of the stream: "screen", "window", "other" or "unknown"</sfl></tu><tu PI="132" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>"screen", "window", "other" or "unknown"</sl><tl /><tsl /><prv /><sfl>* `type` `{String}` type of the stream: "screen", "window", "other" or "unknown"</sfl></tu><tu PI="133" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `primary` `{Boolean}` _Windows OS only_ this will be `true` if the source is the primary monitor</sl><tl /><tsl /><prv /><sfl>* `primary` `{Boolean}` _Windows OS only_ this will be `true` if the source is the primary monitor</sfl></tu><tu PI="134" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Emit when a new source was added.</sl><tl /><tsl /><prv /><sfl>Emit when a new source was added.</sfl></tu><tu PI="135" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Event: </sl><tl /><tsl /><prv /><sfl>### Event: removed (order)</sfl></tu><tu PI="135" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>removed (order)</sl><tl /><tsl /><prv /><sfl>### Event: removed (order)</sfl></tu><tu PI="136" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `order` `{Integer}` is the order of the media source that is no longer capturable</sl><tl /><tsl /><prv /><sfl>* `order` `{Integer}` is the order of the media source that is no longer capturable</sfl></tu><tu PI="137" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Emit when a source was removed.</sl><tl /><tsl /><prv /><sfl>Emit when a source was removed.</sfl></tu><tu PI="138" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Event: </sl><tl /><tsl /><prv /><sfl>### Event: orderchanged (id, new_order, old_order)</sfl></tu><tu PI="138" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>orderchanged (id, new_order, old_order)</sl><tl /><tsl /><prv /><sfl>### Event: orderchanged (id, new_order, old_order)</sfl></tu><tu PI="139" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! warning "Behavior Changed"</sfl></tu><tu PI="139" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>warning "Behavior Changed"</sl><tl /><tsl /><prv /><sfl>!!! warning "Behavior Changed"</sfl></tu><tu PI="140" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    This feature is changed in 0.13.0. </sl><tl /><tsl /><prv /><sfl>    This feature is changed in 0.13.0. See [Migration Notes from 0.12 to 0.13](../For Users/Migration/From 0.12 to 0.13.md).</sfl></tu><tu PI="140" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Migration Notes from 0.12 to 0.13](../For Users/Migration/From 0.12 to 0.13.md).</sl><tl /><tsl /><prv /><sfl>    This feature is changed in 0.13.0. See [Migration Notes from 0.12 to 0.13](../For Users/Migration/From 0.12 to 0.13.md).</sfl></tu><tu PI="141" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `id` `{String}` is the media id of the screen or window that has changed z-order</sl><tl /><tsl /><prv /><sfl>* `id` `{String}` is the media id of the screen or window that has changed z-order</sfl></tu><tu PI="142" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `new_order` `{Integer}` is the new z-order</sl><tl /><tsl /><prv /><sfl>* `new_order` `{Integer}` is the new z-order</sfl></tu><tu PI="143" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `old_order` `{Integer}` is the old z-order</sl><tl /><tsl /><prv /><sfl>* `old_order` `{Integer}` is the old z-order</sfl></tu><tu PI="144" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Emit when the Z-order of a source changed (this may change for windows as others are focused).</sl><tl /><tsl /><prv /><sfl>Emit when the Z-order of a source changed (this may change for windows as others are focused).</sfl></tu><tu PI="145" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Event: </sl><tl /><tsl /><prv /><sfl>### Event: namechanged (id, name)</sfl></tu><tu PI="145" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>namechanged (id, name)</sl><tl /><tsl /><prv /><sfl>### Event: namechanged (id, name)</sfl></tu><tu PI="146" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! warning "Behavior Changed"</sfl></tu><tu PI="146" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>warning "Behavior Changed"</sl><tl /><tsl /><prv /><sfl>!!! warning "Behavior Changed"</sfl></tu><tu PI="147" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    This feature is changed in 0.13.0. </sl><tl /><tsl /><prv /><sfl>    This feature is changed in 0.13.0. See [Migration Notes from 0.12 to 0.13](../For Users/Migration/From 0.12 to 0.13.md).</sfl></tu><tu PI="147" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Migration Notes from 0.12 to 0.13](../For Users/Migration/From 0.12 to 0.13.md).</sl><tl /><tsl /><prv /><sfl>    This feature is changed in 0.13.0. See [Migration Notes from 0.12 to 0.13](../For Users/Migration/From 0.12 to 0.13.md).</sfl></tu><tu PI="148" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `id` `{String}` is the media id of the screen or window that has a name changed</sl><tl /><tsl /><prv /><sfl>* `id` `{String}` is the media id of the screen or window that has a name changed</sfl></tu><tu PI="149" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `name` `{String}` is the new new name of the screen or window</sl><tl /><tsl /><prv /><sfl>* `name` `{String}` is the new new name of the screen or window</sfl></tu><tu PI="150" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Emit when the name of the source has changed. </sl><tl /><tsl /><prv /><sfl>Emit when the name of the source has changed. This can happen when a window changes title.</sfl></tu><tu PI="150" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>This can happen when a window changes title.</sl><tl /><tsl /><prv /><sfl>Emit when the name of the source has changed. This can happen when a window changes title.</sfl></tu><tu PI="151" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Event: </sl><tl /><tsl /><prv /><sfl>### Event: thumbnailchanged (id, thumbnail)</sfl></tu><tu PI="151" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>thumbnailchanged (id, thumbnail)</sl><tl /><tsl /><prv /><sfl>### Event: thumbnailchanged (id, thumbnail)</sfl></tu><tu PI="152" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! warning "Behavior Changed"</sfl></tu><tu PI="152" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>warning "Behavior Changed"</sl><tl /><tsl /><prv /><sfl>!!! warning "Behavior Changed"</sfl></tu><tu PI="153" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    This feature is changed in 0.13.0. </sl><tl /><tsl /><prv /><sfl>    This feature is changed in 0.13.0. See [Migration Notes from 0.12 to 0.13](../For Users/Migration/From 0.12 to 0.13.md).</sfl></tu><tu PI="153" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Migration Notes from 0.12 to 0.13](../For Users/Migration/From 0.12 to 0.13.md).</sl><tl /><tsl /><prv /><sfl>    This feature is changed in 0.13.0. See [Migration Notes from 0.12 to 0.13](../For Users/Migration/From 0.12 to 0.13.md).</sfl></tu><tu PI="154" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `id` `{String}` is the media id of the screen or window that has an updated thumbnail</sl><tl /><tsl /><prv /><sfl>* `id` `{String}` is the media id of the screen or window that has an updated thumbnail</sfl></tu><tu PI="155" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `thumbnail` `{String}` is the base64 encoded png of the thumbnail</sl><tl /><tsl /><prv /><sfl>* `thumbnail` `{String}` is the base64 encoded png of the thumbnail</sfl></tu><tu PI="156" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Emit when the thumbnail of a source changed.</sl><tl /><tsl /><prv /><sfl>Emit when the thumbnail of a source changed.</sfl></tu></body></Transmate>
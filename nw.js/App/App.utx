<Transmate Version="1.0.0.0"><head utxVersion="1.0u" Tag="0" CreationTime="2016/3/9 20:41:27" FileIndex="0" SourceLanguage="英语" TargetLanguage="中文简体" SourceDocumentPath="D:\workspace_github\nw.js\nw.js\App\App.txt" RowIndex="0" HideOrNot="False" TermFileType="" TermFileId="" TheOriginalWord="961" TheNumberWords="0" ToTranslate="0" FileType="0" MemFileOutType="" MemFileOutId="" MemFileInType="" MemFileInId="" LitePath="D:\workspace_github\nw.js\nw.js\FileInformation.ueprj" CustomTermPath="" PreviewPath="D:\workspace_github\nw.js\nw.js\App\AppPreview.html"><links /></head><body><tu PI="1" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl># App {: </sl><tl /><tsl /><prv /><sfl># App {: .doctitle}</sfl></tu><tu PI="1" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>.doctitle}</sl><tl /><tsl /><prv /><sfl># App {: .doctitle}</sfl></tu><tu PI="2" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>---</sl><tl /><tsl /><prv /><sfl>---</sfl></tu><tu PI="3" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>[TOC]</sl><tl /><tsl /><prv /><sfl>[TOC]</sfl></tu><tu PI="4" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.argv</sl><tl /><tsl /><prv /><sfl>## App.argv</sfl></tu><tu PI="5" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Get the filtered command line arguments when starting the app. </sl><tl /><tsl /><prv /><sfl>Get the filtered command line arguments when starting the app. In NW.js, some command line arguments are used by NW.js, which should not be interested of your app. `App.argv` will filter out those arguments and return the ones left. You can get filtered patterns from `App.filteredArgv` and the full arguments from `App.fullArgv`.</sfl></tu><tu PI="5" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>In NW.js, some command line arguments are used by NW.js, which should not be interested of your app. </sl><tl /><tsl /><prv /><sfl>Get the filtered command line arguments when starting the app. In NW.js, some command line arguments are used by NW.js, which should not be interested of your app. `App.argv` will filter out those arguments and return the ones left. You can get filtered patterns from `App.filteredArgv` and the full arguments from `App.fullArgv`.</sfl></tu><tu PI="5" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`App.argv` will filter out those arguments and return the ones left. </sl><tl /><tsl /><prv /><sfl>Get the filtered command line arguments when starting the app. In NW.js, some command line arguments are used by NW.js, which should not be interested of your app. `App.argv` will filter out those arguments and return the ones left. You can get filtered patterns from `App.filteredArgv` and the full arguments from `App.fullArgv`.</sfl></tu><tu PI="5" MatchPercent="" Bindex="4" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can get filtered patterns from `App.filteredArgv` and the full arguments from `App.fullArgv`.</sl><tl /><tsl /><prv /><sfl>Get the filtered command line arguments when starting the app. In NW.js, some command line arguments are used by NW.js, which should not be interested of your app. `App.argv` will filter out those arguments and return the ones left. You can get filtered patterns from `App.filteredArgv` and the full arguments from `App.fullArgv`.</sfl></tu><tu PI="6" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.fullArgv</sl><tl /><tsl /><prv /><sfl>## App.fullArgv</sfl></tu><tu PI="7" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Get all the command line arguments when starting the app. </sl><tl /><tsl /><prv /><sfl>Get all the command line arguments when starting the app. The return values contains the arguments used by NW.js, such as `--nwapp`, `--remote-debugging-port` etc.</sfl></tu><tu PI="7" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The return values contains the arguments used by NW.js, such as `--nwapp`, `--remote-debugging-port` etc.</sl><tl /><tsl /><prv /><sfl>Get all the command line arguments when starting the app. The return values contains the arguments used by NW.js, such as `--nwapp`, `--remote-debugging-port` etc.</sfl></tu><tu PI="8" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.filteredArgv</sl><tl /><tsl /><prv /><sfl>## App.filteredArgv</sfl></tu><tu PI="9" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Get a list of patterns of filtered command line arguments used by `App.argv`. </sl><tl /><tsl /><prv /><sfl>Get a list of patterns of filtered command line arguments used by `App.argv`. By default, following patterns are used to filter the arguments:</sfl></tu><tu PI="9" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>By default, following patterns are used to filter the arguments:</sl><tl /><tsl /><prv /><sfl>Get a list of patterns of filtered command line arguments used by `App.argv`. By default, following patterns are used to filter the arguments:</sfl></tu><tu PI="10" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```javascript</sl><tl /><tsl /><prv /><sfl>```javascript</sfl></tu><tu PI="11" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>[</sl><tl /><tsl /><prv /><sfl>[</sfl></tu><tu PI="12" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  /^--url=/,</sl><tl /><tsl /><prv /><sfl>  /^--url=/,</sfl></tu><tu PI="13" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  /^--remote-debugging-port=/,</sl><tl /><tsl /><prv /><sfl>  /^--remote-debugging-port=/,</sfl></tu><tu PI="14" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  /^--renderer-cmd-prefix=/,</sl><tl /><tsl /><prv /><sfl>  /^--renderer-cmd-prefix=/,</sfl></tu><tu PI="15" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  /^--nwapp=/</sl><tl /><tsl /><prv /><sfl>  /^--nwapp=/</sfl></tu><tu PI="16" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>]</sl><tl /><tsl /><prv /><sfl>]</sfl></tu><tu PI="17" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="18" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.dataPath</sl><tl /><tsl /><prv /><sfl>## App.dataPath</sfl></tu><tu PI="19" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Get the application's data path in user's directory.</sl><tl /><tsl /><prv /><sfl>Get the application's data path in user's directory.</sfl></tu><tu PI="20" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* Windows: </sl><tl /><tsl /><prv /><sfl>* Windows: `%LOCALAPPDATA%/&lt;name&gt;`</sfl></tu><tu PI="20" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`%LOCALAPPDATA%/&lt;name&gt;`</sl><tl /><tsl /><prv /><sfl>* Windows: `%LOCALAPPDATA%/&lt;name&gt;`</sfl></tu><tu PI="21" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* Linux: </sl><tl /><tsl /><prv /><sfl>* Linux: `~/.config/&lt;name&gt;`</sfl></tu><tu PI="21" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`~/.config/&lt;name&gt;`</sl><tl /><tsl /><prv /><sfl>* Linux: `~/.config/&lt;name&gt;`</sfl></tu><tu PI="22" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* OSX: </sl><tl /><tsl /><prv /><sfl>* OSX: `~/Library/Application Support/&lt;name&gt;`</sfl></tu><tu PI="22" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`~/Library/Application Support/&lt;name&gt;`</sl><tl /><tsl /><prv /><sfl>* OSX: `~/Library/Application Support/&lt;name&gt;`</sfl></tu><tu PI="23" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`&lt;name&gt;` is the field in the manifest.</sl><tl /><tsl /><prv /><sfl>`&lt;name&gt;` is the field in the manifest.</sfl></tu><tu PI="24" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.manifest</sl><tl /><tsl /><prv /><sfl>## App.manifest</sfl></tu><tu PI="25" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Get the JSON object of the manifest file.</sl><tl /><tsl /><prv /><sfl>Get the JSON object of the manifest file.</sfl></tu><tu PI="26" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.clearCache()</sl><tl /><tsl /><prv /><sfl>## App.clearCache()</sfl></tu><tu PI="27" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Clear the HTTP cache in memory and the one on disk. </sl><tl /><tsl /><prv /><sfl>Clear the HTTP cache in memory and the one on disk. This method call is synchronized.</sfl></tu><tu PI="27" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>This method call is synchronized.</sl><tl /><tsl /><prv /><sfl>Clear the HTTP cache in memory and the one on disk. This method call is synchronized.</sfl></tu><tu PI="28" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.closeAllWindows()</sl><tl /><tsl /><prv /><sfl>## App.closeAllWindows()</sfl></tu><tu PI="29" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Send the `close` event to all windows of current app, if no window is blocking the `close` event, then the app will quit after all windows have done shutdown. </sl><tl /><tsl /><prv /><sfl>Send the `close` event to all windows of current app, if no window is blocking the `close` event, then the app will quit after all windows have done shutdown. Use this method to quit an app will give windows a chance to save data.</sfl></tu><tu PI="29" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Use this method to quit an app will give windows a chance to save data.</sl><tl /><tsl /><prv /><sfl>Send the `close` event to all windows of current app, if no window is blocking the `close` event, then the app will quit after all windows have done shutdown. Use this method to quit an app will give windows a chance to save data.</sfl></tu><tu PI="30" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.crashBrowser()</sl><tl /><tsl /><prv /><sfl>## App.crashBrowser()</sfl></tu><tu PI="31" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.crashRenderer()</sl><tl /><tsl /><prv /><sfl>## App.crashRenderer()</sfl></tu><tu PI="32" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>These 2 functions crashes the browser process and the renderer process respectively, to test the [Crash dump](../For Developers/Understanding Crash Dump.md) feature.</sl><tl /><tsl /><prv /><sfl>These 2 functions crashes the browser process and the renderer process respectively, to test the [Crash dump](../For Developers/Understanding Crash Dump.md) feature.</sfl></tu><tu PI="33" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.getProxyForURL(url)</sl><tl /><tsl /><prv /><sfl>## App.getProxyForURL(url)</sfl></tu><tu PI="34" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `url` `{String}` the URL to query for proxy</sl><tl /><tsl /><prv /><sfl>* `url` `{String}` the URL to query for proxy</sfl></tu><tu PI="35" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Query the proxy to be used for loading `url` in DOM. </sl><tl /><tsl /><prv /><sfl>Query the proxy to be used for loading `url` in DOM. The return value is in the same format used in [PAC](http://en.wikipedia.org/wiki/Proxy_auto-config) (e.g. "DIRECT", "PROXY localhost:8080").</sfl></tu><tu PI="35" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The return value is in the same format used in [PAC](http://en.wikipedia.org/wiki/Proxy_auto-config) (e.g. </sl><tl /><tsl /><prv /><sfl>Query the proxy to be used for loading `url` in DOM. The return value is in the same format used in [PAC](http://en.wikipedia.org/wiki/Proxy_auto-config) (e.g. "DIRECT", "PROXY localhost:8080").</sfl></tu><tu PI="35" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>"DIRECT", "PROXY localhost:8080").</sl><tl /><tsl /><prv /><sfl>Query the proxy to be used for loading `url` in DOM. The return value is in the same format used in [PAC](http://en.wikipedia.org/wiki/Proxy_auto-config) (e.g. "DIRECT", "PROXY localhost:8080").</sfl></tu><tu PI="36" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.setProxyConfig(config)</sl><tl /><tsl /><prv /><sfl>## App.setProxyConfig(config)</sfl></tu><tu PI="37" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `config` `{String}` Proxy rules</sl><tl /><tsl /><prv /><sfl>* `config` `{String}` Proxy rules</sfl></tu><tu PI="38" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Set the proxy config which the web engine will be used to request network resources.</sl><tl /><tsl /><prv /><sfl>Set the proxy config which the web engine will be used to request network resources.</sfl></tu><tu PI="39" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Rule (copied from [`net/proxy/proxy_config.h`](https://github.com/nwjs/chromium.src/blob/nw13/net/proxy/proxy_config.h))</sl><tl /><tsl /><prv /><sfl>Rule (copied from [`net/proxy/proxy_config.h`](https://github.com/nwjs/chromium.src/blob/nw13/net/proxy/proxy_config.h))</sfl></tu><tu PI="40" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="41" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    // Parses the rules from a string, indicating which proxies to use.</sl><tl /><tsl /><prv /><sfl>    // Parses the rules from a string, indicating which proxies to use.</sfl></tu><tu PI="42" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //</sl><tl /><tsl /><prv /><sfl>    //</sfl></tu><tu PI="43" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //   proxy-uri = [&lt;proxy-scheme&gt;"://"]&lt;proxy-host&gt;[":"&lt;proxy-port&gt;]</sl><tl /><tsl /><prv /><sfl>    //   proxy-uri = [&lt;proxy-scheme&gt;"://"]&lt;proxy-host&gt;[":"&lt;proxy-port&gt;]</sfl></tu><tu PI="44" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //</sl><tl /><tsl /><prv /><sfl>    //</sfl></tu><tu PI="45" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //   proxy-uri-list = &lt;proxy-uri&gt;[","&lt;proxy-uri-list&gt;]</sl><tl /><tsl /><prv /><sfl>    //   proxy-uri-list = &lt;proxy-uri&gt;[","&lt;proxy-uri-list&gt;]</sfl></tu><tu PI="46" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //</sl><tl /><tsl /><prv /><sfl>    //</sfl></tu><tu PI="47" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //   url-scheme = "http" | "https" | "ftp" | "socks"</sl><tl /><tsl /><prv /><sfl>    //   url-scheme = "http" | "https" | "ftp" | "socks"</sfl></tu><tu PI="48" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //</sl><tl /><tsl /><prv /><sfl>    //</sfl></tu><tu PI="49" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //   scheme-proxies = [&lt;url-scheme&gt;"="]&lt;proxy-uri-list&gt;</sl><tl /><tsl /><prv /><sfl>    //   scheme-proxies = [&lt;url-scheme&gt;"="]&lt;proxy-uri-list&gt;</sfl></tu><tu PI="50" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //</sl><tl /><tsl /><prv /><sfl>    //</sfl></tu><tu PI="51" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //   proxy-rules = scheme-proxies[";"&lt;scheme-proxies&gt;]</sl><tl /><tsl /><prv /><sfl>    //   proxy-rules = scheme-proxies[";"&lt;scheme-proxies&gt;]</sfl></tu><tu PI="52" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //</sl><tl /><tsl /><prv /><sfl>    //</sfl></tu><tu PI="53" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    // Thus, the proxy-rules string should be a semicolon-separated list of</sl><tl /><tsl /><prv /><sfl>    // Thus, the proxy-rules string should be a semicolon-separated list of</sfl></tu><tu PI="54" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    // ordered proxies that apply to a particular URL scheme. </sl><tl /><tsl /><prv /><sfl>    // ordered proxies that apply to a particular URL scheme. Unless specified,</sfl></tu><tu PI="54" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Unless specified,</sl><tl /><tsl /><prv /><sfl>    // ordered proxies that apply to a particular URL scheme. Unless specified,</sfl></tu><tu PI="55" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    // the proxy scheme for proxy-uris is assumed to be http.</sl><tl /><tsl /><prv /><sfl>    // the proxy scheme for proxy-uris is assumed to be http.</sfl></tu><tu PI="56" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //</sl><tl /><tsl /><prv /><sfl>    //</sfl></tu><tu PI="57" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    // Some special cases:</sl><tl /><tsl /><prv /><sfl>    // Some special cases:</sfl></tu><tu PI="58" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //  * If the scheme is omitted from the first proxy list, that list applies</sl><tl /><tsl /><prv /><sfl>    //  * If the scheme is omitted from the first proxy list, that list applies</sfl></tu><tu PI="59" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //    to all URL schemes and subsequent lists are ignored.</sl><tl /><tsl /><prv /><sfl>    //    to all URL schemes and subsequent lists are ignored.</sfl></tu><tu PI="60" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //  * If a scheme is omitted from any proxy list after a list where a scheme</sl><tl /><tsl /><prv /><sfl>    //  * If a scheme is omitted from any proxy list after a list where a scheme</sfl></tu><tu PI="61" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //    has been provided, the list without a scheme is ignored.</sl><tl /><tsl /><prv /><sfl>    //    has been provided, the list without a scheme is ignored.</sfl></tu><tu PI="62" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //  * If the url-scheme is set to 'socks', that sets a fallback list that</sl><tl /><tsl /><prv /><sfl>    //  * If the url-scheme is set to 'socks', that sets a fallback list that</sfl></tu><tu PI="63" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //    to all otherwise unspecified url-schemes, however the default proxy-</sl><tl /><tsl /><prv /><sfl>    //    to all otherwise unspecified url-schemes, however the default proxy-</sfl></tu><tu PI="64" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //    scheme for proxy urls in the 'socks' list is understood to be</sl><tl /><tsl /><prv /><sfl>    //    scheme for proxy urls in the 'socks' list is understood to be</sfl></tu><tu PI="65" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //    socks4:// if unspecified.</sl><tl /><tsl /><prv /><sfl>    //    socks4:// if unspecified.</sfl></tu><tu PI="66" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //</sl><tl /><tsl /><prv /><sfl>    //</sfl></tu><tu PI="67" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    // For example:</sl><tl /><tsl /><prv /><sfl>    // For example:</sfl></tu><tu PI="68" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //   "http=foopy:80;ftp=foopy2"  -- use HTTP proxy "foopy:80" for http://</sl><tl /><tsl /><prv /><sfl>    //   "http=foopy:80;ftp=foopy2"  -- use HTTP proxy "foopy:80" for http://</sfl></tu><tu PI="69" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //                                  URLs, and HTTP proxy "foopy2:80" for</sl><tl /><tsl /><prv /><sfl>    //                                  URLs, and HTTP proxy "foopy2:80" for</sfl></tu><tu PI="70" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //                                  ftp:// URLs.</sl><tl /><tsl /><prv /><sfl>    //                                  ftp:// URLs.</sfl></tu><tu PI="71" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //   "foopy:80"                  -- use HTTP proxy "foopy:80" for all URLs.</sl><tl /><tsl /><prv /><sfl>    //   "foopy:80"                  -- use HTTP proxy "foopy:80" for all URLs.</sfl></tu><tu PI="72" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //   "foopy:80,bar,direct://"    -- use HTTP proxy "foopy:80" for all URLs,</sl><tl /><tsl /><prv /><sfl>    //   "foopy:80,bar,direct://"    -- use HTTP proxy "foopy:80" for all URLs,</sfl></tu><tu PI="73" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //                                  failing over to "bar" if "foopy:80" is</sl><tl /><tsl /><prv /><sfl>    //                                  failing over to "bar" if "foopy:80" is</sfl></tu><tu PI="74" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //                                  unavailable, and after that using no</sl><tl /><tsl /><prv /><sfl>    //                                  unavailable, and after that using no</sfl></tu><tu PI="75" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //                                  proxy.</sl><tl /><tsl /><prv /><sfl>    //                                  proxy.</sfl></tu><tu PI="76" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //   "socks4://foopy"            -- use SOCKS v4 proxy "foopy:1080" for all</sl><tl /><tsl /><prv /><sfl>    //   "socks4://foopy"            -- use SOCKS v4 proxy "foopy:1080" for all</sfl></tu><tu PI="77" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //                                  URLs.</sl><tl /><tsl /><prv /><sfl>    //                                  URLs.</sfl></tu><tu PI="78" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //   "http=foop,socks5://bar.com -- use HTTP proxy "foopy" for http URLs,</sl><tl /><tsl /><prv /><sfl>    //   "http=foop,socks5://bar.com -- use HTTP proxy "foopy" for http URLs,</sfl></tu><tu PI="79" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //                                  and fail over to the SOCKS5 proxy</sl><tl /><tsl /><prv /><sfl>    //                                  and fail over to the SOCKS5 proxy</sfl></tu><tu PI="80" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //                                  "bar.com" if "foop" is unavailable.</sl><tl /><tsl /><prv /><sfl>    //                                  "bar.com" if "foop" is unavailable.</sfl></tu><tu PI="81" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //   "http=foopy,direct://       -- use HTTP proxy "foopy" for http URLs,</sl><tl /><tsl /><prv /><sfl>    //   "http=foopy,direct://       -- use HTTP proxy "foopy" for http URLs,</sfl></tu><tu PI="82" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //                                  and use no proxy if "foopy" is</sl><tl /><tsl /><prv /><sfl>    //                                  and use no proxy if "foopy" is</sfl></tu><tu PI="83" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //                                  unavailable.</sl><tl /><tsl /><prv /><sfl>    //                                  unavailable.</sfl></tu><tu PI="84" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //   "http=foopy;socks=foopy2   --  use HTTP proxy "foopy" for http URLs,</sl><tl /><tsl /><prv /><sfl>    //   "http=foopy;socks=foopy2   --  use HTTP proxy "foopy" for http URLs,</sfl></tu><tu PI="85" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //                                  and use socks4://foopy2 for all other</sl><tl /><tsl /><prv /><sfl>    //                                  and use socks4://foopy2 for all other</sfl></tu><tu PI="86" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    //                                  URLs.</sl><tl /><tsl /><prv /><sfl>    //                                  URLs.</sfl></tu><tu PI="87" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="88" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.quit()</sl><tl /><tsl /><prv /><sfl>## App.quit()</sfl></tu><tu PI="89" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Quit current app. </sl><tl /><tsl /><prv /><sfl>Quit current app. This method will **not** send `close` event to windows and app will just quit quietly.</sfl></tu><tu PI="89" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>This method will **not** send `close` event to windows and app will just quit quietly.</sl><tl /><tsl /><prv /><sfl>Quit current app. This method will **not** send `close` event to windows and app will just quit quietly.</sfl></tu><tu PI="90" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.setCrashDumpDir(dir)</sl><tl /><tsl /><prv /><sfl>## App.setCrashDumpDir(dir)</sfl></tu><tu PI="91" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! warning "Deprecated"</sfl></tu><tu PI="91" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>warning "Deprecated"</sl><tl /><tsl /><prv /><sfl>!!! warning "Deprecated"</sfl></tu><tu PI="92" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    This API was deprecated since 0.11.0.</sl><tl /><tsl /><prv /><sfl>    This API was deprecated since 0.11.0.</sfl></tu><tu PI="93" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `dir` `{String}` path to generate the crash dump</sl><tl /><tsl /><prv /><sfl>* `dir` `{String}` path to generate the crash dump</sfl></tu><tu PI="94" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Set the directory where the minidump file will be saved on crash. </sl><tl /><tsl /><prv /><sfl>Set the directory where the minidump file will be saved on crash. For more information, see [Crash dump](../For Developers/Understanding Crash Dump.md).</sfl></tu><tu PI="94" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>For more information, see [Crash dump](../For Developers/Understanding Crash Dump.md).</sl><tl /><tsl /><prv /><sfl>Set the directory where the minidump file will be saved on crash. For more information, see [Crash dump](../For Developers/Understanding Crash Dump.md).</sfl></tu><tu PI="95" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.addOriginAccessWhitelistEntry(sourceOrigin, destinationProtocol, destinationHost, allowDestinationSubdomains)</sl><tl /><tsl /><prv /><sfl>## App.addOriginAccessWhitelistEntry(sourceOrigin, destinationProtocol, destinationHost, allowDestinationSubdomains)</sfl></tu><tu PI="96" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `sourceOrigin` `{String}` The source origin. </sl><tl /><tsl /><prv /><sfl>* `sourceOrigin` `{String}` The source origin. e.g. `http://github.com/`</sfl></tu><tu PI="96" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>e.g. </sl><tl /><tsl /><prv /><sfl>* `sourceOrigin` `{String}` The source origin. e.g. `http://github.com/`</sfl></tu><tu PI="96" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`http://github.com/`</sl><tl /><tsl /><prv /><sfl>* `sourceOrigin` `{String}` The source origin. e.g. `http://github.com/`</sfl></tu><tu PI="97" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `destinationProtocol` `{String}` The destination protocol where the `sourceOrigin` can access to. </sl><tl /><tsl /><prv /><sfl>* `destinationProtocol` `{String}` The destination protocol where the `sourceOrigin` can access to. e.g. `app`</sfl></tu><tu PI="97" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>e.g. </sl><tl /><tsl /><prv /><sfl>* `destinationProtocol` `{String}` The destination protocol where the `sourceOrigin` can access to. e.g. `app`</sfl></tu><tu PI="97" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`app`</sl><tl /><tsl /><prv /><sfl>* `destinationProtocol` `{String}` The destination protocol where the `sourceOrigin` can access to. e.g. `app`</sfl></tu><tu PI="98" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `destinationHost` `{String}` The destination host where the `sourceOrigin` can access to. </sl><tl /><tsl /><prv /><sfl>* `destinationHost` `{String}` The destination host where the `sourceOrigin` can access to. e.g. `myapp`</sfl></tu><tu PI="98" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>e.g. </sl><tl /><tsl /><prv /><sfl>* `destinationHost` `{String}` The destination host where the `sourceOrigin` can access to. e.g. `myapp`</sfl></tu><tu PI="98" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`myapp`</sl><tl /><tsl /><prv /><sfl>* `destinationHost` `{String}` The destination host where the `sourceOrigin` can access to. e.g. `myapp`</sfl></tu><tu PI="99" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `allowDestinationSubdomains` `{Boolean}` If set to true, the `sourceOrigin` is allowed to access subdomains of destinations.</sl><tl /><tsl /><prv /><sfl>* `allowDestinationSubdomains` `{Boolean}` If set to true, the `sourceOrigin` is allowed to access subdomains of destinations.</sfl></tu><tu PI="100" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Add an entry to the whitelist used for controlling cross-origin access. </sl><tl /><tsl /><prv /><sfl>Add an entry to the whitelist used for controlling cross-origin access. Suppose you want to allow HTTP redirecting from `github.com` to the page of your app, use something like this:</sfl></tu><tu PI="100" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Suppose you want to allow HTTP redirecting from `github.com` to the page of your app, use something like this:</sl><tl /><tsl /><prv /><sfl>Add an entry to the whitelist used for controlling cross-origin access. Suppose you want to allow HTTP redirecting from `github.com` to the page of your app, use something like this:</sfl></tu><tu PI="101" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```javascript</sl><tl /><tsl /><prv /><sfl>```javascript</sfl></tu><tu PI="102" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>App.addOriginAccessWhitelistEntry('http://github.com/', 'chrome-extension', location.host, true);</sl><tl /><tsl /><prv /><sfl>App.addOriginAccessWhitelistEntry('http://github.com/', 'chrome-extension', location.host, true);</sfl></tu><tu PI="103" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="104" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Use `App.removeOriginAccessWhitelistEntry` with exactly the same arguments to do the contrary.</sl><tl /><tsl /><prv /><sfl>Use `App.removeOriginAccessWhitelistEntry` with exactly the same arguments to do the contrary.</sfl></tu><tu PI="105" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.removeOriginAccessWhitelistEntry(sourceOrigin, destinationProtocol, destinationHost, allowDestinationSubdomains)</sl><tl /><tsl /><prv /><sfl>## App.removeOriginAccessWhitelistEntry(sourceOrigin, destinationProtocol, destinationHost, allowDestinationSubdomains)</sfl></tu><tu PI="106" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `sourceOrigin` `{String}` The source origin. </sl><tl /><tsl /><prv /><sfl>* `sourceOrigin` `{String}` The source origin. e.g. `http://github.com/`</sfl></tu><tu PI="106" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>e.g. </sl><tl /><tsl /><prv /><sfl>* `sourceOrigin` `{String}` The source origin. e.g. `http://github.com/`</sfl></tu><tu PI="106" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`http://github.com/`</sl><tl /><tsl /><prv /><sfl>* `sourceOrigin` `{String}` The source origin. e.g. `http://github.com/`</sfl></tu><tu PI="107" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `destinationProtocol` `{String}` The destination protocol where the `sourceOrigin` can access to. </sl><tl /><tsl /><prv /><sfl>* `destinationProtocol` `{String}` The destination protocol where the `sourceOrigin` can access to. e.g. `app`</sfl></tu><tu PI="107" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>e.g. </sl><tl /><tsl /><prv /><sfl>* `destinationProtocol` `{String}` The destination protocol where the `sourceOrigin` can access to. e.g. `app`</sfl></tu><tu PI="107" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`app`</sl><tl /><tsl /><prv /><sfl>* `destinationProtocol` `{String}` The destination protocol where the `sourceOrigin` can access to. e.g. `app`</sfl></tu><tu PI="108" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `destinationHost` `{String}` The destination host where the `sourceOrigin` can access to. </sl><tl /><tsl /><prv /><sfl>* `destinationHost` `{String}` The destination host where the `sourceOrigin` can access to. e.g. `myapp`</sfl></tu><tu PI="108" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>e.g. </sl><tl /><tsl /><prv /><sfl>* `destinationHost` `{String}` The destination host where the `sourceOrigin` can access to. e.g. `myapp`</sfl></tu><tu PI="108" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`myapp`</sl><tl /><tsl /><prv /><sfl>* `destinationHost` `{String}` The destination host where the `sourceOrigin` can access to. e.g. `myapp`</sfl></tu><tu PI="109" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `allowDestinationSubdomains` `{Boolean}` If set to true, the `sourceOrigin` is allowed to access subdomains of destinations.</sl><tl /><tsl /><prv /><sfl>* `allowDestinationSubdomains` `{Boolean}` If set to true, the `sourceOrigin` is allowed to access subdomains of destinations.</sfl></tu><tu PI="110" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Remove an entry from the whitelist used for controlling cross-origin access. </sl><tl /><tsl /><prv /><sfl>Remove an entry from the whitelist used for controlling cross-origin access. See `addOriginAccessWhitelistEntry` above.</sfl></tu><tu PI="110" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See `addOriginAccessWhitelistEntry` above.</sl><tl /><tsl /><prv /><sfl>Remove an entry from the whitelist used for controlling cross-origin access. See `addOriginAccessWhitelistEntry` above.</sfl></tu><tu PI="111" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.registerGlobalHotKey(shortcut)</sl><tl /><tsl /><prv /><sfl>## App.registerGlobalHotKey(shortcut)</sfl></tu><tu PI="112" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `shortcut` `{Shortcut}` the `Shortcut` object to register.</sl><tl /><tsl /><prv /><sfl>* `shortcut` `{Shortcut}` the `Shortcut` object to register.</sfl></tu><tu PI="113" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Register a global keyboard shortcut (also known as system-wide hot key) to the system.</sl><tl /><tsl /><prv /><sfl>Register a global keyboard shortcut (also known as system-wide hot key) to the system.</sfl></tu><tu PI="114" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Shortcut](Shortcut.md) for more information.</sl><tl /><tsl /><prv /><sfl>See [Shortcut](Shortcut.md) for more information.</sfl></tu><tu PI="115" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## App.unregisterGlobalHotKey(shortcut)</sl><tl /><tsl /><prv /><sfl>## App.unregisterGlobalHotKey(shortcut)</sfl></tu><tu PI="116" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `shortcut` `{Shortcut}` the `Shortcut` object to unregister.</sl><tl /><tsl /><prv /><sfl>* `shortcut` `{Shortcut}` the `Shortcut` object to unregister.</sfl></tu><tu PI="117" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Unregisters a global keyboard shortcut.</sl><tl /><tsl /><prv /><sfl>Unregisters a global keyboard shortcut.</sfl></tu><tu PI="118" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Shortcut](Shortcut.md) for more information.</sl><tl /><tsl /><prv /><sfl>See [Shortcut](Shortcut.md) for more information.</sfl></tu><tu PI="119" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Event: </sl><tl /><tsl /><prv /><sfl>## Event: open(args)</sfl></tu><tu PI="119" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>open(args)</sl><tl /><tsl /><prv /><sfl>## Event: open(args)</sfl></tu><tu PI="120" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `args` `{String}` the full command line of the program.</sl><tl /><tsl /><prv /><sfl>* `args` `{String}` the full command line of the program.</sfl></tu><tu PI="121" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Emitted when users opened a file with your app.</sl><tl /><tsl /><prv /><sfl>Emitted when users opened a file with your app.</sfl></tu><tu PI="122" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Event: </sl><tl /><tsl /><prv /><sfl>## Event: reopen</sfl></tu><tu PI="122" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>reopen</sl><tl /><tsl /><prv /><sfl>## Event: reopen</sfl></tu><tu PI="123" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>This is a Mac specific feature. </sl><tl /><tsl /><prv /><sfl>This is a Mac specific feature. This event is sent when the user clicks the dock icon for an already running application.</sfl></tu><tu PI="123" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>This event is sent when the user clicks the dock icon for an already running application.</sl><tl /><tsl /><prv /><sfl>This is a Mac specific feature. This event is sent when the user clicks the dock icon for an already running application.</sfl></tu></body></Transmate>
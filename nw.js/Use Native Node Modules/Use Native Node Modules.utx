<Transmate Version="1.0.0.0"><head utxVersion="1.0u" Tag="0" CreationTime="2016/3/9 20:42:51" FileIndex="0" SourceLanguage="英语" TargetLanguage="中文简体" SourceDocumentPath="D:\workspace_github\nw.js\nw.js\Use Native Node Modules\Use Native Node Modules.txt" RowIndex="0" HideOrNot="False" TermFileType="" TermFileId="" TheOriginalWord="243" TheNumberWords="0" ToTranslate="0" FileType="0" MemFileOutType="" MemFileOutId="" MemFileInType="" MemFileInId="" LitePath="D:\workspace_github\nw.js\nw.js\FileInformation.ueprj" CustomTermPath="" PreviewPath="D:\workspace_github\nw.js\nw.js\Use Native Node Modules\Use Native Node ModulesPreview.html"><links /></head><body><tu PI="1" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl># Use Native Node Modules {: </sl><tl /><tsl /><prv /><sfl># Use Native Node Modules {: .doctitle}</sfl></tu><tu PI="1" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>.doctitle}</sl><tl /><tsl /><prv /><sfl># Use Native Node Modules {: .doctitle}</sfl></tu><tu PI="2" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>---</sl><tl /><tsl /><prv /><sfl>---</sfl></tu><tu PI="3" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>[TOC]</sl><tl /><tsl /><prv /><sfl>[TOC]</sfl></tu><tu PI="4" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`npm` tool provided by Node.js builds the native modules, i.e. [C/C++ Addons](https://nodejs.org/api/addons.html), at the time of installation.</sl><tl /><tsl /><prv /><sfl>`npm` tool provided by Node.js builds the native modules, i.e. [C/C++ Addons](https://nodejs.org/api/addons.html), at the time of installation.</sfl></tu><tu PI="5" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Starting from 0.13.0, native modules built by node-gyp or npm in upstream can be supported.</sl><tl /><tsl /><prv /><sfl>Starting from 0.13.0, native modules built by node-gyp or npm in upstream can be supported.</sfl></tu><tu PI="6" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>In Linux and OSX you can just load the native module directly. </sl><tl /><tsl /><prv /><sfl>In Linux and OSX you can just load the native module directly. In windows you'll need to replace the file</sfl></tu><tu PI="6" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>In windows you'll need to replace the file</sl><tl /><tsl /><prv /><sfl>In Linux and OSX you can just load the native module directly. In windows you'll need to replace the file</sfl></tu><tu PI="7" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>%APPDATA%\npm\node_modules\node-gyp\src\win_delay_load_hook.c with the one at https://github.com/nwjs/nw.js/blob/nw13/tools/win_delay_load_hook.c </sl><tl /><tsl /><prv /><sfl>%APPDATA%\npm\node_modules\node-gyp\src\win_delay_load_hook.c with the one at https://github.com/nwjs/nw.js/blob/nw13/tools/win_delay_load_hook.c </sfl></tu><tu PI="8" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Before 0.13.0, the V8 version and Node ABI in NW.js is different from official Node.js. </sl><tl /><tsl /><prv /><sfl>Before 0.13.0, the V8 version and Node ABI in NW.js is different from official Node.js. To use native Node.js modules with NW.js, you have to rebuild the modules with one of following tools.</sfl></tu><tu PI="8" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>To use native Node.js modules with NW.js, you have to rebuild the modules with one of following tools.</sl><tl /><tsl /><prv /><sfl>Before 0.13.0, the V8 version and Node ABI in NW.js is different from official Node.js. To use native Node.js modules with NW.js, you have to rebuild the modules with one of following tools.</sfl></tu><tu PI="9" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## nw-gyp</sl><tl /><tsl /><prv /><sfl>## nw-gyp</sfl></tu><tu PI="10" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>[`nw-gyp`](https://github.com/nwjs/nw-gyp) is a hack on `node-gyp` to support NW.js specific headers and libraries. </sl><tl /><tsl /><prv /><sfl>[`nw-gyp`](https://github.com/nwjs/nw-gyp) is a hack on `node-gyp` to support NW.js specific headers and libraries. </sfl></tu><tu PI="11" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The usage is the same with `node-gyp`, except that you need to specify the version and arch (`x64` or `ia32`) of NW.js manually. </sl><tl /><tsl /><prv /><sfl>The usage is the same with `node-gyp`, except that you need to specify the version and arch (`x64` or `ia32`) of NW.js manually. </sfl></tu><tu PI="12" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>````bash</sl><tl /><tsl /><prv /><sfl>````bash</sfl></tu><tu PI="13" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>npm install -g nw-gyp</sl><tl /><tsl /><prv /><sfl>npm install -g nw-gyp</sfl></tu><tu PI="14" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>cd myaddon</sl><tl /><tsl /><prv /><sfl>cd myaddon</sfl></tu><tu PI="15" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>nw-gyp rebuild --target=0.13.0 --arch=x64</sl><tl /><tsl /><prv /><sfl>nw-gyp rebuild --target=0.13.0 --arch=x64</sfl></tu><tu PI="16" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>````</sl><tl /><tsl /><prv /><sfl>````</sfl></tu><tu PI="17" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See https://github.com/nwjs/nw-gyp for more details.</sl><tl /><tsl /><prv /><sfl>See https://github.com/nwjs/nw-gyp for more details.</sfl></tu><tu PI="18" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## node-pre-gyp</sl><tl /><tsl /><prv /><sfl>## node-pre-gyp</sfl></tu><tu PI="19" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Some packages uses [node-pre-gyp](https://github.com/mapbox/node-pre-gyp), which supports building for both Node.js and NW.js by using either `node-gyp` or `nw-gyp`.</sl><tl /><tsl /><prv /><sfl>Some packages uses [node-pre-gyp](https://github.com/mapbox/node-pre-gyp), which supports building for both Node.js and NW.js by using either `node-gyp` or `nw-gyp`.</sfl></tu><tu PI="20" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The usage of `node-pre-gyp` is as following:</sl><tl /><tsl /><prv /><sfl>The usage of `node-pre-gyp` is as following:</sfl></tu><tu PI="21" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>````bash</sl><tl /><tsl /><prv /><sfl>````bash</sfl></tu><tu PI="22" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>npm install -g node-pre-gyp</sl><tl /><tsl /><prv /><sfl>npm install -g node-pre-gyp</sfl></tu><tu PI="23" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>cd myaddon</sl><tl /><tsl /><prv /><sfl>cd myaddon</sfl></tu><tu PI="24" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>node-pre-gyp build --runtime=node-webkit --target=0.13.0 --target_arch=x64</sl><tl /><tsl /><prv /><sfl>node-pre-gyp build --runtime=node-webkit --target=0.13.0 --target_arch=x64</sfl></tu><tu PI="25" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>````</sl><tl /><tsl /><prv /><sfl>````</sfl></tu><tu PI="26" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See https://github.com/mapbox/node-pre-gyp for more details.</sl><tl /><tsl /><prv /><sfl>See https://github.com/mapbox/node-pre-gyp for more details.</sfl></tu><tu PI="27" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Known Issues</sl><tl /><tsl /><prv /><sfl>## Known Issues</sfl></tu><tu PI="28" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>So far, you have to rebuild **each native module** with tools above including thoses are indirectly depended modules. </sl><tl /><tsl /><prv /><sfl>So far, you have to rebuild **each native module** with tools above including thoses are indirectly depended modules. Since `binding.gyp` is required for building native modules, you can easily locate all native modules by finding `binding.gyp` file.</sfl></tu><tu PI="28" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Since `binding.gyp` is required for building native modules, you can easily locate all native modules by finding `binding.gyp` file.</sl><tl /><tsl /><prv /><sfl>So far, you have to rebuild **each native module** with tools above including thoses are indirectly depended modules. Since `binding.gyp` is required for building native modules, you can easily locate all native modules by finding `binding.gyp` file.</sfl></tu></body></Transmate>
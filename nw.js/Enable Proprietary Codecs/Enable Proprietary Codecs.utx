<Transmate Version="1.0.0.0"><head utxVersion="1.0u" Tag="0" CreationTime="2016/3/9 20:40:50" FileIndex="0" SourceLanguage="英语" TargetLanguage="中文简体" SourceDocumentPath="D:\workspace_github\nw.js\nw.js\Enable Proprietary Codecs\Enable Proprietary Codecs.txt" RowIndex="0" HideOrNot="False" TermFileType="" TermFileId="" TheOriginalWord="325" TheNumberWords="0" ToTranslate="0" FileType="0" MemFileOutType="" MemFileOutId="" MemFileInType="" MemFileInId="" LitePath="D:\workspace_github\nw.js\nw.js\FileInformation.ueprj" CustomTermPath="" PreviewPath="D:\workspace_github\nw.js\nw.js\Enable Proprietary Codecs\Enable Proprietary CodecsPreview.html"><links /></head><body><tu PI="1" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl># Enable Proprietary Codecs</sl><tl /><tsl /><prv /><sfl># Enable Proprietary Codecs</sfl></tu><tu PI="2" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>---</sl><tl /><tsl /><prv /><sfl>---</sfl></tu><tu PI="3" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>[TOC]</sl><tl /><tsl /><prv /><sfl>[TOC]</sfl></tu><tu PI="4" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Supported Codecs in Prebuilt NW.js Binary</sl><tl /><tsl /><prv /><sfl>## Supported Codecs in Prebuilt NW.js Binary</sfl></tu><tu PI="5" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>As NW.js is based on Chromium, the media components are essentially the same.</sl><tl /><tsl /><prv /><sfl>As NW.js is based on Chromium, the media components are essentially the same.</sfl></tu><tu PI="6" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>In the pre-built NW.js, following codecs are supported:</sl><tl /><tsl /><prv /><sfl>In the pre-built NW.js, following codecs are supported:</sfl></tu><tu PI="7" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```none</sl><tl /><tsl /><prv /><sfl>```none</sfl></tu><tu PI="8" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>theora,vorbis,vp8,pcm_u8,pcm_s16le,pcm_s24le,pcm_f32le,pcm_s16be,pcm_s24be</sl><tl /><tsl /><prv /><sfl>theora,vorbis,vp8,pcm_u8,pcm_s16le,pcm_s24le,pcm_f32le,pcm_s16be,pcm_s24be</sfl></tu><tu PI="9" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="10" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>and following demuxers are supported:</sl><tl /><tsl /><prv /><sfl>and following demuxers are supported:</sfl></tu><tu PI="11" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```none</sl><tl /><tsl /><prv /><sfl>```none</sfl></tu><tu PI="12" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>ogg,matroska,wav</sl><tl /><tsl /><prv /><sfl>ogg,matroska,wav</sfl></tu><tu PI="13" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="14" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Enable Proprietary Codecs in NW.js</sl><tl /><tsl /><prv /><sfl>## Enable Proprietary Codecs in NW.js</sfl></tu><tu PI="15" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! warning "License and Patent Fee"</sfl></tu><tu PI="15" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>warning "License and Patent Fee"</sl><tl /><tsl /><prv /><sfl>!!! warning "License and Patent Fee"</sfl></tu><tu PI="16" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    MP3 and H.264 codecs are licensed under the GPL in `ffmpeg` used by NW.js. </sl><tl /><tsl /><prv /><sfl>    MP3 and H.264 codecs are licensed under the GPL in `ffmpeg` used by NW.js. Make sure your app are released with compatible license of GPL. And you also have to pay patent licensing royalties for using them. Consult a lawyer if you do not understand the licensing constraints and using patented media formats in your application.</sfl></tu><tu PI="16" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Make sure your app are released with compatible license of GPL. </sl><tl /><tsl /><prv /><sfl>    MP3 and H.264 codecs are licensed under the GPL in `ffmpeg` used by NW.js. Make sure your app are released with compatible license of GPL. And you also have to pay patent licensing royalties for using them. Consult a lawyer if you do not understand the licensing constraints and using patented media formats in your application.</sfl></tu><tu PI="16" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>And you also have to pay patent licensing royalties for using them. </sl><tl /><tsl /><prv /><sfl>    MP3 and H.264 codecs are licensed under the GPL in `ffmpeg` used by NW.js. Make sure your app are released with compatible license of GPL. And you also have to pay patent licensing royalties for using them. Consult a lawyer if you do not understand the licensing constraints and using patented media formats in your application.</sfl></tu><tu PI="16" MatchPercent="" Bindex="4" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Consult a lawyer if you do not understand the licensing constraints and using patented media formats in your application.</sl><tl /><tsl /><prv /><sfl>    MP3 and H.264 codecs are licensed under the GPL in `ffmpeg` used by NW.js. Make sure your app are released with compatible license of GPL. And you also have to pay patent licensing royalties for using them. Consult a lawyer if you do not understand the licensing constraints and using patented media formats in your application.</sfl></tu><tu PI="17" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>In recent versions of Chromium project, ffmpeg DLL was changed to be builtin. </sl><tl /><tsl /><prv /><sfl>In recent versions of Chromium project, ffmpeg DLL was changed to be builtin. And we don't have license to redistribute the codec in question. So developers don't have any ways to get the codec without compiling. To make things easier, we build ffmpeg as a separate Dll. The Dll we distribute will not contain any proprietary codecs in question. Developers can recompile the Dll for themselves, which is much easier than compiling NW. Or they can get Dll from someone else [from the community](https://github.com/nwjs/nw.js/issues/4492). Note that developers can redistribute binaries containing proprietary codecs as long as they have the license. If a developer doesn't have the license, using this tip or moving to other solutions doesn't make him/her eligible to redistribute the codecs.</sfl></tu><tu PI="17" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>And we don't have license to redistribute the codec in question. </sl><tl /><tsl /><prv /><sfl>In recent versions of Chromium project, ffmpeg DLL was changed to be builtin. And we don't have license to redistribute the codec in question. So developers don't have any ways to get the codec without compiling. To make things easier, we build ffmpeg as a separate Dll. The Dll we distribute will not contain any proprietary codecs in question. Developers can recompile the Dll for themselves, which is much easier than compiling NW. Or they can get Dll from someone else [from the community](https://github.com/nwjs/nw.js/issues/4492). Note that developers can redistribute binaries containing proprietary codecs as long as they have the license. If a developer doesn't have the license, using this tip or moving to other solutions doesn't make him/her eligible to redistribute the codecs.</sfl></tu><tu PI="17" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>So developers don't have any ways to get the codec without compiling. </sl><tl /><tsl /><prv /><sfl>In recent versions of Chromium project, ffmpeg DLL was changed to be builtin. And we don't have license to redistribute the codec in question. So developers don't have any ways to get the codec without compiling. To make things easier, we build ffmpeg as a separate Dll. The Dll we distribute will not contain any proprietary codecs in question. Developers can recompile the Dll for themselves, which is much easier than compiling NW. Or they can get Dll from someone else [from the community](https://github.com/nwjs/nw.js/issues/4492). Note that developers can redistribute binaries containing proprietary codecs as long as they have the license. If a developer doesn't have the license, using this tip or moving to other solutions doesn't make him/her eligible to redistribute the codecs.</sfl></tu><tu PI="17" MatchPercent="" Bindex="4" IsVisible="False" TranStatus="" StateTranslation="False"><sl>To make things easier, we build ffmpeg as a separate Dll. </sl><tl /><tsl /><prv /><sfl>In recent versions of Chromium project, ffmpeg DLL was changed to be builtin. And we don't have license to redistribute the codec in question. So developers don't have any ways to get the codec without compiling. To make things easier, we build ffmpeg as a separate Dll. The Dll we distribute will not contain any proprietary codecs in question. Developers can recompile the Dll for themselves, which is much easier than compiling NW. Or they can get Dll from someone else [from the community](https://github.com/nwjs/nw.js/issues/4492). Note that developers can redistribute binaries containing proprietary codecs as long as they have the license. If a developer doesn't have the license, using this tip or moving to other solutions doesn't make him/her eligible to redistribute the codecs.</sfl></tu><tu PI="17" MatchPercent="" Bindex="5" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The Dll we distribute will not contain any proprietary codecs in question. </sl><tl /><tsl /><prv /><sfl>In recent versions of Chromium project, ffmpeg DLL was changed to be builtin. And we don't have license to redistribute the codec in question. So developers don't have any ways to get the codec without compiling. To make things easier, we build ffmpeg as a separate Dll. The Dll we distribute will not contain any proprietary codecs in question. Developers can recompile the Dll for themselves, which is much easier than compiling NW. Or they can get Dll from someone else [from the community](https://github.com/nwjs/nw.js/issues/4492). Note that developers can redistribute binaries containing proprietary codecs as long as they have the license. If a developer doesn't have the license, using this tip or moving to other solutions doesn't make him/her eligible to redistribute the codecs.</sfl></tu><tu PI="17" MatchPercent="" Bindex="6" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Developers can recompile the Dll for themselves, which is much easier than compiling NW. </sl><tl /><tsl /><prv /><sfl>In recent versions of Chromium project, ffmpeg DLL was changed to be builtin. And we don't have license to redistribute the codec in question. So developers don't have any ways to get the codec without compiling. To make things easier, we build ffmpeg as a separate Dll. The Dll we distribute will not contain any proprietary codecs in question. Developers can recompile the Dll for themselves, which is much easier than compiling NW. Or they can get Dll from someone else [from the community](https://github.com/nwjs/nw.js/issues/4492). Note that developers can redistribute binaries containing proprietary codecs as long as they have the license. If a developer doesn't have the license, using this tip or moving to other solutions doesn't make him/her eligible to redistribute the codecs.</sfl></tu><tu PI="17" MatchPercent="" Bindex="7" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Or they can get Dll from someone else [from the community](https://github.com/nwjs/nw.js/issues/4492). </sl><tl /><tsl /><prv /><sfl>In recent versions of Chromium project, ffmpeg DLL was changed to be builtin. And we don't have license to redistribute the codec in question. So developers don't have any ways to get the codec without compiling. To make things easier, we build ffmpeg as a separate Dll. The Dll we distribute will not contain any proprietary codecs in question. Developers can recompile the Dll for themselves, which is much easier than compiling NW. Or they can get Dll from someone else [from the community](https://github.com/nwjs/nw.js/issues/4492). Note that developers can redistribute binaries containing proprietary codecs as long as they have the license. If a developer doesn't have the license, using this tip or moving to other solutions doesn't make him/her eligible to redistribute the codecs.</sfl></tu><tu PI="17" MatchPercent="" Bindex="8" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Note that developers can redistribute binaries containing proprietary codecs as long as they have the license. </sl><tl /><tsl /><prv /><sfl>In recent versions of Chromium project, ffmpeg DLL was changed to be builtin. And we don't have license to redistribute the codec in question. So developers don't have any ways to get the codec without compiling. To make things easier, we build ffmpeg as a separate Dll. The Dll we distribute will not contain any proprietary codecs in question. Developers can recompile the Dll for themselves, which is much easier than compiling NW. Or they can get Dll from someone else [from the community](https://github.com/nwjs/nw.js/issues/4492). Note that developers can redistribute binaries containing proprietary codecs as long as they have the license. If a developer doesn't have the license, using this tip or moving to other solutions doesn't make him/her eligible to redistribute the codecs.</sfl></tu><tu PI="17" MatchPercent="" Bindex="9" IsVisible="False" TranStatus="" StateTranslation="False"><sl>If a developer doesn't have the license, using this tip or moving to other solutions doesn't make him/her eligible to redistribute the codecs.</sl><tl /><tsl /><prv /><sfl>In recent versions of Chromium project, ffmpeg DLL was changed to be builtin. And we don't have license to redistribute the codec in question. So developers don't have any ways to get the codec without compiling. To make things easier, we build ffmpeg as a separate Dll. The Dll we distribute will not contain any proprietary codecs in question. Developers can recompile the Dll for themselves, which is much easier than compiling NW. Or they can get Dll from someone else [from the community](https://github.com/nwjs/nw.js/issues/4492). Note that developers can redistribute binaries containing proprietary codecs as long as they have the license. If a developer doesn't have the license, using this tip or moving to other solutions doesn't make him/her eligible to redistribute the codecs.</sfl></tu><tu PI="18" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>In order to use MP3 and H.264, you'll need to compile ffmpeg with patch and corresponding options.</sl><tl /><tsl /><prv /><sfl>In order to use MP3 and H.264, you'll need to compile ffmpeg with patch and corresponding options.</sfl></tu><tu PI="19" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>**Step 1.** Apply following patch to `third_party/ffmpeg/ffmpeg.gyp` to make `ffmpeg` include the codecs:</sl><tl /><tsl /><prv /><sfl>**Step 1.** Apply following patch to `third_party/ffmpeg/ffmpeg.gyp` to make `ffmpeg` include the codecs:</sfl></tu><tu PI="20" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```diff</sl><tl /><tsl /><prv /><sfl>```diff</sfl></tu><tu PI="21" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>diff --git a/ffmpeg.gyp b/ffmpeg.gyp                   </sl><tl /><tsl /><prv /><sfl>diff --git a/ffmpeg.gyp b/ffmpeg.gyp                   </sfl></tu><tu PI="22" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>index 294dd2e..7dfcd3a 100755                          </sl><tl /><tsl /><prv /><sfl>index 294dd2e..7dfcd3a 100755                          </sfl></tu><tu PI="23" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>--- a/ffmpeg.gyp                                       </sl><tl /><tsl /><prv /><sfl>--- a/ffmpeg.gyp                                       </sfl></tu><tu PI="24" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>+++ b/ffmpeg.gyp                                       </sl><tl /><tsl /><prv /><sfl>+++ b/ffmpeg.gyp                                       </sfl></tu><tu PI="25" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>@@ -72,7 +72,7 @@                                      </sl><tl /><tsl /><prv /><sfl>@@ -72,7 +72,7 @@                                      </sfl></tu><tu PI="26" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>       ['chromeos == 1', {                             </sl><tl /><tsl /><prv /><sfl>       ['chromeos == 1', {                             </sfl></tu><tu PI="27" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>         'ffmpeg_branding%': </sl><tl /><tsl /><prv /><sfl>         'ffmpeg_branding%': '&lt;(branding)OS',          </sfl></tu><tu PI="27" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'&lt;(branding)OS',          </sl><tl /><tsl /><prv /><sfl>         'ffmpeg_branding%': '&lt;(branding)OS',          </sfl></tu><tu PI="28" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>       }, {  # otherwise, assume Chrome/Chromium. </sl><tl /><tsl /><prv /><sfl>       }, {  # otherwise, assume Chrome/Chromium.      </sfl></tu><tu PI="29" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>-        'ffmpeg_branding%': </sl><tl /><tsl /><prv /><sfl>-        'ffmpeg_branding%': '&lt;(branding)',            </sfl></tu><tu PI="29" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'&lt;(branding)',            </sl><tl /><tsl /><prv /><sfl>-        'ffmpeg_branding%': '&lt;(branding)',            </sfl></tu><tu PI="30" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>+        'ffmpeg_branding%': </sl><tl /><tsl /><prv /><sfl>+        'ffmpeg_branding%': 'Chrome'                  </sfl></tu><tu PI="30" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'Chrome'                  </sl><tl /><tsl /><prv /><sfl>+        'ffmpeg_branding%': 'Chrome'                  </sfl></tu><tu PI="31" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>       }],                                             </sl><tl /><tsl /><prv /><sfl>       }],                                             </sfl></tu><tu PI="32" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>     ],                                                </sl><tl /><tsl /><prv /><sfl>     ],                                                </sfl></tu><tu PI="33" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="34" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>**Step 2.** Regenerate the gyp files again with `gclient runhooks`.</sl><tl /><tsl /><prv /><sfl>**Step 2.** Regenerate the gyp files again with `gclient runhooks`.</sfl></tu><tu PI="35" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>**Step 3.** Rebuild ffmpeg Dll with `ninja -C out/Release ffmpeg`.</sl><tl /><tsl /><prv /><sfl>**Step 3.** Rebuild ffmpeg Dll with `ninja -C out/Release ffmpeg`.</sfl></tu></body></Transmate>
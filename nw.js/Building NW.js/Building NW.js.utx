<Transmate Version="1.0.0.0"><head utxVersion="1.0u" Tag="0" CreationTime="2016/3/10 23:27:07" FileIndex="0" SourceLanguage="英语" TargetLanguage="中文简体" SourceDocumentPath="D:\workspace_github\nw.js\nw.js\Building NW.js\Building NW.js.txt" RowIndex="0" HideOrNot="False" TermFileType="" TermFileId="" TheOriginalWord="744" TheNumberWords="88" ToTranslate="134" FileType="0" MemFileOutType="" MemFileOutId="" MemFileInType="" MemFileInId="" LitePath="D:\workspace_github\nw.js\nw.js\记忆库\nw.js记忆库\nw.js记忆库.uetm" CustomTermPath="D:\workspace_github\nw.js\nw.js\术语库\nw.js术语库\nw.js术语库.uetb|D:\workspace_github\nw.js\nw.js\术语库\不转换英文标点\不转换英文标点.uetb|" PreviewPath="D:\workspace_github\nw.js\nw.js\Building NW.js\Building NW.jsPreview.html"><links /></head><body><tu PI="1" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;译文有符号()[]{}（）《》错误&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl># Building NW.js {: </sl><tl># 编译NW.js {: </tl><tsl /><prv /><sfl># Building NW.js {: .doctitle}</sfl></tu><tu PI="1" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;译文有符号()[]{}（）《》错误&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT&quot;,&quot;SourceWord&quot;:&quot;}.doctitle&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>.doctitle}</sl><tl>}.doctitle</tl><tsl /><prv /><sfl># Building NW.js {: .doctitle}</sfl></tu><tu PI="2" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>---</sl><tl>---</tl><tsl /><prv /><sfl>---</sfl></tu><tu PI="3" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;100%&quot;,&quot;SourceWord&quot;:&quot;[目录]&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>[TOC]</sl><tl>[目录]</tl><tsl /><prv /><sfl>[TOC]</sfl></tu><tu PI="4" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>!!! </sl><tl>!!! </tl><tsl /><prv /><sfl>!!! important</sfl></tu><tu PI="4" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(:)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>important</sl><tl>重要事项:</tl><tsl /><prv /><sfl>!!! important</sfl></tu><tu PI="5" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;本文档编写最新 * * NW 0.13* *。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>    This document is written for latest **NW 0.13**. </sl><tl>本文档编写针对最新的 **NW 0.13**。</tl><tsl /><prv /><sfl>    This document is written for latest **NW 0.13**. For legacy build instructions, please read the [wiki page](https://github.com/nwjs/nw.js/wiki/Building-nw.js) on GitHub.</sfl></tu><tu PI="5" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>For legacy build instructions, please read the [wiki page](https://github.com/nwjs/nw.js/wiki/Building-nw.js) on GitHub.</sl><tl>传统编译说明，请在GitHub上阅读[wiki页面](https://github.com/nwjs/nw.js/wiki/Building-nw.js) 。</tl><tsl /><prv /><sfl>    This document is written for latest **NW 0.13**. For legacy build instructions, please read the [wiki page](https://github.com/nwjs/nw.js/wiki/Building-nw.js) on GitHub.</sfl></tu><tu PI="6" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;术语不一致(##|##)&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;# # 系统必备组件&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>## Prerequisites</sl><tl>## 系统必备组件</tl><tsl /><prv /><sfl>## Prerequisites</sfl></tu><tu PI="7" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;nw.js使用相同的编译工具和类似的步骤，铬。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>NW.js use same build tools and similar steps as Chromium. </sl><tl>nw.js使用跟Chromium相同的编译工具和类似的步骤。</tl><tsl /><prv /><sfl>NW.js use same build tools and similar steps as Chromium. Read the instructions according to your platform to install `depot_tools` and other prerequistes:</sfl></tu><tu PI="7" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;根据你的平台安装` depot_tools `等先决条件看说明书：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>Read the instructions according to your platform to install `depot_tools` and other prerequistes:</sl><tl>不同操作系统下安装` depot_tools `和其他条件：</tl><tsl /><prv /><sfl>NW.js use same build tools and similar steps as Chromium. Read the instructions according to your platform to install `depot_tools` and other prerequistes:</sfl></tu><tu PI="8" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;* [窗口]（http:\/\/www.chromium.org\/developers\/how-tos\/build-instructions-windows）&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>* [Windows](http://www.chromium.org/developers/how-tos/build-instructions-windows)</sl><tl>* [Windows](http://www.chromium.org/developers/how-tos/build-instructions-windows)</tl><tsl /><prv /><sfl>* [Windows](http://www.chromium.org/developers/how-tos/build-instructions-windows)</sfl></tu><tu PI="9" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;* [ Mac OS X ]（https：\/ \/铬。googlesource。COM \/铬\/ SRC \/ + \/教师\/医生\/ mac_build_instructions。MD）&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>* [Mac OS X](https://chromium.googlesource.com/chromium/src/+/master/docs/mac_build_instructions.md)</sl><tl>* [ Mac OS X ](https://chromium.googlesource.com/chromium/src/+/master/docs/mac_build_instructions.md)</tl><tsl /><prv /><sfl>* [Mac OS X](https://chromium.googlesource.com/chromium/src/+/master/docs/mac_build_instructions.md)</sfl></tu><tu PI="10" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;* [下]（https：\/ \/铬。googlesource。COM \/铬\/ SRC \/ + \/教师\/医生\/ linux_build_instructions。MD）&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>* [Linux](https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md)</sl><tl>* [Linux](https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md)
</tl><tsl /><prv /><sfl>* [Linux](https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md)</sfl></tu><tu PI="11" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>!!! </sl><tl>!!! </tl><tsl /><prv /><sfl>!!! note "Windows"</sfl></tu><tu PI="11" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;注意“窗口”&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>note "Windows"</sl><tl>注意 "Windows"
</tl><tsl /><prv /><sfl>!!! note "Windows"</sfl></tu><tu PI="12" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;由铬文件建议，你需要运行`集depot_tools_win_toolchain = 0 `或全球环境设置变量。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>    As suggested by Chromium document, you need to run `set DEPOT_TOOLS_WIN_TOOLCHAIN=0` or set the variable in your global environment.</sl><tl>由Chromium 文档的建议，你需要运行 `set DEPOT_TOOLS_WIN_TOOLCHAIN=0`或设置全局的环境变量。</tl><tsl /><prv /><sfl>    As suggested by Chromium document, you need to run `set DEPOT_TOOLS_WIN_TOOLCHAIN=0` or set the variable in your global environment.</sfl></tu><tu PI="13" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;铛是构建工具的非Windows平台的应用。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>    CLang is the build tool used by non-Windows platforms. </sl><tl>CLang 是非Windows平台的构建工具。</tl><tsl /><prv /><sfl>    CLang is the build tool used by non-Windows platforms. On Windows, it's not supported yet. You need to run `set GYP_DEFINES="clang=0"` to disable CLang on Windows before going to next steps.</sfl></tu><tu PI="13" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;在窗口，它不支持。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>On Windows, it's not supported yet. </sl><tl>在Windows中，它还不被支持。</tl><tsl /><prv /><sfl>    CLang is the build tool used by non-Windows platforms. On Windows, it's not supported yet. You need to run `set GYP_DEFINES="clang=0"` to disable CLang on Windows before going to next steps.</sfl></tu><tu PI="13" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;你需要运行`集gyp_defines =“哗= 0”`禁用铛Windows之前去的下一个步骤。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>You need to run `set GYP_DEFINES="clang=0"` to disable CLang on Windows before going to next steps.</sl><tl>Windows平台中，你需要先在Windows上运行`set GYP_DEFINES="clang=0"`禁用CLang，然后进行下一步。</tl><tsl /><prv /><sfl>    CLang is the build tool used by non-Windows platforms. On Windows, it's not supported yet. You need to run `set GYP_DEFINES="clang=0"` to disable CLang on Windows before going to next steps.</sfl></tu><tu PI="14" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>!!! </sl><tl>!!! </tl><tsl /><prv /><sfl>!!! note "Xcode 7"</sfl></tu><tu PI="14" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;注意“Xcode 7”&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>note "Xcode 7"</sl><tl>注意 "Xcode 7"</tl><tsl /><prv /><sfl>!!! note "Xcode 7"</sfl></tu><tu PI="15" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;Mac SDK 10.11为Xcode 7部分尚不支持。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>    Mac SDK 10.11 as part of Xcode 7 is not supported yet. </sl><tl>Mac SDK 10.11做为Xcode 7的一部分尚不被支持。</tl><tsl /><prv /><sfl>    Mac SDK 10.11 as part of Xcode 7 is not supported yet. If you have upgraded to Xcode 7, either downgrade to Xcode 6 or copy Mac SDK 10.10 from other machines under ```xcode-select -p`/Platforms/MacOSX.platform/Developer/SDKs`` as suggested by [Chromium document](https://chromium.googlesource.com/chromium/src/+/master/docs/mac_build_instructions.md).</sfl></tu><tu PI="15" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;如果你已经升级到Xcode 7，要么降级到Xcode 6或复制Mac SDK 10.10从其他机器在` ` ` Xcode选择P ` \/平台\/ MacOSX。平台\/开发商\/软件开发工具包` `建议由[文件]（https：铬\/铬。googlesource。COM \/铬\/ SRC \/ + \/教师\/医生\/ mac_build_instructions MD）。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>If you have upgraded to Xcode 7, either downgrade to Xcode 6 or copy Mac SDK 10.10 from other machines under ```xcode-select -p`/Platforms/MacOSX.platform/Developer/SDKs`` as suggested by [Chromium document](https://chromium.googlesource.com/chromium/src/+/master/docs/mac_build_instructions.md).</sl><tl>如果你已经升级到Xcode 7，建议你要么降级到Xcode 6或从其他机器复制Mac SDK 10.10在```xcode-select -p`/Platforms/MacOSX.platform/Developer/SDKs``，参考[Chromium 文档](https://chromium.googlesource.com/chromium/src/+/master/docs/mac_build_instructions.md)。</tl><tsl /><prv /><sfl>    Mac SDK 10.11 as part of Xcode 7 is not supported yet. If you have upgraded to Xcode 7, either downgrade to Xcode 6 or copy Mac SDK 10.10 from other machines under ```xcode-select -p`/Platforms/MacOSX.platform/Developer/SDKs`` as suggested by [Chromium document](https://chromium.googlesource.com/chromium/src/+/master/docs/mac_build_instructions.md).</sfl></tu><tu PI="16" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;术语不一致(##|##)&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;# #获得代码&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>## Get the Code</sl><tl>## 取得代码</tl><tsl /><prv /><sfl>## Get the Code</sfl></tu><tu PI="17" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;*步骤1。××控股nw.js源代码创建一个文件夹，如` $HOME \/ nwjs `，运行以下命令在文件夹中生成` gclient `文件：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>**Step 1.** Create a folder for holding NW.js source code, like `$HOME/nwjs`, and run following command in the folder to generate `.gclient` file:</sl><tl>**步骤1** 创建一个放置NW.js源码的文件夹，如` $HOME / nwjs `，运行以下命令在文件夹中生成` gclient `文件：</tl><tsl /><prv /><sfl>**Step 1.** Create a folder for holding NW.js source code, like `$HOME/nwjs`, and run following command in the folder to generate `.gclient` file:</sfl></tu><tu PI="18" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;100%&quot;,&quot;SourceWord&quot;:&quot;```bash&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>```bash</sl><tl>```bash</tl><tsl /><prv /><sfl>```bash</sfl></tu><tu PI="19" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;mkdir -p美元\/ nwjs家&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>mkdir -p $HOME/nwjs</sl><tl>mkdir -p $HOME/nwjs</tl><tsl /><prv /><sfl>mkdir -p $HOME/nwjs</sfl></tu><tu PI="20" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;美元\/ nwjs CD回家&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>cd $HOME/nwjs</sl><tl>cd $HOME/nwjs</tl><tsl /><prv /><sfl>cd $HOME/nwjs</sfl></tu><tu PI="21" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;gclient配置名字= SRC https: \/ \/ GitHub。COM \/ nwjs \/铬。SRC。Git @起源\/ nw13&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>gclient config --name=src https://github.com/nwjs/chromium.src.git@origin/nw13</sl><tl>gclient config --name=src https://github.com/nwjs/chromium.src.git@origin/nw13</tl><tsl /><prv /><sfl>gclient config --name=src https://github.com/nwjs/chromium.src.git@origin/nw13</sfl></tu><tu PI="22" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>```</sl><tl>```</tl><tsl /><prv /><sfl>```</sfl></tu><tu PI="23" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;一般来说，如果你不感兴趣的运行铬测试，你不必同步的测试案例和参考的建立，这节省了你的时间很多。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>Generally if you are not interested in running Chromium tests, you don't have to sync the test cases and reference builds, which saves you lot of time. </sl><tl>一般来说，如果你不乐意的运行Chromium 测试，那么你不必同步测试用例和reference builds，这可以节省你不少时间。</tl><tsl /><prv /><sfl>Generally if you are not interested in running Chromium tests, you don't have to sync the test cases and reference builds, which saves you lot of time. Open the `.gclient` file you just created and replace `custom_deps` section with followings:</sfl></tu><tu PI="23" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;打开`。gclient `您刚刚创建的文件和替换` custom_deps `段如下：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>Open the `.gclient` file you just created and replace `custom_deps` section with followings:</sl><tl>打开您刚刚创建的 `.gclient` 文件，然后替换` custom_deps `段内容：</tl><tsl /><prv /><sfl>Generally if you are not interested in running Chromium tests, you don't have to sync the test cases and reference builds, which saves you lot of time. Open the `.gclient` file you just created and replace `custom_deps` section with followings:</sfl></tu><tu PI="24" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;` ` ` Python&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>```python</sl><tl>```python</tl><tsl /><prv /><sfl>```python</sfl></tu><tu PI="25" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT&quot;,&quot;SourceWord&quot;:&quot;“custom_deps”：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>"custom_deps" : </sl><tl>“custom_deps”：</tl><tsl /><prv /><sfl>"custom_deps" : {</sfl></tu><tu PI="25" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;译文有符号()[]{}（）《》错误&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>{</sl><tl>{</tl><tsl /><prv /><sfl>"custom_deps" : {</sfl></tu><tu PI="26" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;“SRC \/ third_party \/ WebKit \/ layouttests”：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>    "src/third_party/WebKit/LayoutTests": </sl><tl>    "src/third_party/WebKit/LayoutTests": </tl><tsl /><prv /><sfl>    "src/third_party/WebKit/LayoutTests": None,</sfl></tu><tu PI="26" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;无，&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>None,</sl><tl>None,</tl><tsl /><prv /><sfl>    "src/third_party/WebKit/LayoutTests": None,</sfl></tu><tu PI="27" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;“SRC \/ chrome_frame \/工具\/测试\/ reference_build \/铬”：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>    "src/chrome_frame/tools/test/reference_build/chrome": </sl><tl>    "src/chrome_frame/tools/test/reference_build/chrome": </tl><tsl /><prv /><sfl>    "src/chrome_frame/tools/test/reference_build/chrome": None,</sfl></tu><tu PI="27" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;无，&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>None,</sl><tl>None,</tl><tsl /><prv /><sfl>    "src/chrome_frame/tools/test/reference_build/chrome": None,</sfl></tu><tu PI="28" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;“SRC \/ chrome_frame \/工具\/测试\/ reference_build \/ chrome_win”：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>    "src/chrome_frame/tools/test/reference_build/chrome_win": </sl><tl>    "src/chrome_frame/tools/test/reference_build/chrome_win": </tl><tsl /><prv /><sfl>    "src/chrome_frame/tools/test/reference_build/chrome_win": None,</sfl></tu><tu PI="28" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;无，&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>None,</sl><tl>None,</tl><tsl /><prv /><sfl>    "src/chrome_frame/tools/test/reference_build/chrome_win": None,</sfl></tu><tu PI="29" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;“SRC \/铬\/工具\/测试\/ reference_build \/铬”：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>    "src/chrome/tools/test/reference_build/chrome": </sl><tl>    "src/chrome/tools/test/reference_build/chrome": </tl><tsl /><prv /><sfl>    "src/chrome/tools/test/reference_build/chrome": None,</sfl></tu><tu PI="29" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;无，&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>None,</sl><tl>None,</tl><tsl /><prv /><sfl>    "src/chrome/tools/test/reference_build/chrome": None,</sfl></tu><tu PI="30" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;“SRC \/铬\/工具\/测试\/ reference_build \/ chrome_linux”：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>    "src/chrome/tools/test/reference_build/chrome_linux": </sl><tl>    "src/chrome/tools/test/reference_build/chrome_linux": </tl><tsl /><prv /><sfl>    "src/chrome/tools/test/reference_build/chrome_linux": None,</sfl></tu><tu PI="30" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;无，&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>None,</sl><tl>None,</tl><tsl /><prv /><sfl>    "src/chrome/tools/test/reference_build/chrome_linux": None,</sfl></tu><tu PI="31" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;“SRC \/铬\/工具\/测试\/ reference_build \/ chrome_mac”：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>    "src/chrome/tools/test/reference_build/chrome_mac": </sl><tl>    "src/chrome/tools/test/reference_build/chrome_mac": </tl><tsl /><prv /><sfl>    "src/chrome/tools/test/reference_build/chrome_mac": None,</sfl></tu><tu PI="31" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;无，&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>None,</sl><tl>None,</tl><tsl /><prv /><sfl>    "src/chrome/tools/test/reference_build/chrome_mac": None,</sfl></tu><tu PI="32" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;“SRC \/铬\/工具\/测试\/ reference_build \/ chrome_win”：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>    "src/chrome/tools/test/reference_build/chrome_win": </sl><tl>    "src/chrome/tools/test/reference_build/chrome_win": </tl><tsl /><prv /><sfl>    "src/chrome/tools/test/reference_build/chrome_win": None,</sfl></tu><tu PI="32" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;译文与第38、40、42、44、46、48行译文不同&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT&quot;,&quot;SourceWord&quot;:&quot;无，&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>None,</sl><tl>None,</tl><tsl /><prv /><sfl>    "src/chrome/tools/test/reference_build/chrome_win": None,</sfl></tu><tu PI="33" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;译文有符号()[]{}（）《》错误&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>}</sl><tl>}</tl><tsl /><prv /><sfl>}</sfl></tu><tu PI="34" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>```</sl><tl>```</tl><tsl /><prv /><sfl>```</sfl></tu><tu PI="35" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;* * *步骤2。* * *在您的终端中运行以下命令：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>**Step 2.** Run following command in your terminal:</sl><tl>**步骤2。** 在您的终端中运行以下命令：</tl><tsl /><prv /><sfl>**Step 2.** Run following command in your terminal:</sfl></tu><tu PI="36" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>```</sl><tl>```</tl><tsl /><prv /><sfl>```</sfl></tu><tu PI="37" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;gclient同步-- with_branch_heads&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>gclient sync --with_branch_heads</sl><tl>gclient sync --with_branch_heads</tl><tsl /><prv /><sfl>gclient sync --with_branch_heads</sfl></tu><tu PI="38" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>```</sl><tl>```</tl><tsl /><prv /><sfl>```</sfl></tu><tu PI="39" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;这通常下载20G +从GitHub和谷歌的git版本。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>This usually downloads 20G+ from GitHub and Google's Git repos. </sl><tl>这需要从GitHub和谷歌下载20G +数据的git库。</tl><tsl /><prv /><sfl>This usually downloads 20G+ from GitHub and Google's Git repos. Make sure you have a good network provider and be patient :stuck_out_tongue:</sfl></tu><tu PI="39" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;确保你有一个好的网络提供商和耐心：stuck_out_tongue：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>Make sure you have a good network provider and be patient :stuck_out_tongue:</sl><tl>所以需要确保你的网络比较稳定，同时拥有足够的耐心：stuck_out_tongue：</tl><tsl /><prv /><sfl>This usually downloads 20G+ from GitHub and Google's Git repos. Make sure you have a good network provider and be patient :stuck_out_tongue:</sfl></tu><tu PI="40" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;完成时，你会看到一个` SRC `在同一文件夹中创建` gclient `文件夹。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>When finished, you will see a `src` folder created in the same folder as `.gclient`.</sl><tl>完成时，你会在创建` gclient `的同一文件夹中看到一个 `src`。</tl><tsl /><prv /><sfl>When finished, you will see a `src` folder created in the same folder as `.gclient`.</sfl></tu><tu PI="41" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>!!! </sl><tl>!!! </tl><tsl /><prv /><sfl>!!! note "First Build on Linux"</sfl></tu><tu PI="41" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;请注意“第一个建立在”&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>note "First Build on Linux"</sl><tl>请注意  "Linux上进行初次编译"</tl><tsl /><prv /><sfl>!!! note "First Build on Linux"</sfl></tu><tu PI="42" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;如果你在Linux上建立**的第一次**，你需要运行` gclient同步-- with_branch_heads -- nohooks `然后运行`。\/建设\/安装建设DEPS。SH `在Ubuntu中安装的依赖。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>    If you are building on Linux **for the first time**, you need to run `gclient sync --with_branch_heads --nohooks` and then run `./build/install-build-deps.sh` to install dependencies on Ubuntu. </sl><tl>如果你在Linux上**for the first time**，你需要运行`gclient sync --with_branch_heads --nohooks` 然后运行`./build/install-build-deps.sh`以在Ubuntu中安装的依赖。</tl><tsl /><prv /><sfl>    If you are building on Linux **for the first time**, you need to run `gclient sync --with_branch_heads --nohooks` and then run `./build/install-build-deps.sh` to install dependencies on Ubuntu. See [Chromium document](http://dev.chromium.org/developers/how-tos/get-the-code) for detailed instructions of getting the source code.</sfl></tu><tu PI="42" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;看到[文件]铬（http:\/\/dev.chromium.org\/developers\/how-tos\/get-the-code）为获得源代码的详细说明。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>See [Chromium document](http://dev.chromium.org/developers/how-tos/get-the-code) for detailed instructions of getting the source code.</sl><tl>参见[Chromium 文档](http://dev.chromium.org/developers/how-tos/get-the-code) 这是获得源代码的详细说明。</tl><tsl /><prv /><sfl>    If you are building on Linux **for the first time**, you need to run `gclient sync --with_branch_heads --nohooks` and then run `./build/install-build-deps.sh` to install dependencies on Ubuntu. See [Chromium document](http://dev.chromium.org/developers/how-tos/get-the-code) for detailed instructions of getting the source code.</sfl></tu><tu PI="43" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>!!! </sl><tl>!!! </tl><tsl /><prv /><sfl>!!! note "First Build on Windows"</sfl></tu><tu PI="43" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;请注意“第一个窗口”&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>note "First Build on Windows"</sl><tl>请注意  "Windows上进行初次编译"
</tl><tsl /><prv /><sfl>!!! note "First Build on Windows"</sfl></tu><tu PI="44" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号( ,然)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;在Windows中，您必须安装DirectX SDK（https:\/\/www.microsoft.com\/en-us\/download\/details.aspx [ ]？ID = 6812）和复制文件到手动使用bash命令源文件夹下面：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>    On Windows, you have to install [DirectX SDK](https://www.microsoft.com/en-us/download/details.aspx?id=6812) and copy the files into the source folder manually using following bash command:</sl><tl>在Windows中，您必须安装[DirectX SDK](https://www.microsoft.com/en-us/download/details.aspx?id=6812) ,然后使用下面的命令人工复制文件到源文件夹：</tl><tsl /><prv /><sfl>    On Windows, you have to install [DirectX SDK](https://www.microsoft.com/en-us/download/details.aspx?id=6812) and copy the files into the source folder manually using following bash command:</sfl></tu><tu PI="45" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;100%&quot;,&quot;SourceWord&quot;:&quot;```bash&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>```bash</sl><tl>```bash</tl><tsl /><prv /><sfl>```bash</sfl></tu><tu PI="46" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>mkdir -p $HOME/nwjs/src/third_party/directxsdk/files</sl><tl>mkdir -p $HOME/nwjs/src/third_party/directxsdk/files</tl><tsl /><prv /><sfl>mkdir -p $HOME/nwjs/src/third_party/directxsdk/files</sfl></tu><tu PI="47" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>cp -r /c/Program\ Files\ \(x86\)/Microsoft\ DirectX\ SDK\ \(June\ 2010\)/* \</sl><tl>cp -r /c/Program\ Files\ \(x86\)/Microsoft\ DirectX\ SDK\ \(June\ 2010\)/* \</tl><tsl /><prv /><sfl>cp -r /c/Program\ Files\ \(x86\)/Microsoft\ DirectX\ SDK\ \(June\ 2010\)/* \</sfl></tu><tu PI="48" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>$HOME/nwjs/src/third_party/directxsdk/files/</sl><tl>$HOME/nwjs/src/third_party/directxsdk/files/</tl><tsl /><prv /><sfl>$HOME/nwjs/src/third_party/directxsdk/files/</sfl></tu><tu PI="49" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>```</sl><tl>```</tl><tsl /><prv /><sfl>```</sfl></tu><tu PI="50" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;术语不一致(##|##)&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;# #建立&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>## Build</sl><tl>## 编译</tl><tsl /><prv /><sfl>## Build</sfl></tu><tu PI="51" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;建立文件是在` \/ `在` gclient同步文件夹中生成`。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>Build files are generated in `out/` folder during `gclient sync`. </sl><tl>编译文件通过`gclient sync`生成在 `out/` 文件夹</tl><tsl /><prv /><sfl>Build files are generated in `out/` folder during `gclient sync`. Run following command in your terminal will generate the Debug build of standard NW.js binaries in `out/Debug` folder:</sfl></tu><tu PI="51" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;在你的终端运行命令将生成调试版本的标准nw.js双星在` \/调试`文件夹：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>Run following command in your terminal will generate the Debug build of standard NW.js binaries in `out/Debug` folder:</sl><tl>在你的终端运行命令将在`out/Debug`文件夹生成调试版本的标准NW.js二进制文件 ：</tl><tsl /><prv /><sfl>Build files are generated in `out/` folder during `gclient sync`. Run following command in your terminal will generate the Debug build of standard NW.js binaries in `out/Debug` folder:</sfl></tu><tu PI="52" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;100%&quot;,&quot;SourceWord&quot;:&quot;```bash&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>```bash</sl><tl>```bash</tl><tsl /><prv /><sfl>```bash</sfl></tu><tu PI="53" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;CD型&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>cd src</sl><tl>cd src</tl><tsl /><prv /><sfl>cd src</sfl></tu><tu PI="54" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;忍者C \/调试nwjs&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>ninja -C out/Debug nwjs</sl><tl>ninja -C out/Debug nwjs</tl><tsl /><prv /><sfl>ninja -C out/Debug nwjs</sfl></tu><tu PI="55" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>```</sl><tl>```</tl><tsl /><prv /><sfl>```</sfl></tu><tu PI="56" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;&quot;,&quot;SourceWord&quot;:&quot;&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>!!! </sl><tl>!!! </tl><tsl /><prv /><sfl>!!! tip "Build Time"</sfl></tu><tu PI="56" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;提示“建立时间”&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>tip "Build Time"</sl><tl>提示 "编译时间"</tl><tsl /><prv /><sfl>!!! tip "Build Time"</sfl></tu><tu PI="57" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;一般一个完整的建立需要花费数小时的时间，这取决于你的机器的性能。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>    Generally a full build takes hours of time depending on the performance of your machine. </sl><tl>一般一次完全编译需要花费数小时的时间，同时这取决于你的机器的性能。</tl><tsl /><prv /><sfl>    Generally a full build takes hours of time depending on the performance of your machine. Recommended configuration is to build on a PC with multicore CPU (&gt;=8 cores), SSD and large memory (&gt;= 8G). And you can read [Build Faster](#build-faster) section below for some tips to speed up the build.</sfl></tu><tu PI="57" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;译文有符号()[]{}（）《》错误&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;建议的配置是建立在PC机与多核CPU（&gt; = 8芯），SSD和大容量内存（&gt; = 8G）。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>Recommended configuration is to build on a PC with multicore CPU (&gt;=8 cores), SSD and large memory (&gt;= 8G). </sl><tl>建议的配置是多核CPU（&gt; = 8芯），SSD和大容量内存（&gt; = 8G）。</tl><tsl /><prv /><sfl>    Generally a full build takes hours of time depending on the performance of your machine. Recommended configuration is to build on a PC with multicore CPU (&gt;=8 cores), SSD and large memory (&gt;= 8G). And you can read [Build Faster](#build-faster) section below for some tips to speed up the build.</sfl></tu><tu PI="57" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;你可以阅读[建立更快]（#建立更快）部分下面一些技巧来加快建设。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>And you can read [Build Faster](#build-faster) section below for some tips to speed up the build.</sl><tl>你可以阅读[更快编译](#build-faster) 部分下面的一些技巧来加快编译。</tl><tsl /><prv /><sfl>    Generally a full build takes hours of time depending on the performance of your machine. Recommended configuration is to build on a PC with multicore CPU (&gt;=8 cores), SSD and large memory (&gt;= 8G). And you can read [Build Faster](#build-faster) section below for some tips to speed up the build.</sfl></tu><tu PI="58" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;生成发布版本，开关的第二命令`忍者C \/释放nwjs `。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>To generate Release build, switch the second command to `ninja -C out/Release nwjs`.</sl><tl>要生成发布版本，讲第二个命令设置为 `ninja -C out/Release nwjs`.
</tl><tsl /><prv /><sfl>To generate Release build, switch the second command to `ninja -C out/Release nwjs`.</sfl></tu><tu PI="59" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;建立32位\/ 64位二进制文件或非标准建立的口味，你需要设置` gyp_defines `变量在您的环境中运行` gclient runhooks力`生成构建文件。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>To build 32-bit/64-bit binaries or non-standard build flavors, you need to setup `GYP_DEFINES` variable in your environment and run `gclient runhooks --force` to generate build files. </sl><tl>建立32位/ 64位二进制文件或非标准编译类型，你需要在您的环境中设置`GYP_DEFINES`变量，然后运行 `gclient runhooks --force`来生成构建文件。</tl><tsl /><prv /><sfl>To build 32-bit/64-bit binaries or non-standard build flavors, you need to setup `GYP_DEFINES` variable in your environment and run `gclient runhooks --force` to generate build files. And then re-run the commands above to generate binaries. Continue to read following sections to find out how to setup `GYP_DEFINES`.</sfl></tu><tu PI="59" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT&quot;,&quot;SourceWord&quot;:&quot;然后再运行上面的命令来生成二进制文件。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>And then re-run the commands above to generate binaries. </sl><tl>然后再运行上面的命令来生成二进制文件。</tl><tsl /><prv /><sfl>To build 32-bit/64-bit binaries or non-standard build flavors, you need to setup `GYP_DEFINES` variable in your environment and run `gclient runhooks --force` to generate build files. And then re-run the commands above to generate binaries. Continue to read following sections to find out how to setup `GYP_DEFINES`.</sfl></tu><tu PI="59" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;继续阅读下面的章节如何设置` gyp_defines `。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>Continue to read following sections to find out how to setup `GYP_DEFINES`.</sl><tl>继续阅读下面的章节了解如何设置 `GYP_DEFINES`。</tl><tsl /><prv /><sfl>To build 32-bit/64-bit binaries or non-standard build flavors, you need to setup `GYP_DEFINES` variable in your environment and run `gclient runhooks --force` to generate build files. And then re-run the commands above to generate binaries. Continue to read following sections to find out how to setup `GYP_DEFINES`.</sfl></tu><tu PI="60" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;# # # 32位\/ 64位&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>### 32-bit/64-bit Build</sl><tl>### 32位/ 64位</tl><tsl /><prv /><sfl>### 32-bit/64-bit Build</sfl></tu><tu PI="61" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;*窗口&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>* Windows</sl><tl>* Windows平台</tl><tsl /><prv /><sfl>* Windows</sfl></tu><tu PI="62" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;•32位：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>    - 32-bit: </sl><tl>    - 32-bit: </tl><tsl /><prv /><sfl>    - 32-bit: is the default build target</sfl></tu><tu PI="62" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT&quot;,&quot;SourceWord&quot;:&quot;是默认的构建目标&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>is the default build target</sl><tl>是默认的构建目标</tl><tsl /><prv /><sfl>    - 32-bit: is the default build target</sfl></tu><tu PI="63" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;•64位：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>    - 64-bit: </sl><tl>    - 64-bit: </tl><tsl /><prv /><sfl>    - 64-bit: `set GYP_DEFINES="target_arch=x64"` and rebuild in `out/Debug_x64` or `out/Release_x64` folder</sfl></tu><tu PI="63" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;`集gyp_defines =“target_arch = x64”`和重建` \/ debug_x64 `或` \/ release_x64 `文件夹&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>`set GYP_DEFINES="target_arch=x64"` and rebuild in `out/Debug_x64` or `out/Release_x64` folder</sl><tl>`set GYP_DEFINES="target_arch=x64"`，然后重新编译出 `out/Debug_x64` 或  `out/Release_x64` 文件夹</tl><tsl /><prv /><sfl>    - 64-bit: `set GYP_DEFINES="target_arch=x64"` and rebuild in `out/Debug_x64` or `out/Release_x64` folder</sfl></tu><tu PI="64" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;*&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>* Linux</sl><tl>* Linux平台</tl><tsl /><prv /><sfl>* Linux</sfl></tu><tu PI="65" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;•32位：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>    - 32-bit: </sl><tl>    - 32-bit: </tl><tsl /><prv /><sfl>    - 32-bit: **TODO: chroot**</sfl></tu><tu PI="65" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;*做：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>**TODO: </sl><tl>**TODO: </tl><tsl /><prv /><sfl>    - 32-bit: **TODO: chroot**</sfl></tu><tu PI="65" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;chroot * *&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>chroot**</sl><tl>chroot**</tl><tsl /><prv /><sfl>    - 32-bit: **TODO: chroot**</sfl></tu><tu PI="66" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;•64位：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>    - 64-bit: </sl><tl>    - 64-bit: </tl><tsl /><prv /><sfl>    - 64-bit: is the default build target</sfl></tu><tu PI="66" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT&quot;,&quot;SourceWord&quot;:&quot;是默认的构建目标&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>is the default build target</sl><tl>是默认的构建目标</tl><tsl /><prv /><sfl>    - 64-bit: is the default build target</sfl></tu><tu PI="67" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;*&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>* Mac</sl><tl>** Mac平台</tl><tsl /><prv /><sfl>* Mac</sfl></tu><tu PI="68" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;•32位：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>    - 32-bit: </sl><tl>    - 32-bit: </tl><tsl /><prv /><sfl>    - 32-bit: `export GYP_DEFINES="host_arch=ia32 target_arch=ia32"` and rebuild in `out/Debug` or `out/Release` folder</sfl></tu><tu PI="68" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;`出口gyp_defines =“host_arch = IA32 target_arch = IA32”`和重建` \/调试`或` \/释放`文件夹&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>`export GYP_DEFINES="host_arch=ia32 target_arch=ia32"` and rebuild in `out/Debug` or `out/Release` folder</sl><tl>`export GYP_DEFINES="host_arch=ia32 target_arch=ia32"` ，然后重新编译出 `out/Debug` 或`out/Release` 文件夹
</tl><tsl /><prv /><sfl>    - 32-bit: `export GYP_DEFINES="host_arch=ia32 target_arch=ia32"` and rebuild in `out/Debug` or `out/Release` folder</sfl></tu><tu PI="69" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;•64位：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>    - 64-bit: </sl><tl>    - 64-bit: </tl><tsl /><prv /><sfl>    - 64-bit: is the default build target</sfl></tu><tu PI="69" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT&quot;,&quot;SourceWord&quot;:&quot;是默认的构建目标&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>is the default build target</sl><tl>是默认的构建目标</tl><tsl /><prv /><sfl>    - 64-bit: is the default build target</sfl></tu><tu PI="70" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;# # #建立口味&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>### Build Flavors</sl><tl>### 编译类型</tl><tsl /><prv /><sfl>### Build Flavors</sfl></tu><tu PI="71" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;*标准：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>* Standard: </sl><tl>* 标准：</tl><tsl /><prv /><sfl>* Standard: it's generated by default. Same as `GYP_DEFINES="nwjs_sdk=0 disable_nacl=1"`.</sfl></tu><tu PI="71" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;它是默认生成的。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>it's generated by default. </sl><tl>默认生成。</tl><tsl /><prv /><sfl>* Standard: it's generated by default. Same as `GYP_DEFINES="nwjs_sdk=0 disable_nacl=1"`.</sfl></tu><tu PI="71" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;同` gyp_defines =“nwjs_sdk = 0 disable_nacl = 1”`。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>Same as `GYP_DEFINES="nwjs_sdk=0 disable_nacl=1"`.</sl><tl>同`GYP_DEFINES="nwjs_sdk=0 disable_nacl=1"`.</tl><tsl /><prv /><sfl>* Standard: it's generated by default. Same as `GYP_DEFINES="nwjs_sdk=0 disable_nacl=1"`.</sfl></tu><tu PI="72" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT&quot;,&quot;SourceWord&quot;:&quot;* SDK：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>* SDK: </sl><tl>* SDK：</tl><tsl /><prv /><sfl>* SDK: `GYP_DEFINES="nwjs_sdk=1 disable_nacl=0"`</sfl></tu><tu PI="72" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;` gyp_defines =“nwjs_sdk = 1 disable_nacl = 0”`&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>`GYP_DEFINES="nwjs_sdk=1 disable_nacl=0"`</sl><tl>`GYP_DEFINES="nwjs_sdk=1 disable_nacl=0"`</tl><tsl /><prv /><sfl>* SDK: `GYP_DEFINES="nwjs_sdk=1 disable_nacl=0"`</sfl></tu><tu PI="73" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;*氯化钠：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>* NaCl: </sl><tl>* NaCl: </tl><tsl /><prv /><sfl>* NaCl: `GYP_DEFINES="disable_nacl=0"`</sfl></tu><tu PI="73" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;有标点符号(\&quot;)不正确&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;` gyp_defines =“disable_nacl = 0”`&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>`GYP_DEFINES="disable_nacl=0"`</sl><tl>`GYP_DEFINES="disable_nacl=0"`</tl><tsl /><prv /><sfl>* NaCl: `GYP_DEFINES="disable_nacl=0"`</sfl></tu><tu PI="74" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;看到[建设口味]（.. \/为用户\/先进\/建设的味道。）为所有支持的建设口味的差异。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>See [Build Flavors](../For Users/Advanced/Build Flavors.md) for the differences of all supported build flavors.</sl><tl>阅读构建类型 [Build Flavors](../For Users/Advanced/Build Flavors.md) 来了解支持的全部编译类型的区别。</tl><tsl /><prv /><sfl>See [Build Flavors](../For Users/Advanced/Build Flavors.md) for the differences of all supported build flavors.</sfl></tu><tu PI="75" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;# # #使专有的编解码器&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>### Enable Proprietary Codecs</sl><tl>### 启用专有编解码器</tl><tsl /><prv /><sfl>### Enable Proprietary Codecs</sfl></tu><tu PI="76" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;由于许可证的问题，nw.js预编译的二进制文件不支持专有的编解码器，如H.264。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>Due to the license issue, the prebuilt binaries of NW.js doesn't support proprietary codecs, like H.264. </sl><tl>由于许可的问题，nw.js预编译的二进制文件不支持专有的编解码器，如H.264。</tl><tsl /><prv /><sfl>Due to the license issue, the prebuilt binaries of NW.js doesn't support proprietary codecs, like H.264. So you can't play MP3/MP4 with `&lt;audio&gt;` and `&lt;video&gt;` tags with prebuilt NW.js. To enable those medias, you have to build NW.js from source code by following the document of [Enable Proprietary Codecs](Enable Proprietary Codecs.md).</sfl></tu><tu PI="76" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;所以你不能播放MP3 \/ MP4 ` &lt;音频&gt; `和` &lt;视频&gt; `标签与预建的nw.js。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>So you can't play MP3/MP4 with `&lt;audio&gt;` and `&lt;video&gt;` tags with prebuilt NW.js. </sl><tl>所以你不能在预编译的NW.js中使用 `&lt;audio&gt;`和 `&lt;video&gt;`标签播放MP3 / MP4  。</tl><tsl /><prv /><sfl>Due to the license issue, the prebuilt binaries of NW.js doesn't support proprietary codecs, like H.264. So you can't play MP3/MP4 with `&lt;audio&gt;` and `&lt;video&gt;` tags with prebuilt NW.js. To enable those medias, you have to build NW.js from source code by following the document of [Enable Proprietary Codecs](Enable Proprietary Codecs.md).</sfl></tu><tu PI="76" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;术语不一致(document|文档)&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;为了使这些媒体，你必须从源代码构建nw.js遵循[文件]使专有的编解码器（使专有的编解码器，MD）。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="False"><sl>To enable those medias, you have to build NW.js from source code by following the document of [Enable Proprietary Codecs](Enable Proprietary Codecs.md).</sl><tl>为了能够使用这些媒体，你必须参照[启用专有编解码器](Enable Proprietary Codecs.md)来从源代码构建nw.js。</tl><tsl /><prv /><sfl>Due to the license issue, the prebuilt binaries of NW.js doesn't support proprietary codecs, like H.264. So you can't play MP3/MP4 with `&lt;audio&gt;` and `&lt;video&gt;` tags with prebuilt NW.js. To enable those medias, you have to build NW.js from source code by following the document of [Enable Proprietary Codecs](Enable Proprietary Codecs.md).</sfl></tu><tu PI="77" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;# #建立更快&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>## Build Faster</sl><tl>## 更快编译</tl><tsl /><prv /><sfl>## Build Faster</sfl></tu><tu PI="78" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;从谷歌的网站上，有几个建议加快你的建设。&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>From Google's website, there are a few tips to speed up your build. </sl><tl>在谷歌的网站上，有几个建议可以帮你提速：</tl><tsl /><prv /><sfl>From Google's website, there are a few tips to speed up your build. Open the links below to see the tips for your platform:</sfl></tu><tu PI="78" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;打开下面的链接，看看你的平台的提示：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>Open the links below to see the tips for your platform:</sl><tl>打开下面的链接，看看针对不同平台的提示：</tl><tsl /><prv /><sfl>From Google's website, there are a few tips to speed up your build. Open the links below to see the tips for your platform:</sfl></tu><tu PI="79" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;译文有符号()[]{}（）《》错误&quot;,&quot;ErrorStatus&quot;:&quot;Warning&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;* [苹果建造指南：&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>* [Mac Build Instructions: Faster builds](https://chromium.googlesource.com/chromium/src/+/master/docs/mac_build_instructions.md#Faster-builds)</sl><tl>* [苹果编译指南: 快速编译](https://chromium.googlesource.com/chromium/src/+/master/docs/mac_build_instructions.md#Faster-builds)
</tl><tsl /><prv /><sfl>* [Mac Build Instructions: Faster builds](https://chromium.googlesource.com/chromium/src/+/master/docs/mac_build_instructions.md#Faster-builds)</sfl></tu><tu PI="80" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="{&quot;ErrorInfo&quot;:&quot;&quot;,&quot;ErrorStatus&quot;:&quot;&quot;,&quot;Source&quot;:&quot;MT#&quot;,&quot;SourceWord&quot;:&quot;* [技巧提高建设速度在Linux ]（https：\/ \/铬。googlesource。COM \/铬\/ SRC \/ + \/教师\/医生\/ linux_faster_builds。MD）&quot;,&quot;TranStatus&quot;:&quot;已完成&quot;}" StateTranslation="True"><sl>* [Tips for improving build speed on Linux](https://chromium.googlesource.com/chromium/src/+/master/docs/linux_faster_builds.md)</sl><tl>* [在Linux 上提高编译速度的技巧](https://chromium.googlesource.com/chromium/src/+/master/docs/linux_faster_builds.md)
</tl><tsl /><prv /><sfl>* [Tips for improving build speed on Linux](https://chromium.googlesource.com/chromium/src/+/master/docs/linux_faster_builds.md)</sfl></tu></body></Transmate>
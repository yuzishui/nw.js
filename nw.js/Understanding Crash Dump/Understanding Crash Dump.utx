<Transmate Version="1.0.0.0"><head utxVersion="1.0u" Tag="0" CreationTime="2016/3/9 20:40:50" FileIndex="0" SourceLanguage="英语" TargetLanguage="中文简体" SourceDocumentPath="D:\workspace_github\nw.js\nw.js\Understanding Crash Dump\Understanding Crash Dump.txt" RowIndex="0" HideOrNot="False" TermFileType="" TermFileId="" TheOriginalWord="479" TheNumberWords="0" ToTranslate="0" FileType="0" MemFileOutType="" MemFileOutId="" MemFileInType="" MemFileInId="" LitePath="D:\workspace_github\nw.js\nw.js\FileInformation.ueprj" CustomTermPath="" PreviewPath="D:\workspace_github\nw.js\nw.js\Understanding Crash Dump\Understanding Crash DumpPreview.html"><links /></head><body><tu PI="1" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl># Understanding Crash Dump {: </sl><tl /><tsl /><prv /><sfl># Understanding Crash Dump {: .doctitle}</sfl></tu><tu PI="1" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>.doctitle}</sl><tl /><tsl /><prv /><sfl># Understanding Crash Dump {: .doctitle}</sfl></tu><tu PI="2" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>---</sl><tl /><tsl /><prv /><sfl>---</sfl></tu><tu PI="3" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>[TOC]</sl><tl /><tsl /><prv /><sfl>[TOC]</sfl></tu><tu PI="4" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Once NW.js crashed, a `minidump` file (`.dmp`) will be generated on disk. </sl><tl /><tsl /><prv /><sfl>Once NW.js crashed, a `minidump` file (`.dmp`) will be generated on disk. Users can include it in the bug report. You can decode the `minidump` file to get the stack trace when crashed. So it's helpful to find out what's wrong with NW.js in certain cases.</sfl></tu><tu PI="4" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Users can include it in the bug report. </sl><tl /><tsl /><prv /><sfl>Once NW.js crashed, a `minidump` file (`.dmp`) will be generated on disk. Users can include it in the bug report. You can decode the `minidump` file to get the stack trace when crashed. So it's helpful to find out what's wrong with NW.js in certain cases.</sfl></tu><tu PI="4" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can decode the `minidump` file to get the stack trace when crashed. </sl><tl /><tsl /><prv /><sfl>Once NW.js crashed, a `minidump` file (`.dmp`) will be generated on disk. Users can include it in the bug report. You can decode the `minidump` file to get the stack trace when crashed. So it's helpful to find out what's wrong with NW.js in certain cases.</sfl></tu><tu PI="4" MatchPercent="" Bindex="4" IsVisible="False" TranStatus="" StateTranslation="False"><sl>So it's helpful to find out what's wrong with NW.js in certain cases.</sl><tl /><tsl /><prv /><sfl>Once NW.js crashed, a `minidump` file (`.dmp`) will be generated on disk. Users can include it in the bug report. You can decode the `minidump` file to get the stack trace when crashed. So it's helpful to find out what's wrong with NW.js in certain cases.</sfl></tu><tu PI="5" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>To extract the stack trace from the `minidump` file, you need three things: </sl><tl /><tsl /><prv /><sfl>To extract the stack trace from the `minidump` file, you need three things: the minidump (`.dmp`) file generated from the crash, symbols file of NW.js binary and the `minidump_stackwalk` tool.</sfl></tu><tu PI="5" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>the minidump (`.dmp`) file generated from the crash, symbols file of NW.js binary and the `minidump_stackwalk` tool.</sl><tl /><tsl /><prv /><sfl>To extract the stack trace from the `minidump` file, you need three things: the minidump (`.dmp`) file generated from the crash, symbols file of NW.js binary and the `minidump_stackwalk` tool.</sfl></tu><tu PI="6" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Find Minidump File</sl><tl /><tsl /><prv /><sfl>## Find Minidump File</sfl></tu><tu PI="7" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The minidump file will be generated in the following default directories when NW.js crashed:</sl><tl /><tsl /><prv /><sfl>The minidump file will be generated in the following default directories when NW.js crashed:</sfl></tu><tu PI="8" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* Linux: </sl><tl /><tsl /><prv /><sfl>* Linux: `~/.config/&lt;name-in-manifest&gt;/Crash\ Reports/`</sfl></tu><tu PI="8" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`~/.config/&lt;name-in-manifest&gt;/Crash\ Reports/`</sl><tl /><tsl /><prv /><sfl>* Linux: `~/.config/&lt;name-in-manifest&gt;/Crash\ Reports/`</sfl></tu><tu PI="9" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* Windows: </sl><tl /><tsl /><prv /><sfl>* Windows: [System temporary directory](http://msdn.microsoft.com/en-us/library/windows/desktop/aa364992%28v=vs.85%29.aspx)</sfl></tu><tu PI="9" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>[System temporary directory](http://msdn.microsoft.com/en-us/library/windows/desktop/aa364992%28v=vs.85%29.aspx)</sl><tl /><tsl /><prv /><sfl>* Windows: [System temporary directory](http://msdn.microsoft.com/en-us/library/windows/desktop/aa364992%28v=vs.85%29.aspx)</sfl></tu><tu PI="10" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* Mac: </sl><tl /><tsl /><prv /><sfl>* Mac: `~/Library/Application\ Support/&lt;name-in-manifest&gt;/CrashPad/`</sfl></tu><tu PI="10" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`~/Library/Application\ Support/&lt;name-in-manifest&gt;/CrashPad/`</sl><tl /><tsl /><prv /><sfl>* Mac: `~/Library/Application\ Support/&lt;name-in-manifest&gt;/CrashPad/`</sfl></tu><tu PI="11" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The `&lt;name-in-manifest&gt;` is the `name` field of [Manifest file](../References/Manifest Format.md#name).</sl><tl /><tsl /><prv /><sfl>The `&lt;name-in-manifest&gt;` is the `name` field of [Manifest file](../References/Manifest Format.md#name).</sfl></tu><tu PI="12" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! note "Strip Headers from Linux Minidump File"</sfl></tu><tu PI="12" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>note "Strip Headers from Linux Minidump File"</sl><tl /><tsl /><prv /><sfl>!!! note "Strip Headers from Linux Minidump File"</sfl></tu><tu PI="13" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    Minidump file generated on Linux has additional headers in text format. </sl><tl /><tsl /><prv /><sfl>    Minidump file generated on Linux has additional headers in text format. They have to be stripped off before decoding. The real content of minidump file starts with `MDMP` followed by unreadable binaries. So simply delete the text before `MDMP`.</sfl></tu><tu PI="13" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>They have to be stripped off before decoding. </sl><tl /><tsl /><prv /><sfl>    Minidump file generated on Linux has additional headers in text format. They have to be stripped off before decoding. The real content of minidump file starts with `MDMP` followed by unreadable binaries. So simply delete the text before `MDMP`.</sfl></tu><tu PI="13" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The real content of minidump file starts with `MDMP` followed by unreadable binaries. </sl><tl /><tsl /><prv /><sfl>    Minidump file generated on Linux has additional headers in text format. They have to be stripped off before decoding. The real content of minidump file starts with `MDMP` followed by unreadable binaries. So simply delete the text before `MDMP`.</sfl></tu><tu PI="13" MatchPercent="" Bindex="4" IsVisible="False" TranStatus="" StateTranslation="False"><sl>So simply delete the text before `MDMP`.</sl><tl /><tsl /><prv /><sfl>    Minidump file generated on Linux has additional headers in text format. They have to be stripped off before decoding. The real content of minidump file starts with `MDMP` followed by unreadable binaries. So simply delete the text before `MDMP`.</sfl></tu><tu PI="14" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Organize Symbol Files</sl><tl /><tsl /><prv /><sfl>## Organize Symbol Files</sfl></tu><tu PI="15" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Packages of symbol files for released NW.js can be found within the same folder of NW.js download folder. </sl><tl /><tsl /><prv /><sfl>Packages of symbol files for released NW.js can be found within the same folder of NW.js download folder. The symbol files (.sym) can be extracted from the downloaded packages.</sfl></tu><tu PI="15" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The symbol files (.sym) can be extracted from the downloaded packages.</sl><tl /><tsl /><prv /><sfl>Packages of symbol files for released NW.js can be found within the same folder of NW.js download folder. The symbol files (.sym) can be extracted from the downloaded packages.</sfl></tu><tu PI="16" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Then you have to organize the symbol files in a **correct path with correct file name** in order be used by `minidump_stackwalk` tool. </sl><tl /><tsl /><prv /><sfl>Then you have to organize the symbol files in a **correct path with correct file name** in order be used by `minidump_stackwalk` tool. `minidump_stackwalk` uses [simple symbol supplier](https://code.google.com/p/chromium/codesearch#chromium/src/breakpad/src/processor/simple_symbol_supplier.cc&amp;l=142) to find symbol files. Following is the way of how it finds the symbol files.</sfl></tu><tu PI="16" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`minidump_stackwalk` uses [simple symbol supplier](https://code.google.com/p/chromium/codesearch#chromium/src/breakpad/src/processor/simple_symbol_supplier.cc&amp;l=142) to find symbol files. </sl><tl /><tsl /><prv /><sfl>Then you have to organize the symbol files in a **correct path with correct file name** in order be used by `minidump_stackwalk` tool. `minidump_stackwalk` uses [simple symbol supplier](https://code.google.com/p/chromium/codesearch#chromium/src/breakpad/src/processor/simple_symbol_supplier.cc&amp;l=142) to find symbol files. Following is the way of how it finds the symbol files.</sfl></tu><tu PI="16" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Following is the way of how it finds the symbol files.</sl><tl /><tsl /><prv /><sfl>Then you have to organize the symbol files in a **correct path with correct file name** in order be used by `minidump_stackwalk` tool. `minidump_stackwalk` uses [simple symbol supplier](https://code.google.com/p/chromium/codesearch#chromium/src/breakpad/src/processor/simple_symbol_supplier.cc&amp;l=142) to find symbol files. Following is the way of how it finds the symbol files.</sfl></tu><tu PI="17" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The tool will try to search the `.sym` file as in following pattern:</sl><tl /><tsl /><prv /><sfl>The tool will try to search the `.sym` file as in following pattern:</sfl></tu><tu PI="18" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`{SYMBOLS_ROOT}/{DEBUG_FILE_NAME}/{DEBUG_IDENTIFIER}/{DEBUG_FILE_NAME_WITHOUT_PDB}.sym`</sl><tl /><tsl /><prv /><sfl>`{SYMBOLS_ROOT}/{DEBUG_FILE_NAME}/{DEBUG_IDENTIFIER}/{DEBUG_FILE_NAME_WITHOUT_PDB}.sym`</sfl></tu><tu PI="19" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `{SYMBOLS_ROOT}` is the root folder of all symbol files. </sl><tl /><tsl /><prv /><sfl>* `{SYMBOLS_ROOT}` is the root folder of all symbol files. You can put all versions / platforms of NW `.sym` files in a same folder.</sfl></tu><tu PI="19" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can put all versions / platforms of NW `.sym` files in a same folder.</sl><tl /><tsl /><prv /><sfl>* `{SYMBOLS_ROOT}` is the root folder of all symbol files. You can put all versions / platforms of NW `.sym` files in a same folder.</sfl></tu><tu PI="20" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `{DEBUG_FILE_NAME}`, `{DEBUG_IDENTIFIER}` and `{DEBUG_FILE_NAME_WITHOUT_PDB}` can be obtained from the first line of `.sym` file which typically looks like `MODULE Linux x86_64 265BDB6BE043D5C70D3A1E279A8F0B1A0 nw`.</sl><tl /><tsl /><prv /><sfl>* `{DEBUG_FILE_NAME}`, `{DEBUG_IDENTIFIER}` and `{DEBUG_FILE_NAME_WITHOUT_PDB}` can be obtained from the first line of `.sym` file which typically looks like `MODULE Linux x86_64 265BDB6BE043D5C70D3A1E279A8F0B1A0 nw`.</sfl></tu><tu PI="21" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    - `265BDB6BE043D5C70D3A1E279A8F0B1A0` is `{DEBUG_IDENTIFIER}`</sl><tl /><tsl /><prv /><sfl>    - `265BDB6BE043D5C70D3A1E279A8F0B1A0` is `{DEBUG_IDENTIFIER}`</sfl></tu><tu PI="22" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    - `nw` is `{DEBUG_FILE_NAME}`.</sl><tl /><tsl /><prv /><sfl>    - `nw` is `{DEBUG_FILE_NAME}`.</sfl></tu><tu PI="23" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    - `{DEBUG_FILE_NAME_WITHOUT_PDB}` can be converted from `{DEBUG_FILE_NAME}` by removing `.pdb` extension which is only necessary for Windows.</sl><tl /><tsl /><prv /><sfl>    - `{DEBUG_FILE_NAME_WITHOUT_PDB}` can be converted from `{DEBUG_FILE_NAME}` by removing `.pdb` extension which is only necessary for Windows.</sfl></tu><tu PI="24" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Decode Minidump with `minidump_stackwalk`</sl><tl /><tsl /><prv /><sfl>## Decode Minidump with `minidump_stackwalk`</sfl></tu><tu PI="25" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`minidump_stackwalk` can be built with NW.js or from breakpad source code directly on Mac and Linux. </sl><tl /><tsl /><prv /><sfl>`minidump_stackwalk` can be built with NW.js or from breakpad source code directly on Mac and Linux. Or you can install prebuilt from Cygwin on Windows.</sfl></tu><tu PI="25" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Or you can install prebuilt from Cygwin on Windows.</sl><tl /><tsl /><prv /><sfl>`minidump_stackwalk` can be built with NW.js or from breakpad source code directly on Mac and Linux. Or you can install prebuilt from Cygwin on Windows.</sfl></tu><tu PI="26" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>To get the stack trace from `minidump` file, run following command:</sl><tl /><tsl /><prv /><sfl>To get the stack trace from `minidump` file, run following command:</sfl></tu><tu PI="27" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```bash</sl><tl /><tsl /><prv /><sfl>```bash</sfl></tu><tu PI="28" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>minidump_stackwalk minidump_file.dmp /path/to/symbols_root 2&gt;&amp;1</sl><tl /><tsl /><prv /><sfl>minidump_stackwalk minidump_file.dmp /path/to/symbols_root 2&gt;&amp;1</sfl></tu><tu PI="29" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="30" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>If the symbol files were not organized correctly, you still can get call stack from this tool. </sl><tl /><tsl /><prv /><sfl>If the symbol files were not organized correctly, you still can get call stack from this tool. But you will not see symbols and there will be a warning in last section of output - "Loaded modules" like this:</sfl></tu><tu PI="30" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>But you will not see symbols and there will be a warning in last section of output - "Loaded modules" like this:</sl><tl /><tsl /><prv /><sfl>If the symbol files were not organized correctly, you still can get call stack from this tool. But you will not see symbols and there will be a warning in last section of output - "Loaded modules" like this:</sfl></tu><tu PI="31" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```none</sl><tl /><tsl /><prv /><sfl>```none</sfl></tu><tu PI="32" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>0x00240000 - 0x02b29fff nw.exe ??? </sl><tl /><tsl /><prv /><sfl>0x00240000 - 0x02b29fff nw.exe ??? (main) (WARNING: No symbols, nw.exe.pdb, 669008F7B6EE44058CBD5F21BEB5B5CFe)</sfl></tu><tu PI="32" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>(main) (WARNING: </sl><tl /><tsl /><prv /><sfl>0x00240000 - 0x02b29fff nw.exe ??? (main) (WARNING: No symbols, nw.exe.pdb, 669008F7B6EE44058CBD5F21BEB5B5CFe)</sfl></tu><tu PI="32" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>No symbols, nw.exe.pdb, 669008F7B6EE44058CBD5F21BEB5B5CFe)</sl><tl /><tsl /><prv /><sfl>0x00240000 - 0x02b29fff nw.exe ??? (main) (WARNING: No symbols, nw.exe.pdb, 669008F7B6EE44058CBD5F21BEB5B5CFe)</sfl></tu><tu PI="33" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="34" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Trigger Crash for Testing</sl><tl /><tsl /><prv /><sfl>## Trigger Crash for Testing</sfl></tu><tu PI="35" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>To test the crash dump feature, you can trigger the crash on purpose with APIs provided by NW.js: </sl><tl /><tsl /><prv /><sfl>To test the crash dump feature, you can trigger the crash on purpose with APIs provided by NW.js: `App.crashBrowser()` and `App.crashRenderer()`. They crash the browser process and the renderer process respectively.</sfl></tu><tu PI="35" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`App.crashBrowser()` and `App.crashRenderer()`. </sl><tl /><tsl /><prv /><sfl>To test the crash dump feature, you can trigger the crash on purpose with APIs provided by NW.js: `App.crashBrowser()` and `App.crashRenderer()`. They crash the browser process and the renderer process respectively.</sfl></tu><tu PI="35" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>They crash the browser process and the renderer process respectively.</sl><tl /><tsl /><prv /><sfl>To test the crash dump feature, you can trigger the crash on purpose with APIs provided by NW.js: `App.crashBrowser()` and `App.crashRenderer()`. They crash the browser process and the renderer process respectively.</sfl></tu><tu PI="36" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## References</sl><tl /><tsl /><prv /><sfl>## References</sfl></tu><tu PI="37" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* http://www.chromium.org/developers/decoding-crash-dumps  </sl><tl /><tsl /><prv /><sfl>* http://www.chromium.org/developers/decoding-crash-dumps  </sfl></tu><tu PI="38" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* http://code.google.com/p/google-breakpad/wiki/GettingStartedWithBreakpad</sl><tl /><tsl /><prv /><sfl>* http://code.google.com/p/google-breakpad/wiki/GettingStartedWithBreakpad</sfl></tu></body></Transmate>
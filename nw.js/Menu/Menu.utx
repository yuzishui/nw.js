<Transmate Version="1.0.0.0"><head utxVersion="1.0u" Tag="0" CreationTime="2016/3/9 20:41:27" FileIndex="0" SourceLanguage="英语" TargetLanguage="中文简体" SourceDocumentPath="D:\workspace_github\nw.js\nw.js\Menu\Menu.txt" RowIndex="0" HideOrNot="False" TermFileType="" TermFileId="" TheOriginalWord="563" TheNumberWords="0" ToTranslate="0" FileType="0" MemFileOutType="" MemFileOutId="" MemFileInType="" MemFileInId="" LitePath="D:\workspace_github\nw.js\nw.js\FileInformation.ueprj" CustomTermPath="" PreviewPath="D:\workspace_github\nw.js\nw.js\Menu\MenuPreview.html"><links /></head><body><tu PI="1" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl># Menu {: </sl><tl /><tsl /><prv /><sfl># Menu {: .doctitle}</sfl></tu><tu PI="1" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>.doctitle}</sl><tl /><tsl /><prv /><sfl># Menu {: .doctitle}</sfl></tu><tu PI="2" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>---</sl><tl /><tsl /><prv /><sfl>---</sfl></tu><tu PI="3" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>[TOC]</sl><tl /><tsl /><prv /><sfl>[TOC]</sfl></tu><tu PI="4" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`Menu` represents a menubar or a context menu. </sl><tl /><tsl /><prv /><sfl>`Menu` represents a menubar or a context menu. And `MenuItem` is item inside a menu. Please read the document of [`MenuItem`](MenuItem.md) for more details.</sfl></tu><tu PI="4" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>And `MenuItem` is item inside a menu. </sl><tl /><tsl /><prv /><sfl>`Menu` represents a menubar or a context menu. And `MenuItem` is item inside a menu. Please read the document of [`MenuItem`](MenuItem.md) for more details.</sfl></tu><tu PI="4" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Please read the document of [`MenuItem`](MenuItem.md) for more details.</sl><tl /><tsl /><prv /><sfl>`Menu` represents a menubar or a context menu. And `MenuItem` is item inside a menu. Please read the document of [`MenuItem`](MenuItem.md) for more details.</sfl></tu><tu PI="5" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Synopsis</sl><tl /><tsl /><prv /><sfl>## Synopsis</sfl></tu><tu PI="6" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>An example to create a context menu:</sl><tl /><tsl /><prv /><sfl>An example to create a context menu:</sfl></tu><tu PI="7" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```javascript</sl><tl /><tsl /><prv /><sfl>```javascript</sfl></tu><tu PI="8" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// Create an empty context menu</sl><tl /><tsl /><prv /><sfl>// Create an empty context menu</sfl></tu><tu PI="9" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>var menu = new nw.Menu();</sl><tl /><tsl /><prv /><sfl>var menu = new nw.Menu();</sfl></tu><tu PI="10" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// Add some items</sl><tl /><tsl /><prv /><sfl>// Add some items</sfl></tu><tu PI="11" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>menu.append(new nw.MenuItem({ label: </sl><tl /><tsl /><prv /><sfl>menu.append(new nw.MenuItem({ label: 'Item A' }));</sfl></tu><tu PI="11" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'Item A' }));</sl><tl /><tsl /><prv /><sfl>menu.append(new nw.MenuItem({ label: 'Item A' }));</sfl></tu><tu PI="12" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>menu.append(new nw.MenuItem({ label: </sl><tl /><tsl /><prv /><sfl>menu.append(new nw.MenuItem({ label: 'Item B' }));</sfl></tu><tu PI="12" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'Item B' }));</sl><tl /><tsl /><prv /><sfl>menu.append(new nw.MenuItem({ label: 'Item B' }));</sfl></tu><tu PI="13" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>menu.append(new nw.MenuItem({ type: </sl><tl /><tsl /><prv /><sfl>menu.append(new nw.MenuItem({ type: 'separator' }));</sfl></tu><tu PI="13" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'separator' }));</sl><tl /><tsl /><prv /><sfl>menu.append(new nw.MenuItem({ type: 'separator' }));</sfl></tu><tu PI="14" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>menu.append(new nw.MenuItem({ label: </sl><tl /><tsl /><prv /><sfl>menu.append(new nw.MenuItem({ label: 'Item C' }));</sfl></tu><tu PI="14" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'Item C' }));</sl><tl /><tsl /><prv /><sfl>menu.append(new nw.MenuItem({ label: 'Item C' }));</sfl></tu><tu PI="15" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// Remove one item</sl><tl /><tsl /><prv /><sfl>// Remove one item</sfl></tu><tu PI="16" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>menu.removeAt(1);</sl><tl /><tsl /><prv /><sfl>menu.removeAt(1);</sfl></tu><tu PI="17" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// Popup as context menu</sl><tl /><tsl /><prv /><sfl>// Popup as context menu</sfl></tu><tu PI="18" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>menu.popup(10, 10);</sl><tl /><tsl /><prv /><sfl>menu.popup(10, 10);</sfl></tu><tu PI="19" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// Iterate menu's items</sl><tl /><tsl /><prv /><sfl>// Iterate menu's items</sfl></tu><tu PI="20" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>for (var i = 0; </sl><tl /><tsl /><prv /><sfl>for (var i = 0; i &lt; menu.items.length; ++i) {</sfl></tu><tu PI="20" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>i &lt; menu.items.length; </sl><tl /><tsl /><prv /><sfl>for (var i = 0; i &lt; menu.items.length; ++i) {</sfl></tu><tu PI="20" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>++i) {</sl><tl /><tsl /><prv /><sfl>for (var i = 0; i &lt; menu.items.length; ++i) {</sfl></tu><tu PI="21" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  console.log(menu.items[i]);</sl><tl /><tsl /><prv /><sfl>  console.log(menu.items[i]);</sfl></tu><tu PI="22" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>}</sl><tl /><tsl /><prv /><sfl>}</sfl></tu><tu PI="23" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="24" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>To create a menubar, usually you have to create a 2-level menu and assign it to `window.menu`. </sl><tl /><tsl /><prv /><sfl>To create a menubar, usually you have to create a 2-level menu and assign it to `window.menu`. Here is the example of creating a menubar:</sfl></tu><tu PI="24" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Here is the example of creating a menubar:</sl><tl /><tsl /><prv /><sfl>To create a menubar, usually you have to create a 2-level menu and assign it to `window.menu`. Here is the example of creating a menubar:</sfl></tu><tu PI="25" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```javascript</sl><tl /><tsl /><prv /><sfl>```javascript</sfl></tu><tu PI="26" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// Create an empty menubar</sl><tl /><tsl /><prv /><sfl>// Create an empty menubar</sfl></tu><tu PI="27" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>var menu = new nw.Menu({type: </sl><tl /><tsl /><prv /><sfl>var menu = new nw.Menu({type: 'menubar'});</sfl></tu><tu PI="27" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'menubar'});</sl><tl /><tsl /><prv /><sfl>var menu = new nw.Menu({type: 'menubar'});</sfl></tu><tu PI="28" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// Create a submenu as the 2nd level menu</sl><tl /><tsl /><prv /><sfl>// Create a submenu as the 2nd level menu</sfl></tu><tu PI="29" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>var submenu = new nw.Menu();</sl><tl /><tsl /><prv /><sfl>var submenu = new nw.Menu();</sfl></tu><tu PI="30" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>submenu.append(new nw.MenuItem({ label: </sl><tl /><tsl /><prv /><sfl>submenu.append(new nw.MenuItem({ label: 'Item A' }));</sfl></tu><tu PI="30" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'Item A' }));</sl><tl /><tsl /><prv /><sfl>submenu.append(new nw.MenuItem({ label: 'Item A' }));</sfl></tu><tu PI="31" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>submenu.append(new nw.MenuItem({ label: </sl><tl /><tsl /><prv /><sfl>submenu.append(new nw.MenuItem({ label: 'Item B' }));</sfl></tu><tu PI="31" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'Item B' }));</sl><tl /><tsl /><prv /><sfl>submenu.append(new nw.MenuItem({ label: 'Item B' }));</sfl></tu><tu PI="32" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// Create and append the 1st level menu to the menubar</sl><tl /><tsl /><prv /><sfl>// Create and append the 1st level menu to the menubar</sfl></tu><tu PI="33" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>menu.append(new nw.MenuItem({</sl><tl /><tsl /><prv /><sfl>menu.append(new nw.MenuItem({</sfl></tu><tu PI="34" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  label: </sl><tl /><tsl /><prv /><sfl>  label: 'First Menu',</sfl></tu><tu PI="34" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'First Menu',</sl><tl /><tsl /><prv /><sfl>  label: 'First Menu',</sfl></tu><tu PI="35" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  submenu: </sl><tl /><tsl /><prv /><sfl>  submenu: submenu</sfl></tu><tu PI="35" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>submenu</sl><tl /><tsl /><prv /><sfl>  submenu: submenu</sfl></tu><tu PI="36" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>}));</sl><tl /><tsl /><prv /><sfl>}));</sfl></tu><tu PI="37" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// Assign it to `window.menu` to get the menu displayed</sl><tl /><tsl /><prv /><sfl>// Assign it to `window.menu` to get the menu displayed</sfl></tu><tu PI="38" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>nw.Window.get().menu = menu;</sl><tl /><tsl /><prv /><sfl>nw.Window.get().menu = menu;</sfl></tu><tu PI="39" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="40" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## new Menu([option])</sl><tl /><tsl /><prv /><sfl>## new Menu([option])</sfl></tu><tu PI="41" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `option` `{Object}` _Optional_</sl><tl /><tsl /><prv /><sfl>* `option` `{Object}` _Optional_</sfl></tu><tu PI="42" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    - `type` `{String}` _Optional_ two types are accepted by this method: </sl><tl /><tsl /><prv /><sfl>    - `type` `{String}` _Optional_ two types are accepted by this method: "menubar" or "contextmenu". The value is set to "contextmenu" by default.</sfl></tu><tu PI="42" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>"menubar" or "contextmenu". </sl><tl /><tsl /><prv /><sfl>    - `type` `{String}` _Optional_ two types are accepted by this method: "menubar" or "contextmenu". The value is set to "contextmenu" by default.</sfl></tu><tu PI="42" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The value is set to "contextmenu" by default.</sl><tl /><tsl /><prv /><sfl>    - `type` `{String}` _Optional_ two types are accepted by this method: "menubar" or "contextmenu". The value is set to "contextmenu" by default.</sfl></tu><tu PI="43" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Create a `Menu` object.</sl><tl /><tsl /><prv /><sfl>Create a `Menu` object.</sfl></tu><tu PI="44" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## menu.items</sl><tl /><tsl /><prv /><sfl>## menu.items</sfl></tu><tu PI="45" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Get an array that contains all items of a menu. </sl><tl /><tsl /><prv /><sfl>Get an array that contains all items of a menu. Each item is an instance of `MenuItem`. See [MenuItem](MenuItem.md) for detailed information.</sfl></tu><tu PI="45" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Each item is an instance of `MenuItem`. </sl><tl /><tsl /><prv /><sfl>Get an array that contains all items of a menu. Each item is an instance of `MenuItem`. See [MenuItem](MenuItem.md) for detailed information.</sfl></tu><tu PI="45" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [MenuItem](MenuItem.md) for detailed information.</sl><tl /><tsl /><prv /><sfl>Get an array that contains all items of a menu. Each item is an instance of `MenuItem`. See [MenuItem](MenuItem.md) for detailed information.</sfl></tu><tu PI="46" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## menu.append(item)</sl><tl /><tsl /><prv /><sfl>## menu.append(item)</sfl></tu><tu PI="47" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `item` `{MenuItem}` the item to be appended to the tail of the menu</sl><tl /><tsl /><prv /><sfl>* `item` `{MenuItem}` the item to be appended to the tail of the menu</sfl></tu><tu PI="48" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Append `item` to the tail of the menu.</sl><tl /><tsl /><prv /><sfl>Append `item` to the tail of the menu.</sfl></tu><tu PI="49" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## menu.insert(item, i)</sl><tl /><tsl /><prv /><sfl>## menu.insert(item, i)</sfl></tu><tu PI="50" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `item` `{MenuItem}` the item to be inserted into the menu</sl><tl /><tsl /><prv /><sfl>* `item` `{MenuItem}` the item to be inserted into the menu</sfl></tu><tu PI="51" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `i` `{Integer}` the index in the menu list to insert the the item</sl><tl /><tsl /><prv /><sfl>* `i` `{Integer}` the index in the menu list to insert the the item</sfl></tu><tu PI="52" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Insert the `item` at `i`th position of the menu. </sl><tl /><tsl /><prv /><sfl>Insert the `item` at `i`th position of the menu. The index is started from 0.</sfl></tu><tu PI="52" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The index is started from 0.</sl><tl /><tsl /><prv /><sfl>Insert the `item` at `i`th position of the menu. The index is started from 0.</sfl></tu><tu PI="53" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## menu.remove(item)</sl><tl /><tsl /><prv /><sfl>## menu.remove(item)</sfl></tu><tu PI="54" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `item` `{MenuItem}` the item to be removed</sl><tl /><tsl /><prv /><sfl>* `item` `{MenuItem}` the item to be removed</sfl></tu><tu PI="55" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Remove `item` from the menu. </sl><tl /><tsl /><prv /><sfl>Remove `item` from the menu. This method requires you to keep the `MenuItem` outside the `Menu`.</sfl></tu><tu PI="55" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>This method requires you to keep the `MenuItem` outside the `Menu`.</sl><tl /><tsl /><prv /><sfl>Remove `item` from the menu. This method requires you to keep the `MenuItem` outside the `Menu`.</sfl></tu><tu PI="56" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## menu.removeAt(i)</sl><tl /><tsl /><prv /><sfl>## menu.removeAt(i)</sfl></tu><tu PI="57" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `i` `{Integer}` the index of the item to be removed from the menu</sl><tl /><tsl /><prv /><sfl>* `i` `{Integer}` the index of the item to be removed from the menu</sfl></tu><tu PI="58" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Remove the `i`th item form the menu.</sl><tl /><tsl /><prv /><sfl>Remove the `i`th item form the menu.</sfl></tu><tu PI="59" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## menu.popup(x, y)</sl><tl /><tsl /><prv /><sfl>## menu.popup(x, y)</sfl></tu><tu PI="60" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `x` `{Integer}` the x position of the anchor</sl><tl /><tsl /><prv /><sfl>* `x` `{Integer}` the x position of the anchor</sfl></tu><tu PI="61" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `y` `{Integer}` the y position of the anchor</sl><tl /><tsl /><prv /><sfl>* `y` `{Integer}` the y position of the anchor</sfl></tu><tu PI="62" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Popup the context menu at the anchor in (`x`, `y`) in current window. </sl><tl /><tsl /><prv /><sfl>Popup the context menu at the anchor in (`x`, `y`) in current window. This method is only valid for `contextmenu` type.</sfl></tu><tu PI="62" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>This method is only valid for `contextmenu` type.</sl><tl /><tsl /><prv /><sfl>Popup the context menu at the anchor in (`x`, `y`) in current window. This method is only valid for `contextmenu` type.</sfl></tu><tu PI="63" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Usually you would listen to `contextmenu` event of DOM elements and manually popup the menu:</sl><tl /><tsl /><prv /><sfl>Usually you would listen to `contextmenu` event of DOM elements and manually popup the menu:</sfl></tu><tu PI="64" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```javascript</sl><tl /><tsl /><prv /><sfl>```javascript</sfl></tu><tu PI="65" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>document.body.addEventListener('contextmenu', function(ev) { </sl><tl /><tsl /><prv /><sfl>document.body.addEventListener('contextmenu', function(ev) { </sfl></tu><tu PI="66" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  ev.preventDefault();</sl><tl /><tsl /><prv /><sfl>  ev.preventDefault();</sfl></tu><tu PI="67" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  menu.popup(ev.x, ev.y);</sl><tl /><tsl /><prv /><sfl>  menu.popup(ev.x, ev.y);</sfl></tu><tu PI="68" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  return false;</sl><tl /><tsl /><prv /><sfl>  return false;</sfl></tu><tu PI="69" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>});</sl><tl /><tsl /><prv /><sfl>});</sfl></tu><tu PI="70" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="71" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>In this way, you can precisely choose which menu to show for different elements, and you can update menu elements just before popuping it.</sl><tl /><tsl /><prv /><sfl>In this way, you can precisely choose which menu to show for different elements, and you can update menu elements just before popuping it.</sfl></tu><tu PI="72" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## menu.createMacBuiltin(appname, [options]) (Mac)</sl><tl /><tsl /><prv /><sfl>## menu.createMacBuiltin(appname, [options]) (Mac)</sfl></tu><tu PI="73" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `appname` `{String}` The application name</sl><tl /><tsl /><prv /><sfl>* `appname` `{String}` The application name</sfl></tu><tu PI="74" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>* `options` `{Object}` _Optional_</sl><tl /><tsl /><prv /><sfl>* `options` `{Object}` _Optional_</sfl></tu><tu PI="75" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    - `hideEdit` `{Boolean}` _Optional_ do not populate the Edit menu</sl><tl /><tsl /><prv /><sfl>    - `hideEdit` `{Boolean}` _Optional_ do not populate the Edit menu</sfl></tu><tu PI="76" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    - `hideWindow` `{Boolean}` _Optional_ do not populate the Window menu</sl><tl /><tsl /><prv /><sfl>    - `hideWindow` `{Boolean}` _Optional_ do not populate the Window menu</sfl></tu><tu PI="77" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Creates the builtin menus (App, Edit and Window) within the menubar on Mac. </sl><tl /><tsl /><prv /><sfl>Creates the builtin menus (App, Edit and Window) within the menubar on Mac. The items can be manipulated with the `items` property. The argument `appname` is used for the title of App menu.</sfl></tu><tu PI="77" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The items can be manipulated with the `items` property. </sl><tl /><tsl /><prv /><sfl>Creates the builtin menus (App, Edit and Window) within the menubar on Mac. The items can be manipulated with the `items` property. The argument `appname` is used for the title of App menu.</sfl></tu><tu PI="77" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The argument `appname` is used for the title of App menu.</sl><tl /><tsl /><prv /><sfl>Creates the builtin menus (App, Edit and Window) within the menubar on Mac. The items can be manipulated with the `items` property. The argument `appname` is used for the title of App menu.</sfl></tu><tu PI="78" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can still use builtin menus with other menu items. </sl><tl /><tsl /><prv /><sfl>You can still use builtin menus with other menu items. i.e. append or insert items to the menu is still valid.</sfl></tu><tu PI="78" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>i.e. </sl><tl /><tsl /><prv /><sfl>You can still use builtin menus with other menu items. i.e. append or insert items to the menu is still valid.</sfl></tu><tu PI="78" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>append or insert items to the menu is still valid.</sl><tl /><tsl /><prv /><sfl>You can still use builtin menus with other menu items. i.e. append or insert items to the menu is still valid.</sfl></tu></body></Transmate>
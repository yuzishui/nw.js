<Transmate Version="1.0.0.0"><head utxVersion="1.0u" Tag="0" CreationTime="2016/3/9 20:42:15" FileIndex="0" SourceLanguage="英语" TargetLanguage="中文简体" SourceDocumentPath="D:\workspace_github\nw.js\nw.js\Getting Started\Getting Started.txt" RowIndex="0" HideOrNot="False" TermFileType="" TermFileId="" TheOriginalWord="786" TheNumberWords="0" ToTranslate="0" FileType="0" MemFileOutType="" MemFileOutId="" MemFileInType="" MemFileInId="" LitePath="D:\workspace_github\nw.js\nw.js\FileInformation.ueprj" CustomTermPath="" PreviewPath="D:\workspace_github\nw.js\nw.js\Getting Started\Getting StartedPreview.html"><links /></head><body><tu PI="1" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl># Getting Started with NW.js</sl><tl /><tsl /><prv /><sfl># Getting Started with NW.js</sfl></tu><tu PI="2" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>---</sl><tl /><tsl /><prv /><sfl>---</sfl></tu><tu PI="3" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>[TOC]</sl><tl /><tsl /><prv /><sfl>[TOC]</sfl></tu><tu PI="4" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## What can NW.js do?</sl><tl /><tsl /><prv /><sfl>## What can NW.js do?</sfl></tu><tu PI="5" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>NW.js is based on [Chromium](http://www.chromium.org) and [Node.js](http://nodejs.org/). </sl><tl /><tsl /><prv /><sfl>NW.js is based on [Chromium](http://www.chromium.org) and [Node.js](http://nodejs.org/). It聽lets聽you聽call Node.js code and modules directly from browser and also use Web technologies in your app. Further, you can easily package a web application to a native application.</sfl></tu><tu PI="5" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>It聽lets聽you聽call Node.js code and modules directly from browser and also use Web technologies in your app. </sl><tl /><tsl /><prv /><sfl>NW.js is based on [Chromium](http://www.chromium.org) and [Node.js](http://nodejs.org/). It聽lets聽you聽call Node.js code and modules directly from browser and also use Web technologies in your app. Further, you can easily package a web application to a native application.</sfl></tu><tu PI="5" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Further, you can easily package a web application to a native application.</sl><tl /><tsl /><prv /><sfl>NW.js is based on [Chromium](http://www.chromium.org) and [Node.js](http://nodejs.org/). It聽lets聽you聽call Node.js code and modules directly from browser and also use Web technologies in your app. Further, you can easily package a web application to a native application.</sfl></tu><tu PI="6" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Get NW.js</sl><tl /><tsl /><prv /><sfl>## Get NW.js</sfl></tu><tu PI="7" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can get the latest binaries from official website http://nwjs.io. </sl><tl /><tsl /><prv /><sfl>You can get the latest binaries from official website http://nwjs.io. Or you can also build NW.js binaries yourself by following the instructions in [Building NW.js](../For Developers/Building NW.js.md).</sfl></tu><tu PI="7" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Or you can also build NW.js binaries yourself by following the instructions in [Building NW.js](../For Developers/Building NW.js.md).</sl><tl /><tsl /><prv /><sfl>You can get the latest binaries from official website http://nwjs.io. Or you can also build NW.js binaries yourself by following the instructions in [Building NW.js](../For Developers/Building NW.js.md).</sfl></tu><tu PI="8" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! tip</sfl></tu><tu PI="8" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>tip</sl><tl /><tsl /><prv /><sfl>!!! tip</sfl></tu><tu PI="9" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    You are recommended to choose SDK build flavor to develop your app, which enables you to use DevTools to debug your app. </sl><tl /><tsl /><prv /><sfl>    You are recommended to choose SDK build flavor to develop your app, which enables you to use DevTools to debug your app. See [Build Flavors](Advanced/Build Flavors.md) for the differences between build flavors.</sfl></tu><tu PI="9" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Build Flavors](Advanced/Build Flavors.md) for the differences between build flavors.</sl><tl /><tsl /><prv /><sfl>    You are recommended to choose SDK build flavor to develop your app, which enables you to use DevTools to debug your app. See [Build Flavors](Advanced/Build Flavors.md) for the differences between build flavors.</sfl></tu><tu PI="10" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Write NW.js App</sl><tl /><tsl /><prv /><sfl>## Write NW.js App</sfl></tu><tu PI="11" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Example 1 - Hello World</sl><tl /><tsl /><prv /><sfl>### Example 1 - Hello World</sfl></tu><tu PI="12" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>This the basic example shows how to write an NW.js app.</sl><tl /><tsl /><prv /><sfl>This the basic example shows how to write an NW.js app.</sfl></tu><tu PI="13" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>**Step 1.** Create `package.json`:</sl><tl /><tsl /><prv /><sfl>**Step 1.** Create `package.json`:</sfl></tu><tu PI="14" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```json</sl><tl /><tsl /><prv /><sfl>```json</sfl></tu><tu PI="15" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>{</sl><tl /><tsl /><prv /><sfl>{</sfl></tu><tu PI="16" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  "name": </sl><tl /><tsl /><prv /><sfl>  "name": "helloworld",</sfl></tu><tu PI="16" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>"helloworld",</sl><tl /><tsl /><prv /><sfl>  "name": "helloworld",</sfl></tu><tu PI="17" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  "main": </sl><tl /><tsl /><prv /><sfl>  "main": "index.html"</sfl></tu><tu PI="17" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>"index.html"</sl><tl /><tsl /><prv /><sfl>  "main": "index.html"</sfl></tu><tu PI="18" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>}</sl><tl /><tsl /><prv /><sfl>}</sfl></tu><tu PI="19" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="20" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`package.json` is the manifest file in your app. </sl><tl /><tsl /><prv /><sfl>`package.json` is the manifest file in your app. It is written in [JSON format](http://www.json.org/). The `main` field figures out the first page opened by the NW.js, i.e. `"index.html"` in this example. And the `name` field is the unique name used among NW.js apps. See [Manifest Format](../References/Manifest Format.md) for more details.</sfl></tu><tu PI="20" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>It is written in [JSON format](http://www.json.org/). </sl><tl /><tsl /><prv /><sfl>`package.json` is the manifest file in your app. It is written in [JSON format](http://www.json.org/). The `main` field figures out the first page opened by the NW.js, i.e. `"index.html"` in this example. And the `name` field is the unique name used among NW.js apps. See [Manifest Format](../References/Manifest Format.md) for more details.</sfl></tu><tu PI="20" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The `main` field figures out the first page opened by the NW.js, i.e. `"index.html"` in this example. </sl><tl /><tsl /><prv /><sfl>`package.json` is the manifest file in your app. It is written in [JSON format](http://www.json.org/). The `main` field figures out the first page opened by the NW.js, i.e. `"index.html"` in this example. And the `name` field is the unique name used among NW.js apps. See [Manifest Format](../References/Manifest Format.md) for more details.</sfl></tu><tu PI="20" MatchPercent="" Bindex="4" IsVisible="False" TranStatus="" StateTranslation="False"><sl>And the `name` field is the unique name used among NW.js apps. </sl><tl /><tsl /><prv /><sfl>`package.json` is the manifest file in your app. It is written in [JSON format](http://www.json.org/). The `main` field figures out the first page opened by the NW.js, i.e. `"index.html"` in this example. And the `name` field is the unique name used among NW.js apps. See [Manifest Format](../References/Manifest Format.md) for more details.</sfl></tu><tu PI="20" MatchPercent="" Bindex="5" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Manifest Format](../References/Manifest Format.md) for more details.</sl><tl /><tsl /><prv /><sfl>`package.json` is the manifest file in your app. It is written in [JSON format](http://www.json.org/). The `main` field figures out the first page opened by the NW.js, i.e. `"index.html"` in this example. And the `name` field is the unique name used among NW.js apps. See [Manifest Format](../References/Manifest Format.md) for more details.</sfl></tu><tu PI="21" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>**Step 2.** Create `index.html`:</sl><tl /><tsl /><prv /><sfl>**Step 2.** Create `index.html`:</sfl></tu><tu PI="22" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```html</sl><tl /><tsl /><prv /><sfl>```html</sfl></tu><tu PI="23" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;!DOCTYPE html&gt;</sl><tl /><tsl /><prv /><sfl>&lt;!DOCTYPE html&gt;</sfl></tu><tu PI="24" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;html&gt;</sl><tl /><tsl /><prv /><sfl>&lt;html&gt;</sfl></tu><tu PI="25" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  &lt;head&gt;</sl><tl /><tsl /><prv /><sfl>  &lt;head&gt;</sfl></tu><tu PI="26" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    &lt;title&gt;Hello World!&lt;/title&gt;</sl><tl /><tsl /><prv /><sfl>    &lt;title&gt;Hello World!&lt;/title&gt;</sfl></tu><tu PI="27" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  &lt;/head&gt;</sl><tl /><tsl /><prv /><sfl>  &lt;/head&gt;</sfl></tu><tu PI="28" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  &lt;body&gt;</sl><tl /><tsl /><prv /><sfl>  &lt;body&gt;</sfl></tu><tu PI="29" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    &lt;h1&gt;Hello World!&lt;/h1&gt;</sl><tl /><tsl /><prv /><sfl>    &lt;h1&gt;Hello World!&lt;/h1&gt;</sfl></tu><tu PI="30" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  &lt;/body&gt;</sl><tl /><tsl /><prv /><sfl>  &lt;/body&gt;</sfl></tu><tu PI="31" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;/html&gt;</sl><tl /><tsl /><prv /><sfl>&lt;/html&gt;</sfl></tu><tu PI="32" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="33" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>This is the normal HTML file. </sl><tl /><tsl /><prv /><sfl>This is the normal HTML file. You can use any web technologies supported by latest browsers.</sfl></tu><tu PI="33" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can use any web technologies supported by latest browsers.</sl><tl /><tsl /><prv /><sfl>This is the normal HTML file. You can use any web technologies supported by latest browsers.</sfl></tu><tu PI="34" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! note "Chromium Specific Features"</sfl></tu><tu PI="34" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>note "Chromium Specific Features"</sl><tl /><tsl /><prv /><sfl>!!! note "Chromium Specific Features"</sfl></tu><tu PI="35" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    NW.js is based on Chromium, which also enables you to use Chrome specific features. </sl><tl /><tsl /><prv /><sfl>    NW.js is based on Chromium, which also enables you to use Chrome specific features. Such as [File System API](https://developer.mozilla.org/en-US/docs/Web/API/File_System_API), experimental CSS styles with `-webkit-` prefix. **Be careful with these non-standard features since they may be deprecated shortly.**</sfl></tu><tu PI="35" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Such as [File System API](https://developer.mozilla.org/en-US/docs/Web/API/File_System_API), experimental CSS styles with `-webkit-` prefix. </sl><tl /><tsl /><prv /><sfl>    NW.js is based on Chromium, which also enables you to use Chrome specific features. Such as [File System API](https://developer.mozilla.org/en-US/docs/Web/API/File_System_API), experimental CSS styles with `-webkit-` prefix. **Be careful with these non-standard features since they may be deprecated shortly.**</sfl></tu><tu PI="35" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>**Be careful with these non-standard features since they may be deprecated shortly.**</sl><tl /><tsl /><prv /><sfl>    NW.js is based on Chromium, which also enables you to use Chrome specific features. Such as [File System API](https://developer.mozilla.org/en-US/docs/Web/API/File_System_API), experimental CSS styles with `-webkit-` prefix. **Be careful with these non-standard features since they may be deprecated shortly.**</sfl></tu><tu PI="36" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>**Step 3.** Run your app</sl><tl /><tsl /><prv /><sfl>**Step 3.** Run your app</sfl></tu><tu PI="37" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```bash</sl><tl /><tsl /><prv /><sfl>```bash</sfl></tu><tu PI="38" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>cd /path/to/your/app</sl><tl /><tsl /><prv /><sfl>cd /path/to/your/app</sfl></tu><tu PI="39" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>/path/to/nw .</sl><tl /><tsl /><prv /><sfl>/path/to/nw .</sfl></tu><tu PI="40" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="41" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`/path/to/nw` is the binary file of NW.js. </sl><tl /><tsl /><prv /><sfl>`/path/to/nw` is the binary file of NW.js. On Windows, it's `nw.exe`; On Linux, it's `nw`; On Mac, it's `nwjs.app/Contents/MacOS/nwjs`.</sfl></tu><tu PI="41" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>On Windows, it's `nw.exe`; </sl><tl /><tsl /><prv /><sfl>`/path/to/nw` is the binary file of NW.js. On Windows, it's `nw.exe`; On Linux, it's `nw`; On Mac, it's `nwjs.app/Contents/MacOS/nwjs`.</sfl></tu><tu PI="41" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>On Linux, it's `nw`; </sl><tl /><tsl /><prv /><sfl>`/path/to/nw` is the binary file of NW.js. On Windows, it's `nw.exe`; On Linux, it's `nw`; On Mac, it's `nwjs.app/Contents/MacOS/nwjs`.</sfl></tu><tu PI="41" MatchPercent="" Bindex="4" IsVisible="False" TranStatus="" StateTranslation="False"><sl>On Mac, it's `nwjs.app/Contents/MacOS/nwjs`.</sl><tl /><tsl /><prv /><sfl>`/path/to/nw` is the binary file of NW.js. On Windows, it's `nw.exe`; On Linux, it's `nw`; On Mac, it's `nwjs.app/Contents/MacOS/nwjs`.</sfl></tu><tu PI="42" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! tip "Drag &amp;amp; Drop on Windows"</sfl></tu><tu PI="42" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>tip "Drag &amp;amp; </sl><tl /><tsl /><prv /><sfl>!!! tip "Drag &amp;amp; Drop on Windows"</sfl></tu><tu PI="42" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Drop on Windows"</sl><tl /><tsl /><prv /><sfl>!!! tip "Drag &amp;amp; Drop on Windows"</sfl></tu><tu PI="43" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    On Windows, you can drag the `folder containing package.json` to `nw.exe` to run your app.</sl><tl /><tsl /><prv /><sfl>    On Windows, you can drag the `folder containing package.json` to `nw.exe` to run your app.</sfl></tu><tu PI="44" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Example 2 - Using NW.js APIs</sl><tl /><tsl /><prv /><sfl>### Example 2 - Using NW.js APIs</sfl></tu><tu PI="45" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>All NW.js APIs are loaded in `nw` object globally and can be used directly in JavaScript files. </sl><tl /><tsl /><prv /><sfl>All NW.js APIs are loaded in `nw` object globally and can be used directly in JavaScript files. See [API References](../index.md#references) for full list of supported APIs.</sfl></tu><tu PI="45" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [API References](../index.md#references) for full list of supported APIs.</sl><tl /><tsl /><prv /><sfl>All NW.js APIs are loaded in `nw` object globally and can be used directly in JavaScript files. See [API References](../index.md#references) for full list of supported APIs.</sfl></tu><tu PI="46" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>This example shows how to create a native context menu in your NW.js app. </sl><tl /><tsl /><prv /><sfl>This example shows how to create a native context menu in your NW.js app. You can create `index.html` with following content:</sfl></tu><tu PI="46" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can create `index.html` with following content:</sl><tl /><tsl /><prv /><sfl>This example shows how to create a native context menu in your NW.js app. You can create `index.html` with following content:</sfl></tu><tu PI="47" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```html</sl><tl /><tsl /><prv /><sfl>```html</sfl></tu><tu PI="48" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;!DOCTYPE html&gt;</sl><tl /><tsl /><prv /><sfl>&lt;!DOCTYPE html&gt;</sfl></tu><tu PI="49" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;html&gt;</sl><tl /><tsl /><prv /><sfl>&lt;html&gt;</sfl></tu><tu PI="50" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;head&gt;</sl><tl /><tsl /><prv /><sfl>&lt;head&gt;</sfl></tu><tu PI="51" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  &lt;title&gt;Context Menu&lt;/title&gt;</sl><tl /><tsl /><prv /><sfl>  &lt;title&gt;Context Menu&lt;/title&gt;</sfl></tu><tu PI="52" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;/head&gt;</sl><tl /><tsl /><prv /><sfl>&lt;/head&gt;</sfl></tu><tu PI="53" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;body style="width: </sl><tl /><tsl /><prv /><sfl>&lt;body style="width: 100%; height: 100%;"&gt;</sfl></tu><tu PI="53" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>100%; </sl><tl /><tsl /><prv /><sfl>&lt;body style="width: 100%; height: 100%;"&gt;</sfl></tu><tu PI="53" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>height: </sl><tl /><tsl /><prv /><sfl>&lt;body style="width: 100%; height: 100%;"&gt;</sfl></tu><tu PI="53" MatchPercent="" Bindex="4" IsVisible="False" TranStatus="" StateTranslation="False"><sl>100%;"&gt;</sl><tl /><tsl /><prv /><sfl>&lt;body style="width: 100%; height: 100%;"&gt;</sfl></tu><tu PI="54" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;p&gt;'Right click' to show context menu.&lt;/p&gt;</sl><tl /><tsl /><prv /><sfl>&lt;p&gt;'Right click' to show context menu.&lt;/p&gt;</sfl></tu><tu PI="55" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;script&gt;</sl><tl /><tsl /><prv /><sfl>&lt;script&gt;</sfl></tu><tu PI="56" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// Create an empty context menu</sl><tl /><tsl /><prv /><sfl>// Create an empty context menu</sfl></tu><tu PI="57" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>var menu = new nw.Menu();</sl><tl /><tsl /><prv /><sfl>var menu = new nw.Menu();</sfl></tu><tu PI="58" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// Add some items with label</sl><tl /><tsl /><prv /><sfl>// Add some items with label</sfl></tu><tu PI="59" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>menu.append(new nw.MenuItem({</sl><tl /><tsl /><prv /><sfl>menu.append(new nw.MenuItem({</sfl></tu><tu PI="60" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  label: </sl><tl /><tsl /><prv /><sfl>  label: 'Item A',</sfl></tu><tu PI="60" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'Item A',</sl><tl /><tsl /><prv /><sfl>  label: 'Item A',</sfl></tu><tu PI="61" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  click: </sl><tl /><tsl /><prv /><sfl>  click: function(){</sfl></tu><tu PI="61" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>function(){</sl><tl /><tsl /><prv /><sfl>  click: function(){</sfl></tu><tu PI="62" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    alert('You have clicked at "Item A"');</sl><tl /><tsl /><prv /><sfl>    alert('You have clicked at "Item A"');</sfl></tu><tu PI="63" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  }</sl><tl /><tsl /><prv /><sfl>  }</sfl></tu><tu PI="64" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>}));</sl><tl /><tsl /><prv /><sfl>}));</sfl></tu><tu PI="65" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>menu.append(new nw.MenuItem({ label: </sl><tl /><tsl /><prv /><sfl>menu.append(new nw.MenuItem({ label: 'Item B' }));</sfl></tu><tu PI="65" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'Item B' }));</sl><tl /><tsl /><prv /><sfl>menu.append(new nw.MenuItem({ label: 'Item B' }));</sfl></tu><tu PI="66" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>menu.append(new nw.MenuItem({ type: </sl><tl /><tsl /><prv /><sfl>menu.append(new nw.MenuItem({ type: 'separator' }));</sfl></tu><tu PI="66" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'separator' }));</sl><tl /><tsl /><prv /><sfl>menu.append(new nw.MenuItem({ type: 'separator' }));</sfl></tu><tu PI="67" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>menu.append(new nw.MenuItem({ label: </sl><tl /><tsl /><prv /><sfl>menu.append(new nw.MenuItem({ label: 'Item C' }));</sfl></tu><tu PI="67" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>'Item C' }));</sl><tl /><tsl /><prv /><sfl>menu.append(new nw.MenuItem({ label: 'Item C' }));</sfl></tu><tu PI="68" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// Hooks the "contextmenu" event</sl><tl /><tsl /><prv /><sfl>// Hooks the "contextmenu" event</sfl></tu><tu PI="69" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>document.body.addEventListener('contextmenu', function(ev) {</sl><tl /><tsl /><prv /><sfl>document.body.addEventListener('contextmenu', function(ev) {</sfl></tu><tu PI="70" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  // Prevent showing default context menu</sl><tl /><tsl /><prv /><sfl>  // Prevent showing default context menu</sfl></tu><tu PI="71" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  ev.preventDefault();</sl><tl /><tsl /><prv /><sfl>  ev.preventDefault();</sfl></tu><tu PI="72" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  // Popup the native context menu at place you click</sl><tl /><tsl /><prv /><sfl>  // Popup the native context menu at place you click</sfl></tu><tu PI="73" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  menu.popup(ev.x, ev.y);</sl><tl /><tsl /><prv /><sfl>  menu.popup(ev.x, ev.y);</sfl></tu><tu PI="74" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  return false;</sl><tl /><tsl /><prv /><sfl>  return false;</sfl></tu><tu PI="75" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>}, false);</sl><tl /><tsl /><prv /><sfl>}, false);</sfl></tu><tu PI="76" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;/script&gt;  </sl><tl /><tsl /><prv /><sfl>&lt;/script&gt;  </sfl></tu><tu PI="77" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;/body&gt;</sl><tl /><tsl /><prv /><sfl>&lt;/body&gt;</sfl></tu><tu PI="78" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;/html&gt;</sl><tl /><tsl /><prv /><sfl>&lt;/html&gt;</sfl></tu><tu PI="79" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="80" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>... then run your app:</sl><tl /><tsl /><prv /><sfl>... then run your app:</sfl></tu><tu PI="81" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```bash</sl><tl /><tsl /><prv /><sfl>```bash</sfl></tu><tu PI="82" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>cd /path/to/your/app</sl><tl /><tsl /><prv /><sfl>cd /path/to/your/app</sfl></tu><tu PI="83" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>/path/to/nw .</sl><tl /><tsl /><prv /><sfl>/path/to/nw .</sfl></tu><tu PI="84" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="85" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! tip "require('nw.gui')"</sfl></tu><tu PI="85" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>tip "require('nw.gui')"</sl><tl /><tsl /><prv /><sfl>!!! tip "require('nw.gui')"</sfl></tu><tu PI="86" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    The legacy way of loading NW.js APIs using `require('nw.gui')` is also supported. </sl><tl /><tsl /><prv /><sfl>    The legacy way of loading NW.js APIs using `require('nw.gui')` is also supported. It returns the same `nw` object.</sfl></tu><tu PI="86" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>It returns the same `nw` object.</sl><tl /><tsl /><prv /><sfl>    The legacy way of loading NW.js APIs using `require('nw.gui')` is also supported. It returns the same `nw` object.</sfl></tu><tu PI="87" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Example 3 - Using Node.js API</sl><tl /><tsl /><prv /><sfl>### Example 3 - Using Node.js API</sfl></tu><tu PI="88" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can call node.js and modules directly from the DOM. </sl><tl /><tsl /><prv /><sfl>You can call node.js and modules directly from the DOM. So it enables endless possibilities for writing apps with nw.js.</sfl></tu><tu PI="88" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>So it enables endless possibilities for writing apps with nw.js.</sl><tl /><tsl /><prv /><sfl>You can call node.js and modules directly from the DOM. So it enables endless possibilities for writing apps with nw.js.</sfl></tu><tu PI="89" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>This example shows how to query the OS platform with `os` module of Node.js. </sl><tl /><tsl /><prv /><sfl>This example shows how to query the OS platform with `os` module of Node.js. Simply create the `index.html` file with following content and run it with NW.js.</sfl></tu><tu PI="89" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Simply create the `index.html` file with following content and run it with NW.js.</sl><tl /><tsl /><prv /><sfl>This example shows how to query the OS platform with `os` module of Node.js. Simply create the `index.html` file with following content and run it with NW.js.</sfl></tu><tu PI="90" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```html</sl><tl /><tsl /><prv /><sfl>```html</sfl></tu><tu PI="91" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;!DOCTYPE html&gt;</sl><tl /><tsl /><prv /><sfl>&lt;!DOCTYPE html&gt;</sfl></tu><tu PI="92" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;html&gt;</sl><tl /><tsl /><prv /><sfl>&lt;html&gt;</sfl></tu><tu PI="93" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;head&gt;</sl><tl /><tsl /><prv /><sfl>&lt;head&gt;</sfl></tu><tu PI="94" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  &lt;title&gt;My OS Platform&lt;/title&gt;</sl><tl /><tsl /><prv /><sfl>  &lt;title&gt;My OS Platform&lt;/title&gt;</sfl></tu><tu PI="95" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;/head&gt;</sl><tl /><tsl /><prv /><sfl>&lt;/head&gt;</sfl></tu><tu PI="96" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;body&gt;</sl><tl /><tsl /><prv /><sfl>&lt;body&gt;</sfl></tu><tu PI="97" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;script&gt;</sl><tl /><tsl /><prv /><sfl>&lt;script&gt;</sfl></tu><tu PI="98" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// get the system platform using node.js</sl><tl /><tsl /><prv /><sfl>// get the system platform using node.js</sfl></tu><tu PI="99" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>var os = require('os');</sl><tl /><tsl /><prv /><sfl>var os = require('os');</sfl></tu><tu PI="100" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>document.write('You are running on ', os.platform());</sl><tl /><tsl /><prv /><sfl>document.write('You are running on ', os.platform());</sfl></tu><tu PI="101" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;/script&gt;</sl><tl /><tsl /><prv /><sfl>&lt;/script&gt;</sfl></tu><tu PI="102" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;/body&gt;</sl><tl /><tsl /><prv /><sfl>&lt;/body&gt;</sfl></tu><tu PI="103" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;/html&gt;</sl><tl /><tsl /><prv /><sfl>&lt;/html&gt;</sfl></tu><tu PI="104" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="105" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You could also use the modules installed by [`npm`](https://www.npmjs.com/) with NW.js.</sl><tl /><tsl /><prv /><sfl>You could also use the modules installed by [`npm`](https://www.npmjs.com/) with NW.js.</sfl></tu><tu PI="106" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! note "Native Node Modules"</sfl></tu><tu PI="106" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>note "Native Node Modules"</sl><tl /><tsl /><prv /><sfl>!!! note "Native Node Modules"</sfl></tu><tu PI="107" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    Native Node modules, built when running `npm install`, are not compatible with NW.js ABI. </sl><tl /><tsl /><prv /><sfl>    Native Node modules, built when running `npm install`, are not compatible with NW.js ABI. To use them, you have to rebuild it from source code with [`nw-gyp`](https://github.com/nwjs/nw-gyp). See [Use Native Node Modules](Advanced/Use Native Node Modules.md) for details.</sfl></tu><tu PI="107" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>To use them, you have to rebuild it from source code with [`nw-gyp`](https://github.com/nwjs/nw-gyp). </sl><tl /><tsl /><prv /><sfl>    Native Node modules, built when running `npm install`, are not compatible with NW.js ABI. To use them, you have to rebuild it from source code with [`nw-gyp`](https://github.com/nwjs/nw-gyp). See [Use Native Node Modules](Advanced/Use Native Node Modules.md) for details.</sfl></tu><tu PI="107" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Use Native Node Modules](Advanced/Use Native Node Modules.md) for details.</sl><tl /><tsl /><prv /><sfl>    Native Node modules, built when running `npm install`, are not compatible with NW.js ABI. To use them, you have to rebuild it from source code with [`nw-gyp`](https://github.com/nwjs/nw-gyp). See [Use Native Node Modules](Advanced/Use Native Node Modules.md) for details.</sfl></tu><tu PI="108" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## What's next</sl><tl /><tsl /><prv /><sfl>## What's next</sfl></tu><tu PI="109" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Debugging with DevTools](Debugging with DevTools.md) for debugging NW.js apps.</sl><tl /><tsl /><prv /><sfl>See [Debugging with DevTools](Debugging with DevTools.md) for debugging NW.js apps.</sfl></tu><tu PI="110" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Package and Distribute](Package and Distribute.md) for packaging and redistribute your app in production.</sl><tl /><tsl /><prv /><sfl>See [Package and Distribute](Package and Distribute.md) for packaging and redistribute your app in production.</sfl></tu><tu PI="111" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [FAQ](FAQ.md) for issues you may encounter.</sl><tl /><tsl /><prv /><sfl>See [FAQ](FAQ.md) for issues you may encounter.</sfl></tu><tu PI="112" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [the migration notes](Migration/From 0.12 to 0.13.md), if you are migrating your app from NW.js 0.12 or older versions.</sl><tl /><tsl /><prv /><sfl>See [the migration notes](Migration/From 0.12 to 0.13.md), if you are migrating your app from NW.js 0.12 or older versions.</sfl></tu><tu PI="113" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## Getting Help</sl><tl /><tsl /><prv /><sfl>## Getting Help</sfl></tu><tu PI="114" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>There are lots of useful information on [NW.js wiki](https://github.com/nwjs/nw.js/wiki). </sl><tl /><tsl /><prv /><sfl>There are lots of useful information on [NW.js wiki](https://github.com/nwjs/nw.js/wiki). The wiki is also open for everyone, and you are encouraged to publish your knowledge on wiki.</sfl></tu><tu PI="114" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The wiki is also open for everyone, and you are encouraged to publish your knowledge on wiki.</sl><tl /><tsl /><prv /><sfl>There are lots of useful information on [NW.js wiki](https://github.com/nwjs/nw.js/wiki). The wiki is also open for everyone, and you are encouraged to publish your knowledge on wiki.</sfl></tu><tu PI="115" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>You can also ask questions on [mail list on Google group](https://groups.google.com/forum/#!forum/nwjs-general) or chat on [Gitter](https://gitter.im/nwjs/nw.js).</sl><tl /><tsl /><prv /><sfl>You can also ask questions on [mail list on Google group](https://groups.google.com/forum/#!forum/nwjs-general) or chat on [Gitter](https://gitter.im/nwjs/nw.js).</sfl></tu><tu PI="116" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Please report bugs or submit requirements on [GitHub](https://github.com/nwjs/nw.js/issues) to make NW.js more powerful.</sl><tl /><tsl /><prv /><sfl>Please report bugs or submit requirements on [GitHub](https://github.com/nwjs/nw.js/issues) to make NW.js more powerful.</sfl></tu></body></Transmate>
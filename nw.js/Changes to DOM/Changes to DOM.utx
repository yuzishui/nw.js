<Transmate Version="1.0.0.0"><head utxVersion="1.0u" Tag="0" CreationTime="2016/3/9 20:41:27" FileIndex="0" SourceLanguage="英语" TargetLanguage="中文简体" SourceDocumentPath="D:\workspace_github\nw.js\nw.js\Changes to DOM\Changes to DOM.txt" RowIndex="0" HideOrNot="False" TermFileType="" TermFileId="" TheOriginalWord="500" TheNumberWords="0" ToTranslate="0" FileType="0" MemFileOutType="" MemFileOutId="" MemFileInType="" MemFileInId="" LitePath="D:\workspace_github\nw.js\nw.js\FileInformation.ueprj" CustomTermPath="" PreviewPath="D:\workspace_github\nw.js\nw.js\Changes to DOM\Changes to DOMPreview.html"><links /></head><body><tu PI="1" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl># Changes to DOM {: </sl><tl /><tsl /><prv /><sfl># Changes to DOM {: .doctitle}</sfl></tu><tu PI="1" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>.doctitle}</sl><tl /><tsl /><prv /><sfl># Changes to DOM {: .doctitle}</sfl></tu><tu PI="2" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>---</sl><tl /><tsl /><prv /><sfl>---</sfl></tu><tu PI="3" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>[TOC]</sl><tl /><tsl /><prv /><sfl>[TOC]</sfl></tu><tu PI="4" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## &amp;lt;input type="file"&amp;gt;</sl><tl /><tsl /><prv /><sfl>## &amp;lt;input type="file"&amp;gt;</sfl></tu><tu PI="5" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>HTML5 does provided limited support for file dialogs with `&lt;input type="file" /&gt;` element, such as [`multiple`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-multiple), [`accept`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept) and `webkitdirectory`. </sl><tl /><tsl /><prv /><sfl>HTML5 does provided limited support for file dialogs with `&lt;input type="file" /&gt;` element, such as [`multiple`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-multiple), [`accept`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept) and `webkitdirectory`. NW.js extended the file input to better support native apps.</sfl></tu><tu PI="5" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>NW.js extended the file input to better support native apps.</sl><tl /><tsl /><prv /><sfl>HTML5 does provided limited support for file dialogs with `&lt;input type="file" /&gt;` element, such as [`multiple`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-multiple), [`accept`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept) and `webkitdirectory`. NW.js extended the file input to better support native apps.</sfl></tu><tu PI="6" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! note</sfl></tu><tu PI="6" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>note</sl><tl /><tsl /><prv /><sfl>!!! note</sfl></tu><tu PI="7" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    NW.js extended features are only enabled in Node frames for security reasons. </sl><tl /><tsl /><prv /><sfl>    NW.js extended features are only enabled in Node frames for security reasons. See [Security in NW.js](../For Users/Advanced/Security in NW.js.md) for the differences of Node and normal frame.</sfl></tu><tu PI="7" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [Security in NW.js](../For Users/Advanced/Security in NW.js.md) for the differences of Node and normal frame.</sl><tl /><tsl /><prv /><sfl>    NW.js extended features are only enabled in Node frames for security reasons. See [Security in NW.js](../For Users/Advanced/Security in NW.js.md) for the differences of Node and normal frame.</sfl></tu><tu PI="8" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### fileinput.value</sl><tl /><tsl /><prv /><sfl>### fileinput.value</sfl></tu><tu PI="9" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>The property contains native path of the local file.</sl><tl /><tsl /><prv /><sfl>The property contains native path of the local file.</sfl></tu><tu PI="10" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>For example, you can read the file selected by user with Node.js API:</sl><tl /><tsl /><prv /><sfl>For example, you can read the file selected by user with Node.js API:</sfl></tu><tu PI="11" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```javascript</sl><tl /><tsl /><prv /><sfl>```javascript</sfl></tu><tu PI="12" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// Get the native path of the file selected by user</sl><tl /><tsl /><prv /><sfl>// Get the native path of the file selected by user</sfl></tu><tu PI="13" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>var fileinput = document.querySelector('input[type=file]');</sl><tl /><tsl /><prv /><sfl>var fileinput = document.querySelector('input[type=file]');</sfl></tu><tu PI="14" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>var path = fileinput.value;</sl><tl /><tsl /><prv /><sfl>var path = fileinput.value;</sfl></tu><tu PI="15" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>// Read file with Node.js API</sl><tl /><tsl /><prv /><sfl>// Read file with Node.js API</sfl></tu><tu PI="16" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>var fs = nw.require('fs');</sl><tl /><tsl /><prv /><sfl>var fs = nw.require('fs');</sfl></tu><tu PI="17" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>fs.readFile(path, 'utf8', function(err, txt) {</sl><tl /><tsl /><prv /><sfl>fs.readFile(path, 'utf8', function(err, txt) {</sfl></tu><tu PI="18" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  if (err) {</sl><tl /><tsl /><prv /><sfl>  if (err) {</sfl></tu><tu PI="19" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    console.error(err);</sl><tl /><tsl /><prv /><sfl>    console.error(err);</sfl></tu><tu PI="20" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    return;</sl><tl /><tsl /><prv /><sfl>    return;</sfl></tu><tu PI="21" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  }</sl><tl /><tsl /><prv /><sfl>  }</sfl></tu><tu PI="22" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  console.log(txt);</sl><tl /><tsl /><prv /><sfl>  console.log(txt);</sfl></tu><tu PI="23" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>});</sl><tl /><tsl /><prv /><sfl>});</sfl></tu><tu PI="24" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="25" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### fileitem.path</sl><tl /><tsl /><prv /><sfl>### fileitem.path</sfl></tu><tu PI="26" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>HTML5 provides a `files` attribute to return all files selected in a `&lt;input&gt;` tag. </sl><tl /><tsl /><prv /><sfl>HTML5 provides a `files` attribute to return all files selected in a `&lt;input&gt;` tag. NW.js provided an extra property `fileitem.path` to each file item in `files`, which is the native path of the selected file.</sfl></tu><tu PI="26" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>NW.js provided an extra property `fileitem.path` to each file item in `files`, which is the native path of the selected file.</sl><tl /><tsl /><prv /><sfl>HTML5 provides a `files` attribute to return all files selected in a `&lt;input&gt;` tag. NW.js provided an extra property `fileitem.path` to each file item in `files`, which is the native path of the selected file.</sfl></tu><tu PI="27" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```javascript</sl><tl /><tsl /><prv /><sfl>```javascript</sfl></tu><tu PI="28" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>var fileinput = document.querySelector('input[type=file]');</sl><tl /><tsl /><prv /><sfl>var fileinput = document.querySelector('input[type=file]');</sfl></tu><tu PI="29" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>var files = fileinput.files;</sl><tl /><tsl /><prv /><sfl>var files = fileinput.files;</sfl></tu><tu PI="30" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>for (var i = 0; </sl><tl /><tsl /><prv /><sfl>for (var i = 0; i &lt; files.length; ++i) {</sfl></tu><tu PI="30" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>i &lt; files.length; </sl><tl /><tsl /><prv /><sfl>for (var i = 0; i &lt; files.length; ++i) {</sfl></tu><tu PI="30" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>++i) {</sl><tl /><tsl /><prv /><sfl>for (var i = 0; i &lt; files.length; ++i) {</sfl></tu><tu PI="31" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>  console.log(files[i].path);</sl><tl /><tsl /><prv /><sfl>  console.log(files[i].path);</sfl></tu><tu PI="32" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>}</sl><tl /><tsl /><prv /><sfl>}</sfl></tu><tu PI="33" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="34" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Attribute: </sl><tl /><tsl /><prv /><sfl>### Attribute: `nwdirectory`</sfl></tu><tu PI="34" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`nwdirectory`</sl><tl /><tsl /><prv /><sfl>### Attribute: `nwdirectory`</sfl></tu><tu PI="35" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`nwdirectory` is a bit similar to `webkitdirectory`, but it returns the path of directory instead of returning files in it.</sl><tl /><tsl /><prv /><sfl>`nwdirectory` is a bit similar to `webkitdirectory`, but it returns the path of directory instead of returning files in it.</sfl></tu><tu PI="36" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>For example:</sl><tl /><tsl /><prv /><sfl>For example:</sfl></tu><tu PI="37" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```html</sl><tl /><tsl /><prv /><sfl>```html</sfl></tu><tu PI="38" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;input type="file" nwdirectory&gt;</sl><tl /><tsl /><prv /><sfl>&lt;input type="file" nwdirectory&gt;</sfl></tu><tu PI="39" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="40" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Attribute: </sl><tl /><tsl /><prv /><sfl>### Attribute: `nwsaveas`</sfl></tu><tu PI="40" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`nwsaveas`</sl><tl /><tsl /><prv /><sfl>### Attribute: `nwsaveas`</sfl></tu><tu PI="41" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`nwsaveas` will open a 'Save as' dialog, which lets user enter the path of a file. </sl><tl /><tsl /><prv /><sfl>`nwsaveas` will open a 'Save as' dialog, which lets user enter the path of a file. It's possible to select a non-existing file, which is different from the default file input tag.</sfl></tu><tu PI="41" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>It's possible to select a non-existing file, which is different from the default file input tag.</sl><tl /><tsl /><prv /><sfl>`nwsaveas` will open a 'Save as' dialog, which lets user enter the path of a file. It's possible to select a non-existing file, which is different from the default file input tag.</sfl></tu><tu PI="42" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>For example:</sl><tl /><tsl /><prv /><sfl>For example:</sfl></tu><tu PI="43" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```html</sl><tl /><tsl /><prv /><sfl>```html</sfl></tu><tu PI="44" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;input type="file" nwsaveas&gt;</sl><tl /><tsl /><prv /><sfl>&lt;input type="file" nwsaveas&gt;</sfl></tu><tu PI="45" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="46" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>And you can specify a value for the default file name to save:</sl><tl /><tsl /><prv /><sfl>And you can specify a value for the default file name to save:</sfl></tu><tu PI="47" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```html</sl><tl /><tsl /><prv /><sfl>```html</sfl></tu><tu PI="48" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;input type="file" nwsaveas="filename.txt"&gt;</sl><tl /><tsl /><prv /><sfl>&lt;input type="file" nwsaveas="filename.txt"&gt;</sfl></tu><tu PI="49" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="50" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Attribute: </sl><tl /><tsl /><prv /><sfl>### Attribute: `nwworkingdir`</sfl></tu><tu PI="50" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>`nwworkingdir`</sl><tl /><tsl /><prv /><sfl>### Attribute: `nwworkingdir`</sfl></tu><tu PI="51" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>With `nwworkingdir`, the file dialog starts in聽the聽given directory when the element is聽activated.</sl><tl /><tsl /><prv /><sfl>With `nwworkingdir`, the file dialog starts in聽the聽given directory when the element is聽activated.</sfl></tu><tu PI="52" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>For example, following code enables the file dialog opening in `/home/path/` by default:</sl><tl /><tsl /><prv /><sfl>For example, following code enables the file dialog opening in `/home/path/` by default:</sfl></tu><tu PI="53" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```html</sl><tl /><tsl /><prv /><sfl>```html</sfl></tu><tu PI="54" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>&lt;input type="file" nwworkingdir="/home/path/"&gt;</sl><tl /><tsl /><prv /><sfl>&lt;input type="file" nwworkingdir="/home/path/"&gt;</sfl></tu><tu PI="55" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>```</sl><tl /><tsl /><prv /><sfl>```</sfl></tu><tu PI="56" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## &amp;lt;iframe&amp;gt;</sl><tl /><tsl /><prv /><sfl>## &amp;lt;iframe&amp;gt;</sfl></tu><tu PI="57" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>NW.js extended `&lt;iframe&gt;` tag for easier developing native apps. </sl><tl /><tsl /><prv /><sfl>NW.js extended `&lt;iframe&gt;` tag for easier developing native apps. Thoses features enables apps to bypass the restrictions of Sandbox and Same Origin Policy etc.</sfl></tu><tu PI="57" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Thoses features enables apps to bypass the restrictions of Sandbox and Same Origin Policy etc.</sl><tl /><tsl /><prv /><sfl>NW.js extended `&lt;iframe&gt;` tag for easier developing native apps. Thoses features enables apps to bypass the restrictions of Sandbox and Same Origin Policy etc.</sfl></tu><tu PI="58" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See also [webview Tag](webview Tag.md) for the new `&lt;webview&gt;` tag.</sl><tl /><tsl /><prv /><sfl>See also [webview Tag](webview Tag.md) for the new `&lt;webview&gt;` tag.</sfl></tu><tu PI="59" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Attribute: </sl><tl /><tsl /><prv /><sfl>### Attribute: nwdisable</sfl></tu><tu PI="59" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>nwdisable</sl><tl /><tsl /><prv /><sfl>### Attribute: nwdisable</sfl></tu><tu PI="60" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Make the frame and subframes normal frames.</sl><tl /><tsl /><prv /><sfl>Make the frame and subframes normal frames.</sfl></tu><tu PI="61" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>!!! </sl><tl /><tsl /><prv /><sfl>!!! note</sfl></tu><tu PI="61" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>note</sl><tl /><tsl /><prv /><sfl>!!! note</sfl></tu><tu PI="62" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>    This attribute doesn't prevent the page in normal frames accessing its parent and top frames. </sl><tl /><tsl /><prv /><sfl>    This attribute doesn't prevent the page in normal frames accessing its parent and top frames. Then they can still get access to Node.js APIs. So usually you may want to use this attribute with `nwfaketop` togather.</sfl></tu><tu PI="62" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Then they can still get access to Node.js APIs. </sl><tl /><tsl /><prv /><sfl>    This attribute doesn't prevent the page in normal frames accessing its parent and top frames. Then they can still get access to Node.js APIs. So usually you may want to use this attribute with `nwfaketop` togather.</sfl></tu><tu PI="62" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>So usually you may want to use this attribute with `nwfaketop` togather.</sl><tl /><tsl /><prv /><sfl>    This attribute doesn't prevent the page in normal frames accessing its parent and top frames. Then they can still get access to Node.js APIs. So usually you may want to use this attribute with `nwfaketop` togather.</sfl></tu><tu PI="63" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Attribute: </sl><tl /><tsl /><prv /><sfl>### Attribute: nwfaketop</sfl></tu><tu PI="63" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>nwfaketop</sl><tl /><tsl /><prv /><sfl>### Attribute: nwfaketop</sfl></tu><tu PI="64" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Prevent web page in the frame accessing the real `window.parent` or `window.top`. </sl><tl /><tsl /><prv /><sfl>Prevent web page in the frame accessing the real `window.parent` or `window.top`. They will get the faked parent and top, which is its own `window` object of the frame. Subframes will also be affected.</sfl></tu><tu PI="64" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>They will get the faked parent and top, which is its own `window` object of the frame. </sl><tl /><tsl /><prv /><sfl>Prevent web page in the frame accessing the real `window.parent` or `window.top`. They will get the faked parent and top, which is its own `window` object of the frame. Subframes will also be affected.</sfl></tu><tu PI="64" MatchPercent="" Bindex="3" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Subframes will also be affected.</sl><tl /><tsl /><prv /><sfl>Prevent web page in the frame accessing the real `window.parent` or `window.top`. They will get the faked parent and top, which is its own `window` object of the frame. Subframes will also be affected.</sfl></tu><tu PI="65" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>This attribute is usually used with `nwdisable`.</sl><tl /><tsl /><prv /><sfl>This attribute is usually used with `nwdisable`.</sfl></tu><tu PI="66" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>### Attribute: </sl><tl /><tsl /><prv /><sfl>### Attribute: nwUserAgent</sfl></tu><tu PI="66" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>nwUserAgent</sl><tl /><tsl /><prv /><sfl>### Attribute: nwUserAgent</sfl></tu><tu PI="67" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>Override the default user-agent when loading the web page in the frame and sub frames. </sl><tl /><tsl /><prv /><sfl>Override the default user-agent when loading the web page in the frame and sub frames. See [`user-agent` in manifest](Manifest Format.md#user-agent) for details.</sfl></tu><tu PI="67" MatchPercent="" Bindex="2" IsVisible="False" TranStatus="" StateTranslation="False"><sl>See [`user-agent` in manifest](Manifest Format.md#user-agent) for details.</sl><tl /><tsl /><prv /><sfl>Override the default user-agent when loading the web page in the frame and sub frames. See [`user-agent` in manifest](Manifest Format.md#user-agent) for details.</sfl></tu><tu PI="68" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>## webview tag</sl><tl /><tsl /><prv /><sfl>## webview tag</sfl></tu><tu PI="69" MatchPercent="" Bindex="1" IsVisible="False" TranStatus="" StateTranslation="False"><sl>added some methods to [webview tag]((webview Tag.md)</sl><tl /><tsl /><prv /><sfl>added some methods to [webview tag]((webview Tag.md)</sfl></tu></body></Transmate>